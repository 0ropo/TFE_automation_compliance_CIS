
#- name: Tâche connexion appareil cisco
#  connection:local
#  become: yes


- name: récupération de la configuration sur la machine

  cisco.ios.ios_command:
    commands: show running-config
  register: running_config

- name: affichage du show run
  debug:
    var: running_config 

- name: Sauvegarde de la config 
  copy:
    content: "{{ running_config.stdout[0] }}"
    dest: "{{ansible_config_file | dirname}}/config/{{ inventory_hostname }}_running_config.txt"
  
- name: Destination du rapport CIS
  set_fact:
    host_config: "{{lookup('file','config/' + inventory_hostname + '_running_config.txt')}}"
    ref_cis_ios17: "{{lookup('file', ansible_config_file | dirname ~ '/cis_ios17_complet.yml')| from_yaml }}"

- name: Génération du rapport
  ansible.builtin.template:
    src : "{{ ansible_config_file | dirname }}/roles/cisco/templates/template_rapport.jinja"
    dest : "{{ ansible_config_file | dirname }}/rapport/{{ inventory_hostname }}_rapport.txt"
  
- name: Affichage du rapport
  debug:
    var: lookup('file', (ansible_config_file | dirname) + '/rapport/' + inventory_hostname + '_rapport.txt')
  
- name: commandes manquantes only
  ansible.builtin.template:
    src : "{{ ansible_config_file | dirname }}/roles/cisco/templates/liste_commandes_nok.jinja"
    dest : "{{ ansible_config_file | dirname }}/rapport/{{ inventory_hostname }}_nok.txt"
  