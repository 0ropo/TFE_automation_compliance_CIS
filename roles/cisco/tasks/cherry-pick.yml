

- name: Cherry-picking des commandes à ajouter en fonction de leurs numéros/titres
  pause:
    prompt: "Veuillez enter le numéro de la commande manquante à corriger(ex: 1.1.1,1.2.3)"
  register: user_titre_num


- name: Convertir les titres en liste
  set_fact:
    titre_num: "{{ user_titre_num.user_input.split(',') | map('trim') | list }}"

- name: Récupération de la commande à partir du titre
  set_fact:
    commandes: "{{titre_num | map('extract', cis_rules) | map(attribute='commande') | reject('equalto', None) | list }}"

- name: Afficher les commandes users
  debug:
    msg: "{{ commandes }}"

- name: Récupération des paramètres pour une commande (laisser vide si pas de paramètres)
  pause:
    prompt: "Veuillez entrer les paramètres de la commande (laisser vide si pas de paramètres)"
  register: user_params

- name: Concat commande et paramètres
  set_fact:
    commandes_param: "{{ commandes | map('regex_replace', '$', ' ' ~ user_params.user_input | default('')) | list }}"

- name: Appliquer la modification sur la configuration
  cisco.ios.ios_config:
    commands: "{{ commandes_param }}"
