2025-06-12 17:43:53,741 p=89533 u=0ropo n=ansible INFO| Encryption successful
2025-06-12 17:47:28,850 p=94593 u=0ropo n=ansible INFO| Decryption successful
2025-06-12 17:49:53,105 p=97022 u=0ropo n=ansible INFO| Encryption successful
2025-06-12 18:15:13,542 p=14105 u=0ropo n=ansible INFO| Decryption successful
2025-06-12 18:15:43,871 p=14622 u=0ropo n=ansible INFO| Encryption successful
2025-06-12 18:17:24,728 p=16927 u=0ropo n=ansible INFO| Decryption successful
2025-06-12 18:24:31,651 p=24877 u=0ropo n=ansible INFO| Encryption successful
2025-06-12 18:40:24,343 p=41416 u=0ropo n=ansible INFO| Decryption successful
2025-06-12 18:48:05,798 p=49105 u=0ropo n=ansible INFO| Encryption successful
2025-06-12 18:49:26,290 p=51107 u=0ropo n=ansible INFO| Decryption successful
2025-06-12 18:49:36,396 p=51314 u=0ropo n=ansible INFO| Encryption successful
2025-06-12 19:21:30,473 p=83739 u=0ropo n=ansible INFO| Decryption successful
2025-06-12 19:30:24,686 p=92759 u=0ropo n=ansible INFO| Encryption successful
2025-06-12 19:31:06,665 p=8385 u=user n=ansible | [WARNING]: Error in vault password prompt (default): Invalid vault password was provided

2025-06-12 19:31:06,665 p=8385 u=user n=ansible | ERROR! Invalid vault password was provided
2025-06-12 19:31:11,176 p=8386 u=user n=ansible | Decryption successful
2025-06-12 19:31:40,483 p=8390 u=user n=ansible |  [ERROR]: User interrupted execution

2025-06-12 19:32:03,326 p=8394 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 19:32:03,332 p=8394 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 19:32:03,663 p=8397 u=user n=ansible | network_os is set to ios
2025-06-12 19:32:03,665 p=8397 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 19:32:04,133 p=8401 u=user n=p=8401 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 19:32:04,399 p=8401 u=user n=p=8401 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 19:32:06,401 p=8401 u=user n=p=8401 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 19:32:06,404 p=8401 u=user n=p=8401 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 19:32:06,527 p=8394 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 19:32:06,528 p=8394 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 19:32:06,528 p=8394 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 19:32:36,513 p=8401 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 19:32:36,614 p=8401 u=user n=ansible | shutdown complete
2025-06-12 19:42:20,937 p=8547 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 19:42:20,943 p=8547 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 19:42:21,285 p=8550 u=user n=ansible | network_os is set to ios
2025-06-12 19:42:21,287 p=8550 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 19:42:21,762 p=8554 u=user n=p=8554 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 19:42:22,029 p=8554 u=user n=p=8554 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 19:42:24,041 p=8554 u=user n=p=8554 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 19:42:24,044 p=8554 u=user n=p=8554 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 19:42:24,164 p=8547 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 19:42:24,165 p=8547 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 19:42:24,165 p=8547 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 19:42:46,347 p=8580 u=user n=ansible | PLAY [Détection manuelle d'informations système Cisco] *********************************************************************************************
2025-06-12 19:42:46,363 p=8580 u=user n=ansible | TASK [Affiche le hostname] *************************************************************************************************************************
2025-06-12 19:42:46,689 p=8583 u=user n=ansible | network_os is set to ios
2025-06-12 19:42:46,941 p=8587 u=user n=p=8587 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 19:42:47,206 p=8587 u=user n=p=8587 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 19:42:49,211 p=8587 u=user n=p=8587 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 19:42:49,214 p=8587 u=user n=p=8587 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 19:42:49,331 p=8580 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 19:42:49,333 p=8580 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 19:42:49,333 p=8580 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 19:42:49,432 p=8587 u=user n=ansible | shutdown complete
2025-06-12 19:42:54,153 p=8554 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 19:42:54,254 p=8554 u=user n=ansible | shutdown complete
2025-06-12 19:43:10,639 p=8608 u=user n=ansible | PLAY [Détection manuelle d'informations système Cisco] *********************************************************************************************
2025-06-12 19:43:10,653 p=8608 u=user n=ansible | TASK [Affiche le hostname] *************************************************************************************************************************
2025-06-12 19:43:10,984 p=8611 u=user n=ansible | network_os is set to ios
2025-06-12 19:43:11,232 p=8615 u=user n=p=8615 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 19:43:11,495 p=8615 u=user n=p=8615 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 19:43:13,499 p=8615 u=user n=p=8615 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 19:43:13,502 p=8615 u=user n=p=8615 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 19:43:13,624 p=8608 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 19:43:13,625 p=8608 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 19:43:13,625 p=8608 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 19:43:13,725 p=8615 u=user n=ansible | shutdown complete
2025-06-12 19:47:16,639 p=8659 u=user n=ansible | ansible 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 19:47:16,639 p=8659 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 19:47:16,643 p=8659 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 19:47:16,644 p=8659 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 19:47:16,646 p=8659 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 19:47:16,647 p=8659 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 19:47:16,658 p=8659 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 19:47:16,658 p=8659 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 19:47:16,658 p=8659 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 19:47:16,684 p=8659 u=user n=ansible | META: ran handlers
2025-06-12 19:47:16,695 p=8661 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 19:47:16,717 p=8661 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 19:47:16,722 p=8661 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 19:47:16,727 p=8661 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 19:47:16,987 p=8665 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 19:47:17,001 p=8665 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 19:47:17,005 p=8665 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 19:47:17,049 p=8661 u=user n=ansible | network_os is set to ios
2025-06-12 19:47:17,127 p=8661 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 19:47:17,127 p=8661 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 19:47:17,127 p=8661 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 19:47:17,131 p=8661 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 19:47:17,155 p=8661 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/ping.py
2025-06-12 19:47:17,155 p=8661 u=user n=ansible | Pipelining is enabled.
2025-06-12 19:47:17,155 p=8661 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 19:47:17,260 p=8659 u=user n=ansible | 192.168.122.237 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "invocation": {
        "module_args": {
            "data": "pong"
        }
    },
    "ping": "pong"
}
2025-06-12 19:47:17,264 p=8659 u=user n=ansible | META: ran handlers
2025-06-12 19:47:17,268 p=8659 u=user n=ansible | META: ran handlers
2025-06-12 19:47:17,370 p=8665 u=user n=ansible | shutdown complete
2025-06-12 19:49:38,770 p=8696 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 19:49:38,775 p=8696 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 19:49:39,109 p=8699 u=user n=ansible | network_os is set to ios
2025-06-12 19:49:39,110 p=8699 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 19:49:39,590 p=8703 u=user n=p=8703 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 19:49:39,855 p=8703 u=user n=p=8703 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 19:49:41,858 p=8703 u=user n=p=8703 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 19:49:41,862 p=8703 u=user n=p=8703 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 19:49:41,982 p=8696 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 19:49:41,982 p=8696 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 19:49:41,982 p=8696 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 19:50:11,963 p=8703 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 19:50:12,064 p=8703 u=user n=ansible | shutdown complete
2025-06-12 19:55:54,283 p=8777 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 19:55:54,288 p=8777 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 19:55:54,624 p=8780 u=user n=ansible | network_os is set to ios
2025-06-12 19:55:54,626 p=8780 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 19:55:55,096 p=8784 u=user n=p=8784 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 19:55:55,359 p=8784 u=user n=p=8784 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 19:55:57,362 p=8784 u=user n=p=8784 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 19:55:57,366 p=8784 u=user n=p=8784 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 19:55:57,488 p=8777 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 19:55:57,488 p=8777 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 19:55:57,489 p=8777 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 19:56:27,475 p=8784 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 19:56:27,575 p=8784 u=user n=ansible | shutdown complete
2025-06-12 19:56:57,310 p=8805 u=user n=ansible | ansible 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 19:56:57,310 p=8805 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 19:56:57,314 p=8805 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 19:56:57,314 p=8805 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 19:56:57,316 p=8805 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 19:56:57,316 p=8805 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 19:56:57,325 p=8805 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 19:56:57,326 p=8805 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 19:56:57,326 p=8805 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 19:56:57,352 p=8805 u=user n=ansible | META: ran handlers
2025-06-12 19:56:57,358 p=8807 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 19:56:57,379 p=8807 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 19:56:57,382 p=8807 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 19:56:57,385 p=8807 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 19:56:57,635 p=8811 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 19:56:57,650 p=8811 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 19:56:57,655 p=8811 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 19:56:57,697 p=8807 u=user n=ansible | network_os is set to ios
2025-06-12 19:56:57,771 p=8807 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 19:56:57,772 p=8807 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 19:56:57,772 p=8807 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 19:56:57,774 p=8807 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 19:56:57,799 p=8807 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/ping.py
2025-06-12 19:56:57,799 p=8807 u=user n=ansible | Pipelining is enabled.
2025-06-12 19:56:57,799 p=8807 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 19:56:57,897 p=8805 u=user n=ansible | 192.168.122.237 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "invocation": {
        "module_args": {
            "data": "pong"
        }
    },
    "ping": "pong"
}
2025-06-12 19:56:57,900 p=8805 u=user n=ansible | META: ran handlers
2025-06-12 19:56:57,901 p=8805 u=user n=ansible | META: ran handlers
2025-06-12 19:56:58,003 p=8811 u=user n=ansible | shutdown complete
2025-06-12 20:03:03,570 p=8988 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:03:03,575 p=8988 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:03:03,912 p=8991 u=user n=ansible | network_os is set to ios
2025-06-12 20:03:03,914 p=8991 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:03:04,379 p=8995 u=user n=p=8995 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:03:04,645 p=8995 u=user n=p=8995 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:03:06,647 p=8995 u=user n=p=8995 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:03:06,650 p=8995 u=user n=p=8995 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:03:06,780 p=8988 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:03:06,781 p=8988 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:03:06,781 p=8988 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:03:36,762 p=8995 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:03:36,863 p=8995 u=user n=ansible | shutdown complete
2025-06-12 20:05:07,120 p=9025 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:05:07,126 p=9025 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:05:07,450 p=9028 u=user n=ansible | network_os is set to ios
2025-06-12 20:05:07,452 p=9028 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:05:07,918 p=9032 u=user n=p=9032 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:05:08,182 p=9032 u=user n=p=9032 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:05:10,198 p=9032 u=user n=p=9032 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:05:10,201 p=9032 u=user n=p=9032 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:05:10,322 p=9025 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:05:10,323 p=9025 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:05:10,323 p=9025 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:05:40,312 p=9032 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:05:40,413 p=9032 u=user n=ansible | shutdown complete
2025-06-12 20:05:46,880 p=9053 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:05:46,880 p=9053 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:05:46,884 p=9053 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:05:46,884 p=9053 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:05:46,886 p=9053 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:05:46,886 p=9053 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:05:46,976 p=9053 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:05:46,982 p=9053 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:05:46,986 p=9053 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:05:46,986 p=9053 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:05:46,986 p=9053 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:05:46,986 p=9053 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:05:46,986 p=9053 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:05:46,987 p=9053 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:05:46,993 p=9053 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:05:46,998 p=9056 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:05:47,009 p=9056 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:05:47,016 p=9056 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:05:47,019 p=9056 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:05:47,277 p=9060 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:05:47,292 p=9060 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:05:47,296 p=9060 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:05:47,339 p=9056 u=user n=ansible | network_os is set to ios
2025-06-12 20:05:47,340 p=9056 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:05:47,342 p=9056 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:05:47,520 p=9056 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:05:47,520 p=9056 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:05:47,521 p=9056 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:05:47,523 p=9056 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:05:47,549 p=9056 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:05:47,549 p=9056 u=user n=ansible | Pipelining is enabled.
2025-06-12 20:05:47,549 p=9056 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:05:47,809 p=9060 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:05:47,818 p=9060 u=user n=p=9060 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:05:48,084 p=9060 u=user n=p=9060 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:05:50,086 p=9060 u=user n=p=9060 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:05:50,089 p=9060 u=user n=p=9060 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:05:50,195 p=9060 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:05:50,214 p=9053 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_oetit2p7/ansible_ansible.legacy.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_oetit2p7/ansible_ansible.legacy.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:05:50,215 p=9053 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:05:50,215 p=9053 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:06:20,195 p=9060 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:06:20,296 p=9060 u=user n=ansible | shutdown complete
2025-06-12 20:06:50,760 p=9086 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:06:50,760 p=9086 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:06:50,763 p=9086 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:06:50,764 p=9086 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:06:50,765 p=9086 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:06:50,765 p=9086 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:06:50,855 p=9086 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:06:50,861 p=9086 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:06:50,865 p=9086 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:06:50,865 p=9086 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:06:50,865 p=9086 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:06:50,865 p=9086 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:06:50,866 p=9086 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:06:50,867 p=9086 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:06:50,873 p=9086 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:06:50,877 p=9089 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:06:50,889 p=9089 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:06:50,895 p=9089 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:06:50,898 p=9089 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:06:51,152 p=9093 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:06:51,166 p=9093 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:06:51,171 p=9093 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:06:51,213 p=9089 u=user n=ansible | network_os is set to ios
2025-06-12 20:06:51,214 p=9089 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:06:51,214 p=9089 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:06:51,214 p=9089 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-9086z25gnqbi `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-9086z25gnqbi/ansible-tmp-1749751611.2143424-9089-148217269440445 `" && echo ansible-tmp-1749751611.2143424-9089-148217269440445="` echo /home/user/.ansible/tmp/ansible-local-9086z25gnqbi/ansible-tmp-1749751611.2143424-9089-148217269440445 `" ) && sleep 0'
2025-06-12 20:06:51,221 p=9089 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:06:51,404 p=9089 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:06:51,404 p=9089 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:06:51,407 p=9089 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:06:51,432 p=9089 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:06:51,433 p=9089 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9086z25gnqbi/tmpn8xmz2ck TO /home/user/.ansible/tmp/ansible-local-9086z25gnqbi/ansible-tmp-1749751611.2143424-9089-148217269440445/AnsiballZ_ios_facts.py
2025-06-12 20:06:51,433 p=9089 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-9086z25gnqbi/ansible-tmp-1749751611.2143424-9089-148217269440445/ /home/user/.ansible/tmp/ansible-local-9086z25gnqbi/ansible-tmp-1749751611.2143424-9089-148217269440445/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:06:51,436 p=9089 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-9086z25gnqbi/ansible-tmp-1749751611.2143424-9089-148217269440445/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:06:51,685 p=9093 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:06:51,694 p=9093 u=user n=p=9093 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:06:51,962 p=9093 u=user n=p=9093 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:06:53,966 p=9093 u=user n=p=9093 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:06:53,969 p=9093 u=user n=p=9093 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:06:54,070 p=9093 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:06:54,085 p=9089 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-9086z25gnqbi/ansible-tmp-1749751611.2143424-9089-148217269440445/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:06:54,093 p=9086 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_v_bw_si4/ansible_ansible.legacy.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_v_bw_si4/ansible_ansible.legacy.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:06:54,094 p=9086 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:06:54,094 p=9086 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:07:24,070 p=9093 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:07:24,171 p=9093 u=user n=ansible | shutdown complete
2025-06-12 20:07:51,604 p=9134 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:07:51,604 p=9134 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:07:51,608 p=9134 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:07:51,608 p=9134 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:07:51,610 p=9134 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:07:51,610 p=9134 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:07:51,697 p=9134 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:07:51,703 p=9134 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:07:51,708 p=9134 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:07:51,708 p=9134 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:07:51,708 p=9134 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:07:51,708 p=9134 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:07:51,708 p=9134 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:07:51,709 p=9134 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:07:51,714 p=9134 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:07:51,720 p=9137 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:07:51,733 p=9137 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:07:51,739 p=9137 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:07:51,742 p=9137 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:07:52,009 p=9141 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:07:52,022 p=9141 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:07:52,026 p=9141 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:07:52,066 p=9137 u=user n=ansible | network_os is set to ios
2025-06-12 20:07:52,067 p=9137 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:07:52,068 p=9137 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:07:52,068 p=9137 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-9134m5bqj39c `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-9134m5bqj39c/ansible-tmp-1749751672.0681014-9137-164677226164523 `" && echo ansible-tmp-1749751672.0681014-9137-164677226164523="` echo /home/user/.ansible/tmp/ansible-local-9134m5bqj39c/ansible-tmp-1749751672.0681014-9137-164677226164523 `" ) && sleep 0'
2025-06-12 20:07:52,074 p=9137 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:07:52,255 p=9137 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:07:52,256 p=9137 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:07:52,258 p=9137 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:07:52,283 p=9137 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:07:52,283 p=9137 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9134m5bqj39c/tmp9mnyx4c1 TO /home/user/.ansible/tmp/ansible-local-9134m5bqj39c/ansible-tmp-1749751672.0681014-9137-164677226164523/AnsiballZ_ios_facts.py
2025-06-12 20:07:52,284 p=9137 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-9134m5bqj39c/ansible-tmp-1749751672.0681014-9137-164677226164523/ /home/user/.ansible/tmp/ansible-local-9134m5bqj39c/ansible-tmp-1749751672.0681014-9137-164677226164523/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:07:52,285 p=9137 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-9134m5bqj39c/ansible-tmp-1749751672.0681014-9137-164677226164523/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:07:52,533 p=9141 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:07:52,542 p=9141 u=user n=p=9141 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:07:52,808 p=9141 u=user n=p=9141 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:07:54,810 p=9141 u=user n=p=9141 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:07:54,814 p=9141 u=user n=p=9141 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:07:54,917 p=9141 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 805, in _auth
    self._transport.auth_password(username, password)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1627, in auth_password
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:07:54,932 p=9137 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-9134m5bqj39c/ansible-tmp-1749751672.0681014-9137-164677226164523/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:07:54,940 p=9134 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_d6hu9_gr/ansible_ansible.legacy.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_d6hu9_gr/ansible_ansible.legacy.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:07:54,942 p=9134 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:07:54,942 p=9134 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:08:12,901 p=9176 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:08:12,901 p=9176 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:08:12,905 p=9176 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:08:12,905 p=9176 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:08:12,907 p=9176 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:08:12,907 p=9176 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:08:12,996 p=9176 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:08:13,002 p=9176 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:08:13,006 p=9176 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:08:13,007 p=9176 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:08:13,007 p=9176 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:08:13,007 p=9176 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:08:13,007 p=9176 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:08:13,008 p=9176 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:08:13,013 p=9176 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:08:13,018 p=9179 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:08:13,031 p=9179 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:08:13,037 p=9179 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:08:13,040 p=9179 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:08:13,289 p=9183 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:08:13,302 p=9183 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:08:13,307 p=9183 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:08:13,350 p=9179 u=user n=ansible | network_os is set to ios
2025-06-12 20:08:13,351 p=9179 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:08:13,351 p=9179 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:08:13,352 p=9179 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-91769e5gbs7b `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-91769e5gbs7b/ansible-tmp-1749751693.3517792-9179-9055428367016 `" && echo ansible-tmp-1749751693.3517792-9179-9055428367016="` echo /home/user/.ansible/tmp/ansible-local-91769e5gbs7b/ansible-tmp-1749751693.3517792-9179-9055428367016 `" ) && sleep 0'
2025-06-12 20:08:13,357 p=9179 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:08:13,543 p=9179 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:08:13,543 p=9179 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:08:13,546 p=9179 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:08:13,569 p=9179 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:08:13,569 p=9179 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-91769e5gbs7b/tmp8lgl0j0a TO /home/user/.ansible/tmp/ansible-local-91769e5gbs7b/ansible-tmp-1749751693.3517792-9179-9055428367016/AnsiballZ_ios_facts.py
2025-06-12 20:08:13,570 p=9179 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-91769e5gbs7b/ansible-tmp-1749751693.3517792-9179-9055428367016/ /home/user/.ansible/tmp/ansible-local-91769e5gbs7b/ansible-tmp-1749751693.3517792-9179-9055428367016/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:08:13,572 p=9179 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-91769e5gbs7b/ansible-tmp-1749751693.3517792-9179-9055428367016/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:08:13,830 p=9183 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:08:13,840 p=9183 u=user n=p=9183 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:08:14,109 p=9183 u=user n=p=9183 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:08:16,111 p=9183 u=user n=p=9183 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:08:16,114 p=9183 u=user n=p=9183 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:08:16,215 p=9183 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:08:16,230 p=9179 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-91769e5gbs7b/ansible-tmp-1749751693.3517792-9179-9055428367016/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:08:16,239 p=9176 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_rjlpc268/ansible_ansible.legacy.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_rjlpc268/ansible_ansible.legacy.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:08:16,240 p=9176 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:08:16,240 p=9176 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:08:24,924 p=9141 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:08:25,026 p=9141 u=user n=ansible | shutdown complete
2025-06-12 20:08:46,215 p=9183 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:08:46,316 p=9183 u=user n=ansible | shutdown complete
2025-06-12 20:09:12,151 p=9222 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:09:12,151 p=9222 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:09:12,155 p=9222 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:09:12,155 p=9222 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:09:12,157 p=9222 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:09:12,157 p=9222 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:09:12,243 p=9222 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:09:12,249 p=9222 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:09:12,253 p=9222 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:09:12,253 p=9222 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:09:12,253 p=9222 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:09:12,253 p=9222 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:09:12,253 p=9222 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:09:12,254 p=9222 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:09:12,259 p=9222 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:09:12,264 p=9225 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:09:12,274 p=9225 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:09:12,279 p=9225 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:09:12,282 p=9225 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:09:12,530 p=9229 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:09:12,544 p=9229 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:09:12,547 p=9229 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:09:12,588 p=9225 u=user n=ansible | network_os is set to ios
2025-06-12 20:09:12,589 p=9225 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:09:12,590 p=9225 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:09:12,590 p=9225 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-9222layga22d `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-9222layga22d/ansible-tmp-1749751752.5900133-9225-228828853915646 `" && echo ansible-tmp-1749751752.5900133-9225-228828853915646="` echo /home/user/.ansible/tmp/ansible-local-9222layga22d/ansible-tmp-1749751752.5900133-9225-228828853915646 `" ) && sleep 0'
2025-06-12 20:09:12,595 p=9225 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:09:12,775 p=9225 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:09:12,775 p=9225 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:09:12,778 p=9225 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:09:12,801 p=9225 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:09:12,801 p=9225 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9222layga22d/tmpqb6koz0t TO /home/user/.ansible/tmp/ansible-local-9222layga22d/ansible-tmp-1749751752.5900133-9225-228828853915646/AnsiballZ_ios_facts.py
2025-06-12 20:09:12,802 p=9225 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-9222layga22d/ansible-tmp-1749751752.5900133-9225-228828853915646/ /home/user/.ansible/tmp/ansible-local-9222layga22d/ansible-tmp-1749751752.5900133-9225-228828853915646/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:09:12,805 p=9225 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-9222layga22d/ansible-tmp-1749751752.5900133-9225-228828853915646/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:09:13,052 p=9229 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:09:13,062 p=9229 u=user n=p=9229 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:09:13,329 p=9229 u=user n=p=9229 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:09:15,331 p=9229 u=user n=p=9229 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:09:15,432 p=9229 u=user n=p=9229 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:09:15,433 p=9229 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:09:15,448 p=9225 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-9222layga22d/ansible-tmp-1749751752.5900133-9225-228828853915646/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:09:15,457 p=9222 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_ql6uqniz/ansible_ansible.legacy.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_ql6uqniz/ansible_ansible.legacy.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:09:15,458 p=9222 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:09:15,458 p=9222 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:09:45,437 p=9229 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:09:45,538 p=9229 u=user n=ansible | shutdown complete
2025-06-12 20:10:14,406 p=9279 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:10:14,406 p=9279 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:10:14,409 p=9279 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:10:14,410 p=9279 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:10:14,411 p=9279 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:10:14,411 p=9279 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:10:14,497 p=9279 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:10:14,504 p=9279 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:10:14,508 p=9279 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:10:14,508 p=9279 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:10:14,508 p=9279 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:10:14,508 p=9279 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:10:14,508 p=9279 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:10:14,509 p=9279 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:10:14,514 p=9279 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:10:14,520 p=9282 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:10:14,532 p=9282 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:10:14,537 p=9282 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:10:14,540 p=9282 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:10:14,788 p=9286 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:10:14,803 p=9286 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:10:14,808 p=9286 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:10:14,850 p=9282 u=user n=ansible | network_os is set to ios
2025-06-12 20:10:14,851 p=9282 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:10:14,852 p=9282 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:10:14,852 p=9282 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-9279ayyl877c `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-9279ayyl877c/ansible-tmp-1749751814.8518484-9282-220275543952150 `" && echo ansible-tmp-1749751814.8518484-9282-220275543952150="` echo /home/user/.ansible/tmp/ansible-local-9279ayyl877c/ansible-tmp-1749751814.8518484-9282-220275543952150 `" ) && sleep 0'
2025-06-12 20:10:14,857 p=9282 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:10:15,045 p=9282 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:10:15,045 p=9282 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:10:15,047 p=9282 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:10:15,071 p=9282 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:10:15,072 p=9282 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9279ayyl877c/tmpvs8iyg02 TO /home/user/.ansible/tmp/ansible-local-9279ayyl877c/ansible-tmp-1749751814.8518484-9282-220275543952150/AnsiballZ_ios_facts.py
2025-06-12 20:10:15,072 p=9282 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-9279ayyl877c/ansible-tmp-1749751814.8518484-9282-220275543952150/ /home/user/.ansible/tmp/ansible-local-9279ayyl877c/ansible-tmp-1749751814.8518484-9282-220275543952150/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:10:15,074 p=9282 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-9279ayyl877c/ansible-tmp-1749751814.8518484-9282-220275543952150/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:10:15,327 p=9286 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:10:15,335 p=9286 u=user n=p=9286 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:10:15,598 p=9286 u=user n=p=9286 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:10:15,605 p=9286 u=user n=p=9286 u=user | paramiko [192.168.122.237] | Authentication (password) successful!
2025-06-12 20:10:17,448 p=9282 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-9279ayyl877c/ansible-tmp-1749751814.8518484-9282-220275543952150/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:10:17,453 p=9279 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 20:10:17,456 p=9279 u=user n=ansible | META: ran handlers
2025-06-12 20:10:17,459 p=9279 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 20:10:17,476 p=9319 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:10:17,486 p=9319 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:10:17,490 p=9319 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:10:17,493 p=9319 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:10:17,775 p=9279 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 20:10:17,777 p=9279 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 20:10:17,795 p=9322 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:10:17,809 p=9322 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:10:17,813 p=9322 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:10:17,816 p=9322 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:10:18,109 p=9279 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 20:10:18,111 p=9279 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 20:10:18,131 p=9279 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 20:10:18,134 p=9279 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 20:10:18,163 p=9279 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 20:10:18,169 p=9329 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:10:18,182 p=9329 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:10:18,187 p=9329 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:10:18,191 p=9329 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:10:18,475 p=9329 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 20:10:48,447 p=9286 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:10:48,548 p=9286 u=user n=ansible | shutdown complete
2025-06-12 20:11:40,072 p=9329 u=user n=ansible | Press 'C' to continue the play or 'A' to abort 
2025-06-12 20:11:42,857 p=9279 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => 
  msg: user requested abort!
2025-06-12 20:11:42,857 p=9279 u=user n=ansible | NO MORE HOSTS LEFT *********************************************************************************************************************************
2025-06-12 20:11:42,858 p=9279 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:11:42,858 p=9279 u=user n=ansible | 192.168.122.237            : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 20:12:18,157 p=9351 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:12:18,157 p=9351 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:12:18,162 p=9351 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:12:18,162 p=9351 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:12:18,164 p=9351 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:12:18,164 p=9351 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:12:18,254 p=9351 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:12:18,261 p=9351 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:12:18,265 p=9351 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:12:18,265 p=9351 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:12:18,265 p=9351 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:12:18,266 p=9351 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:12:18,266 p=9351 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:12:18,267 p=9351 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:12:18,272 p=9351 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:12:18,278 p=9354 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:12:18,288 p=9354 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:12:18,293 p=9354 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:12:18,296 p=9354 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:12:18,556 p=9358 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:12:18,569 p=9358 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:12:18,573 p=9358 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:12:18,615 p=9354 u=user n=ansible | network_os is set to ios
2025-06-12 20:12:18,616 p=9354 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:12:18,617 p=9354 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:12:18,617 p=9354 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-9351x7si3ylb `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-9351x7si3ylb/ansible-tmp-1749751938.616914-9354-56855443121640 `" && echo ansible-tmp-1749751938.616914-9354-56855443121640="` echo /home/user/.ansible/tmp/ansible-local-9351x7si3ylb/ansible-tmp-1749751938.616914-9354-56855443121640 `" ) && sleep 0'
2025-06-12 20:12:18,622 p=9354 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:12:18,805 p=9354 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:12:18,805 p=9354 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:12:18,808 p=9354 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:12:18,834 p=9354 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:12:18,835 p=9354 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9351x7si3ylb/tmpyd8qytv0 TO /home/user/.ansible/tmp/ansible-local-9351x7si3ylb/ansible-tmp-1749751938.616914-9354-56855443121640/AnsiballZ_ios_facts.py
2025-06-12 20:12:18,835 p=9354 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-9351x7si3ylb/ansible-tmp-1749751938.616914-9354-56855443121640/ /home/user/.ansible/tmp/ansible-local-9351x7si3ylb/ansible-tmp-1749751938.616914-9354-56855443121640/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:12:18,838 p=9354 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-9351x7si3ylb/ansible-tmp-1749751938.616914-9354-56855443121640/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:12:19,084 p=9358 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:12:19,093 p=9358 u=user n=p=9358 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:12:19,359 p=9358 u=user n=p=9358 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:12:21,362 p=9358 u=user n=p=9358 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:12:21,365 p=9358 u=user n=p=9358 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:12:21,468 p=9358 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 805, in _auth
    self._transport.auth_password(username, password)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1627, in auth_password
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:12:21,484 p=9354 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-9351x7si3ylb/ansible-tmp-1749751938.616914-9354-56855443121640/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:12:21,490 p=9351 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_zwgpe2md/ansible_ansible.legacy.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_zwgpe2md/ansible_ansible.legacy.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:12:21,491 p=9351 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:12:21,491 p=9351 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:12:51,468 p=9358 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:12:51,570 p=9358 u=user n=ansible | shutdown complete
2025-06-12 20:16:33,982 p=9424 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:16:33,982 p=9424 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:16:33,986 p=9424 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:16:33,986 p=9424 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:16:33,988 p=9424 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:16:33,988 p=9424 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:16:34,079 p=9424 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:16:34,085 p=9424 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:16:34,089 p=9424 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:16:34,089 p=9424 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:16:34,089 p=9424 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:16:34,089 p=9424 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:16:34,089 p=9424 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:16:34,091 p=9424 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:16:34,096 p=9424 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:16:34,101 p=9427 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:16:34,111 p=9427 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:16:34,115 p=9427 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:16:34,120 p=9427 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:16:34,364 p=9431 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:16:34,378 p=9431 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:16:34,382 p=9431 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:16:34,427 p=9427 u=user n=ansible | network_os is set to ios
2025-06-12 20:16:34,428 p=9427 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:16:34,428 p=9427 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:16:34,428 p=9427 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-94243jxw4n7y `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-94243jxw4n7y/ansible-tmp-1749752194.4283445-9427-122034292350960 `" && echo ansible-tmp-1749752194.4283445-9427-122034292350960="` echo /home/user/.ansible/tmp/ansible-local-94243jxw4n7y/ansible-tmp-1749752194.4283445-9427-122034292350960 `" ) && sleep 0'
2025-06-12 20:16:34,434 p=9427 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:16:34,615 p=9427 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:16:34,615 p=9427 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:16:34,617 p=9427 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:16:34,644 p=9427 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:16:34,644 p=9427 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-94243jxw4n7y/tmpjdgymu78 TO /home/user/.ansible/tmp/ansible-local-94243jxw4n7y/ansible-tmp-1749752194.4283445-9427-122034292350960/AnsiballZ_ios_facts.py
2025-06-12 20:16:34,645 p=9427 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-94243jxw4n7y/ansible-tmp-1749752194.4283445-9427-122034292350960/ /home/user/.ansible/tmp/ansible-local-94243jxw4n7y/ansible-tmp-1749752194.4283445-9427-122034292350960/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:16:34,647 p=9427 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-94243jxw4n7y/ansible-tmp-1749752194.4283445-9427-122034292350960/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:16:34,904 p=9431 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:16:34,913 p=9431 u=user n=p=9431 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:16:35,180 p=9431 u=user n=p=9431 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:16:37,183 p=9431 u=user n=p=9431 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:16:37,187 p=9431 u=user n=p=9431 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:16:37,287 p=9431 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 805, in _auth
    self._transport.auth_password(username, password)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1627, in auth_password
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:16:37,302 p=9427 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-94243jxw4n7y/ansible-tmp-1749752194.4283445-9427-122034292350960/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:16:37,309 p=9424 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_2065zi_w/ansible_ansible.legacy.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_2065zi_w/ansible_ansible.legacy.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:16:37,310 p=9424 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:16:37,310 p=9424 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:17:07,296 p=9431 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:17:07,398 p=9431 u=user n=ansible | shutdown complete
2025-06-12 20:19:51,289 p=9492 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:19:51,289 p=9492 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:19:51,293 p=9492 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:19:51,293 p=9492 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:19:51,295 p=9492 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:19:51,296 p=9492 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:19:51,394 p=9492 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:19:51,400 p=9492 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:19:51,406 p=9492 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:19:51,406 p=9492 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:19:51,407 p=9492 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:19:51,407 p=9492 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:19:51,407 p=9492 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:19:51,408 p=9492 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:19:51,417 p=9492 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:19:51,423 p=9495 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:19:51,438 p=9495 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:19:51,442 p=9495 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:19:51,446 p=9495 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:19:51,778 p=9499 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:19:51,811 p=9499 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:19:51,822 p=9499 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:19:51,989 p=9495 u=user n=ansible | network_os is set to ios
2025-06-12 20:19:51,991 p=9495 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:19:51,991 p=9495 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:19:51,991 p=9495 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-94922jrila0a `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-94922jrila0a/ansible-tmp-1749752391.99114-9495-198131450740160 `" && echo ansible-tmp-1749752391.99114-9495-198131450740160="` echo /home/user/.ansible/tmp/ansible-local-94922jrila0a/ansible-tmp-1749752391.99114-9495-198131450740160 `" ) && sleep 0'
2025-06-12 20:19:51,997 p=9495 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:19:52,224 p=9495 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:19:52,224 p=9495 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:19:52,227 p=9495 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:19:52,269 p=9495 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:19:52,270 p=9495 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-94922jrila0a/tmp6yn82_fn TO /home/user/.ansible/tmp/ansible-local-94922jrila0a/ansible-tmp-1749752391.99114-9495-198131450740160/AnsiballZ_ios_facts.py
2025-06-12 20:19:52,271 p=9495 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-94922jrila0a/ansible-tmp-1749752391.99114-9495-198131450740160/ /home/user/.ansible/tmp/ansible-local-94922jrila0a/ansible-tmp-1749752391.99114-9495-198131450740160/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:19:52,275 p=9495 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-94922jrila0a/ansible-tmp-1749752391.99114-9495-198131450740160/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:19:52,888 p=9499 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:19:52,902 p=9499 u=user n=p=9499 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:19:53,385 p=9499 u=user n=p=9499 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:19:54,305 p=9492 u=user n=ansible |  [ERROR]: User interrupted execution

2025-06-12 20:19:55,405 p=9499 u=user n=p=9499 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:19:55,408 p=9499 u=user n=p=9499 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:19:55,512 p=9499 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 805, in _auth
    self._transport.auth_password(username, password)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1627, in auth_password
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:19:55,613 p=9499 u=user n=ansible | shutdown complete
2025-06-12 20:20:09,936 p=9527 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:20:09,936 p=9527 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:20:09,939 p=9527 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:20:09,939 p=9527 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:20:09,941 p=9527 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:20:09,941 p=9527 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:20:10,033 p=9527 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:20:10,039 p=9527 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:20:10,042 p=9527 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:20:10,043 p=9527 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:20:10,043 p=9527 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:20:10,043 p=9527 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:20:10,043 p=9527 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:20:10,044 p=9527 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:20:10,050 p=9527 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:20:10,055 p=9530 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:20:10,058 p=9530 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:20:10,058 p=9530 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:20:10,062 p=9527 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => 
  msg: to use the 'ssh' connection type with passwords, you must install the sshpass program
2025-06-12 20:20:10,063 p=9527 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:20:10,064 p=9527 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:20:27,345 p=9537 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:20:27,345 p=9537 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:20:27,348 p=9537 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:20:27,348 p=9537 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:20:27,350 p=9537 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:20:27,351 p=9537 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:20:27,438 p=9537 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:20:27,444 p=9537 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:20:27,448 p=9537 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:20:27,448 p=9537 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:20:27,448 p=9537 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:20:27,448 p=9537 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:20:27,448 p=9537 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:20:27,449 p=9537 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:20:27,455 p=9537 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:20:27,460 p=9540 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:20:27,463 p=9540 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:20:27,463 p=9540 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:20:27,464 p=9540 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d 192.168.122.237 '/bin/sh -c '"'"'echo ~ansible && sleep 0'"'"''
2025-06-12 20:20:27,840 p=9540 u=user n=ansible | <192.168.122.237> (0, b'Line has invalid autocommand "/bin/sh -c \'echo ~ansible && sleep 0\'"', b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************")
2025-06-12 20:20:27,840 p=9540 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:20:27,841 p=9540 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d 192.168.122.237 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1749752427.8402274-9540-258311702756622 `" && echo ansible-tmp-1749752427.8402274-9540-258311702756622="` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1749752427.8402274-9540-258311702756622 `" ) && sleep 0'"'"''
2025-06-12 20:20:28,223 p=9540 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "/bin/sh -c \'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'echo ~ansible && sleep 0\'"\'"\'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'echo ~ansible && sleep 0\'"\'"\'"/.ansible/tmp/ansible-tmp-1"', b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************")
2025-06-12 20:20:28,226 p=9540 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:20:28,415 p=9540 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:20:28,415 p=9540 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:20:28,416 p=9540 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d 192.168.122.237 '/bin/sh -c '"'"'echo PLATFORM; uname; echo FOUND; command -v '"'"'"'"'"'"'"'"'/usr/bin/python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.9'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.8'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.5'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/libexec/platform-python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/bin/python3'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python'"'"'"'"'"'"'"'"'; echo ENDFOUND && sleep 0'"'"''
2025-06-12 20:20:28,801 p=9540 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "/bin/sh -c \'echo PLATFORM; uname; echo FOUND; command -v \'"\'"\'/usr/bin/python\'"\'"\'; command -v \'"\'"\'python3.9\'"\'"\'; command -v \'"\'"\'python3.8\'"\'"\'; command -v \'"\'"\'python3.7\'"\'"\'; command -v \'"\'"\'python3.6\'"\'"\'; command -v \'"\'"\'python3.5\'"\'"\'; command -v "', b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************")
2025-06-12 20:20:28,801 p=9540 u=user n=ansible | [WARNING]: Unhandled error in Python interpreter discovery for host 192.168.122.237: unexpected output from Python interpreter discovery

2025-06-12 20:20:28,825 p=9540 u=user n=ansible | <192.168.122.237> Interpreter discovery remote stderr:

**************************************************************************
* IOSv is strictly limited to use for evaluation, demonstration and IOS  *
* education. IOSv is provided as-is and is not supported by Cisco's      *
* Technical Advisory Center. Any use or disclosure, in whole or in part, *
* of the IOSv Software or Documentation to any third party for any       *
* purposes is expressly prohibited except as otherwise authorized by     *
* Cisco in writing.                                                      *
**************************************************************************
2025-06-12 20:20:28,826 p=9540 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:20:28,826 p=9540 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9537lumuorjg/tmppthuwjqy TO Line has invalid autocommand "/bin/sh -c '( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'echo ~ansible && sleep 0'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'echo ~ansible && sleep 0'"'"'"/.ansible/tmp/ansible-tmp-1"/AnsiballZ_ios_facts.py
2025-06-12 20:20:28,827 p=9540 u=user n=ansible | <192.168.122.237> SSH: EXEC sftp -b - -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d '[192.168.122.237]'
2025-06-12 20:20:29,212 p=9540 u=user n=ansible | [WARNING]: sftp transfer mechanism failed on [192.168.122.237]. Use ANSIBLE_DEBUG=1 to see detailed information

2025-06-12 20:20:29,212 p=9540 u=user n=ansible | <192.168.122.237> SSH: EXEC scp -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d /home/user/.ansible/tmp/ansible-local-9537lumuorjg/tmppthuwjqy '[192.168.122.237]:'"'"'Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1"/AnsiballZ_ios_facts.py'"'"''
2025-06-12 20:20:29,603 p=9540 u=user n=ansible | [WARNING]: scp transfer mechanism failed on [192.168.122.237]. Use ANSIBLE_DEBUG=1 to see detailed information

2025-06-12 20:20:29,603 p=9540 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:20:29,604 p=9540 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d 192.168.122.237 'dd of=Line has invalid autocommand "/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1"/AnsiballZ_ios_facts.py bs=65536'
2025-06-12 20:20:29,992 p=9540 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "dd of=Line has invalid autocommand "/bin/sh -c \'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'echo ~ansible && sleep 0\'"\'"\'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'echo ~ansible && slee"', b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************")
2025-06-12 20:20:29,993 p=9540 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "dd of=Line has invalid autocommand "/bin/sh -c \'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'echo ~ansible && sleep 0\'"\'"\'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'echo ~ansible && slee"', b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************")
2025-06-12 20:20:29,993 p=9540 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:20:29,994 p=9540 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d 192.168.122.237 '/bin/sh -c '"'"'chmod u+x '"'"'"'"'"'"'"'"'Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1"/'"'"'"'"'"'"'"'"' '"'"'"'"'"'"'"'"'Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1"/AnsiballZ_ios_facts.py'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2025-06-12 20:20:30,380 p=9540 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "/bin/sh -c \'chmod u+x \'"\'"\'Line has invalid autocommand "/bin/sh -c \'"\'"\'"\'"\'"\'"\'"\'"\'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'echo ~ansible && sleep 0\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"', b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************")
2025-06-12 20:20:30,381 p=9540 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:20:30,381 p=9540 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d -tt 192.168.122.237 '/bin/sh -c '"'"'/usr/bin/python '"'"'"'"'"'"'"'"'Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1"/AnsiballZ_ios_facts.py'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2025-06-12 20:20:30,770 p=9540 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "/bin/sh -c \'/usr/bin/python \'"\'"\'Line has invalid autocommand "/bin/sh -c \'"\'"\'"\'"\'"\'"\'"\'"\'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'echo ~ansible && sleep 0\'"\'"\'"\'"\'"\'"\'"\'"', b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************Shared connection to 192.168.122.237 closed.\r\n")
2025-06-12 20:20:30,771 p=9540 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:20:30,771 p=9540 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d 192.168.122.237 '/bin/sh -c '"'"'rm -f -r '"'"'"'"'"'"'"'"'Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1"/'"'"'"'"'"'"'"'"' > /dev/null 2>&1 && sleep 0'"'"''
2025-06-12 20:20:31,160 p=9540 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "/bin/sh -c \'rm -f -r \'"\'"\'Line has invalid autocommand "/bin/sh -c \'"\'"\'"\'"\'"\'"\'"\'"\'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'echo ~ansible && sleep 0\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'""', b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************")
2025-06-12 20:20:31,166 p=9537 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python
      failed: true
      module_stderr: |2-
  
        **************************************************************************
        * IOSv is strictly limited to use for evaluation, demonstration and IOS  *
        * education. IOSv is provided as-is and is not supported by Cisco's      *
        * Technical Advisory Center. Any use or disclosure, in whole or in part, *
        * of the IOSv Software or Documentation to any third party for any       *
        * purposes is expressly prohibited except as otherwise authorized by     *
        * Cisco in writing.                                                      *
        **************************************************************************Shared connection to 192.168.122.237 closed.
      module_stdout: |2-
  
        Line has invalid autocommand "/bin/sh -c '/usr/bin/python '"'"'Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"
      msg: |-
        MODULE FAILURE
        See stdout/stderr for the exact error
      rc: 0
      warnings:
      - Platform unknown on host 192.168.122.237 is using the discovered Python interpreter at /usr/bin/python, but future installation of another Python interpreter could change the meaning of that path. See https://docs.ansible.com/ansible/2.10/reference_appendices/interpreter_discovery.html for more information.
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:20:31,167 p=9537 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:20:31,167 p=9537 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:24:46,261 p=9605 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:24:46,261 p=9605 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:24:46,264 p=9605 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:24:46,264 p=9605 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:24:46,266 p=9605 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:24:46,266 p=9605 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:24:46,352 p=9605 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:24:46,359 p=9605 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:24:46,363 p=9605 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:24:46,363 p=9605 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:24:46,363 p=9605 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:24:46,363 p=9605 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:24:46,363 p=9605 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:24:46,364 p=9605 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:24:46,370 p=9605 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:24:46,374 p=9608 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:24:46,385 p=9608 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:24:46,390 p=9608 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:24:46,393 p=9608 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:24:46,652 p=9612 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:24:46,666 p=9612 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:24:46,669 p=9612 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:24:46,711 p=9608 u=user n=ansible | network_os is set to ios
2025-06-12 20:24:46,713 p=9608 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:24:46,713 p=9608 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:24:46,713 p=9608 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-9605nosufjh9 `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-9605nosufjh9/ansible-tmp-1749752686.7131412-9608-136196473913936 `" && echo ansible-tmp-1749752686.7131412-9608-136196473913936="` echo /home/user/.ansible/tmp/ansible-local-9605nosufjh9/ansible-tmp-1749752686.7131412-9608-136196473913936 `" ) && sleep 0'
2025-06-12 20:24:46,718 p=9608 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:24:46,900 p=9608 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:24:46,900 p=9608 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:24:46,902 p=9608 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:24:46,926 p=9608 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:24:46,927 p=9608 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9605nosufjh9/tmptydd7vj2 TO /home/user/.ansible/tmp/ansible-local-9605nosufjh9/ansible-tmp-1749752686.7131412-9608-136196473913936/AnsiballZ_ios_facts.py
2025-06-12 20:24:46,928 p=9608 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-9605nosufjh9/ansible-tmp-1749752686.7131412-9608-136196473913936/ /home/user/.ansible/tmp/ansible-local-9605nosufjh9/ansible-tmp-1749752686.7131412-9608-136196473913936/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:24:46,930 p=9608 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-9605nosufjh9/ansible-tmp-1749752686.7131412-9608-136196473913936/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:24:47,180 p=9612 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:24:47,188 p=9612 u=user n=p=9612 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:24:47,454 p=9612 u=user n=p=9612 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:24:49,457 p=9612 u=user n=p=9612 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:24:49,460 p=9612 u=user n=p=9612 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:24:49,564 p=9612 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:24:49,583 p=9608 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-9605nosufjh9/ansible-tmp-1749752686.7131412-9608-136196473913936/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:24:49,591 p=9605 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_qon76e7k/ansible_ansible.legacy.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_qon76e7k/ansible_ansible.legacy.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:24:49,592 p=9605 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:24:49,592 p=9605 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:25:19,569 p=9612 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:25:19,669 p=9612 u=user n=ansible | shutdown complete
2025-06-12 20:29:16,005 p=9677 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:29:16,005 p=9677 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:29:16,009 p=9677 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:29:16,009 p=9677 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:29:16,011 p=9677 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:29:16,011 p=9677 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:29:16,110 p=9677 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:29:16,116 p=9677 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:29:16,120 p=9677 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:29:16,121 p=9677 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:29:16,121 p=9677 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:29:16,121 p=9677 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:29:16,121 p=9677 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:29:16,122 p=9677 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:29:16,128 p=9677 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:29:16,133 p=9680 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:29:16,143 p=9680 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:29:16,148 p=9680 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:29:16,151 p=9680 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:29:16,409 p=9684 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:29:16,423 p=9684 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:29:16,427 p=9684 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:29:16,468 p=9680 u=user n=ansible | network_os is set to ios
2025-06-12 20:29:16,469 p=9680 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:29:16,469 p=9680 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:29:16,469 p=9680 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-96771uqp8kez `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-96771uqp8kez/ansible-tmp-1749752956.4693887-9680-184704797438220 `" && echo ansible-tmp-1749752956.4693887-9680-184704797438220="` echo /home/user/.ansible/tmp/ansible-local-96771uqp8kez/ansible-tmp-1749752956.4693887-9680-184704797438220 `" ) && sleep 0'
2025-06-12 20:29:16,474 p=9680 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:29:16,656 p=9680 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:29:16,656 p=9680 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:29:16,659 p=9680 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:29:16,685 p=9680 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:29:16,685 p=9680 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-96771uqp8kez/tmppoznl40g TO /home/user/.ansible/tmp/ansible-local-96771uqp8kez/ansible-tmp-1749752956.4693887-9680-184704797438220/AnsiballZ_ios_facts.py
2025-06-12 20:29:16,686 p=9680 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-96771uqp8kez/ansible-tmp-1749752956.4693887-9680-184704797438220/ /home/user/.ansible/tmp/ansible-local-96771uqp8kez/ansible-tmp-1749752956.4693887-9680-184704797438220/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:29:16,688 p=9680 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-96771uqp8kez/ansible-tmp-1749752956.4693887-9680-184704797438220/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:29:16,939 p=9684 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:29:16,949 p=9684 u=user n=p=9684 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:29:17,221 p=9684 u=user n=p=9684 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:29:19,244 p=9684 u=user n=p=9684 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:29:19,247 p=9684 u=user n=p=9684 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:29:19,349 p=9684 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:29:19,364 p=9680 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-96771uqp8kez/ansible-tmp-1749752956.4693887-9680-184704797438220/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:29:19,370 p=9677 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_agiahu87/ansible_ansible.legacy.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_agiahu87/ansible_ansible.legacy.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:29:19,371 p=9677 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:29:19,371 p=9677 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:29:28,680 p=9717 u=user n=ansible | ansible 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:29:28,681 p=9717 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:29:28,685 p=9717 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:29:28,685 p=9717 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:29:28,687 p=9717 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:29:28,688 p=9717 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:29:28,699 p=9717 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:29:28,699 p=9717 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:29:28,699 p=9717 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:29:28,725 p=9717 u=user n=ansible | META: ran handlers
2025-06-12 20:29:28,730 p=9717 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:29:28,743 p=9719 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:29:28,760 p=9719 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:29:28,763 p=9719 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:29:28,767 p=9719 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:29:29,017 p=9723 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:29:29,030 p=9723 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:29:29,034 p=9723 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:29:29,078 p=9719 u=user n=ansible | network_os is set to ios
2025-06-12 20:29:29,079 p=9719 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:29:29,079 p=9719 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:29:29,080 p=9719 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:29:29,080 p=9719 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-9717fobb5quy `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-9717fobb5quy/ansible-tmp-1749752969.0801764-9719-87780503567975 `" && echo ansible-tmp-1749752969.0801764-9719-87780503567975="` echo /home/user/.ansible/tmp/ansible-local-9717fobb5quy/ansible-tmp-1749752969.0801764-9719-87780503567975 `" ) && sleep 0'
2025-06-12 20:29:29,173 p=9719 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:29:29,173 p=9719 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:29:29,176 p=9719 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:29:29,202 p=9719 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_command.py
2025-06-12 20:29:29,202 p=9719 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9717fobb5quy/tmp1atsfqu8 TO /home/user/.ansible/tmp/ansible-local-9717fobb5quy/ansible-tmp-1749752969.0801764-9719-87780503567975/AnsiballZ_ios_command.py
2025-06-12 20:29:29,203 p=9719 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-9717fobb5quy/ansible-tmp-1749752969.0801764-9719-87780503567975/ /home/user/.ansible/tmp/ansible-local-9717fobb5quy/ansible-tmp-1749752969.0801764-9719-87780503567975/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 20:29:29,206 p=9719 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-9717fobb5quy/ansible-tmp-1749752969.0801764-9719-87780503567975/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 20:29:29,346 p=9723 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:29:29,355 p=9723 u=user n=p=9723 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:29:29,622 p=9723 u=user n=p=9723 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:29:31,626 p=9723 u=user n=p=9723 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:29:31,629 p=9723 u=user n=p=9723 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:29:31,732 p=9723 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:29:31,750 p=9719 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-9717fobb5quy/ansible-tmp-1749752969.0801764-9719-87780503567975/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:29:31,755 p=9717 u=user n=ansible | The full traceback is:
  File "/tmp/ansible_cisco.ios.ios_command_payload_iir1osj3/ansible_cisco.ios.ios_command_payload.zip/ansible_collections/cisco/ios/plugins/module_utils/network/ios/ios.py", line 94, in get_capabilities
    capabilities = Connection(module._socket_path).get_capabilities()
  File "/tmp/ansible_cisco.ios.ios_command_payload_iir1osj3/ansible_cisco.ios.ios_command_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
    raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)

2025-06-12 20:29:31,756 p=9717 u=user n=ansible | 192.168.122.237 | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "invocation": {
        "module_args": {
            "commands": [
                "['show version']"
            ],
            "interval": 1,
            "match": "all",
            "provider": null,
            "retries": 10,
            "wait_for": null
        }
    },
    "msg": "No existing session"
}
2025-06-12 20:29:31,858 p=9723 u=user n=ansible | shutdown complete
2025-06-12 20:29:32,064 p=9756 u=user n=ansible | ansible 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:29:32,064 p=9756 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:29:32,069 p=9756 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:29:32,069 p=9756 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:29:32,071 p=9756 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:29:32,072 p=9756 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:29:32,083 p=9756 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:29:32,083 p=9756 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:29:32,083 p=9756 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:29:32,110 p=9756 u=user n=ansible | META: ran handlers
2025-06-12 20:29:32,116 p=9756 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:29:32,129 p=9758 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:29:32,146 p=9758 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:29:32,149 p=9758 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:29:32,154 p=9758 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:29:32,414 p=9762 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:29:32,427 p=9762 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:29:32,430 p=9762 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:29:32,470 p=9758 u=user n=ansible | network_os is set to ios
2025-06-12 20:29:32,471 p=9758 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:29:32,471 p=9758 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:29:32,472 p=9758 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:29:32,472 p=9758 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-9756gx3epk6f `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-9756gx3epk6f/ansible-tmp-1749752972.4718945-9758-280882469020946 `" && echo ansible-tmp-1749752972.4718945-9758-280882469020946="` echo /home/user/.ansible/tmp/ansible-local-9756gx3epk6f/ansible-tmp-1749752972.4718945-9758-280882469020946 `" ) && sleep 0'
2025-06-12 20:29:32,564 p=9758 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:29:32,565 p=9758 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:29:32,568 p=9758 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:29:32,592 p=9758 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_command.py
2025-06-12 20:29:32,592 p=9758 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9756gx3epk6f/tmpiahl3yi9 TO /home/user/.ansible/tmp/ansible-local-9756gx3epk6f/ansible-tmp-1749752972.4718945-9758-280882469020946/AnsiballZ_ios_command.py
2025-06-12 20:29:32,593 p=9758 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-9756gx3epk6f/ansible-tmp-1749752972.4718945-9758-280882469020946/ /home/user/.ansible/tmp/ansible-local-9756gx3epk6f/ansible-tmp-1749752972.4718945-9758-280882469020946/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 20:29:32,596 p=9758 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-9756gx3epk6f/ansible-tmp-1749752972.4718945-9758-280882469020946/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 20:29:32,730 p=9762 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:29:32,739 p=9762 u=user n=p=9762 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:29:33,004 p=9762 u=user n=p=9762 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:29:35,006 p=9762 u=user n=p=9762 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:29:35,010 p=9762 u=user n=p=9762 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:29:35,120 p=9762 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:29:35,132 p=9758 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-9756gx3epk6f/ansible-tmp-1749752972.4718945-9758-280882469020946/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:29:35,137 p=9756 u=user n=ansible | The full traceback is:
  File "/tmp/ansible_cisco.ios.ios_command_payload_wi1n4705/ansible_cisco.ios.ios_command_payload.zip/ansible_collections/cisco/ios/plugins/module_utils/network/ios/ios.py", line 94, in get_capabilities
    capabilities = Connection(module._socket_path).get_capabilities()
  File "/tmp/ansible_cisco.ios.ios_command_payload_wi1n4705/ansible_cisco.ios.ios_command_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
    raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)

2025-06-12 20:29:35,138 p=9756 u=user n=ansible | 192.168.122.237 | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "invocation": {
        "module_args": {
            "commands": [
                "['show version']"
            ],
            "interval": 1,
            "match": "all",
            "provider": null,
            "retries": 10,
            "wait_for": null
        }
    },
    "msg": "No existing session"
}
2025-06-12 20:29:35,242 p=9762 u=user n=ansible | shutdown complete
2025-06-12 20:29:49,357 p=9684 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:29:49,458 p=9684 u=user n=ansible | shutdown complete
2025-06-12 20:32:30,668 p=9818 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:32:30,668 p=9818 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:32:30,672 p=9818 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:32:30,672 p=9818 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:32:30,674 p=9818 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:32:30,674 p=9818 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:32:30,765 p=9818 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:32:30,771 p=9818 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:32:30,776 p=9818 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:32:30,776 p=9818 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:32:30,776 p=9818 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:32:30,776 p=9818 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:32:30,776 p=9818 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:32:30,777 p=9818 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:32:30,783 p=9818 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:32:30,788 p=9821 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:32:30,797 p=9821 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:32:30,801 p=9821 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:32:30,804 p=9821 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:32:31,048 p=9825 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:32:31,061 p=9825 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:32:31,065 p=9825 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:32:31,107 p=9821 u=user n=ansible | network_os is set to ios
2025-06-12 20:32:31,108 p=9821 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:32:31,108 p=9821 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:32:31,108 p=9821 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-9818eq55jyt_ `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-9818eq55jyt_/ansible-tmp-1749753151.108239-9821-210453219376997 `" && echo ansible-tmp-1749753151.108239-9821-210453219376997="` echo /home/user/.ansible/tmp/ansible-local-9818eq55jyt_/ansible-tmp-1749753151.108239-9821-210453219376997 `" ) && sleep 0'
2025-06-12 20:32:31,113 p=9821 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:32:31,294 p=9821 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:32:31,295 p=9821 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:32:31,297 p=9821 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:32:31,323 p=9821 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:32:31,323 p=9821 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9818eq55jyt_/tmpw5im1x1e TO /home/user/.ansible/tmp/ansible-local-9818eq55jyt_/ansible-tmp-1749753151.108239-9821-210453219376997/AnsiballZ_ios_facts.py
2025-06-12 20:32:31,324 p=9821 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-9818eq55jyt_/ansible-tmp-1749753151.108239-9821-210453219376997/ /home/user/.ansible/tmp/ansible-local-9818eq55jyt_/ansible-tmp-1749753151.108239-9821-210453219376997/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:32:31,326 p=9821 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-9818eq55jyt_/ansible-tmp-1749753151.108239-9821-210453219376997/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:32:31,576 p=9825 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:32:31,584 p=9825 u=user n=p=9825 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:32:31,849 p=9825 u=user n=p=9825 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:32:33,853 p=9825 u=user n=p=9825 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:32:33,857 p=9825 u=user n=p=9825 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:32:33,955 p=9825 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:32:33,970 p=9821 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-9818eq55jyt_/ansible-tmp-1749753151.108239-9821-210453219376997/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:32:33,977 p=9818 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_ruffflvr/ansible_ansible.legacy.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_ruffflvr/ansible_ansible.legacy.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:32:33,978 p=9818 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:32:33,978 p=9818 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:33:03,955 p=9825 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:33:04,056 p=9825 u=user n=ansible | shutdown complete
2025-06-12 20:33:07,861 p=9864 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:33:07,861 p=9864 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:33:07,865 p=9864 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:33:07,865 p=9864 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:33:07,867 p=9864 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:33:07,867 p=9864 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:33:07,951 p=9864 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:33:07,957 p=9864 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:33:07,961 p=9864 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:33:07,961 p=9864 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:33:07,961 p=9864 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:33:07,961 p=9864 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:33:07,961 p=9864 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:33:07,962 p=9864 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:33:07,967 p=9864 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:33:07,972 p=9867 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:33:07,985 p=9867 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:33:07,990 p=9867 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:33:07,993 p=9867 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:33:08,238 p=9871 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:33:08,252 p=9871 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:33:08,256 p=9871 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:33:08,298 p=9867 u=user n=ansible | network_os is set to ios
2025-06-12 20:33:08,299 p=9867 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:33:08,300 p=9867 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:33:08,300 p=9867 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-9864_zt4ygfx `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-9864_zt4ygfx/ansible-tmp-1749753188.2999501-9867-43399628853713 `" && echo ansible-tmp-1749753188.2999501-9867-43399628853713="` echo /home/user/.ansible/tmp/ansible-local-9864_zt4ygfx/ansible-tmp-1749753188.2999501-9867-43399628853713 `" ) && sleep 0'
2025-06-12 20:33:08,305 p=9867 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:33:08,491 p=9867 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:33:08,491 p=9867 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:33:08,494 p=9867 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:33:08,519 p=9867 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:33:08,519 p=9867 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9864_zt4ygfx/tmp9vfoe2zn TO /home/user/.ansible/tmp/ansible-local-9864_zt4ygfx/ansible-tmp-1749753188.2999501-9867-43399628853713/AnsiballZ_ios_facts.py
2025-06-12 20:33:08,520 p=9867 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-9864_zt4ygfx/ansible-tmp-1749753188.2999501-9867-43399628853713/ /home/user/.ansible/tmp/ansible-local-9864_zt4ygfx/ansible-tmp-1749753188.2999501-9867-43399628853713/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:33:08,522 p=9867 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-9864_zt4ygfx/ansible-tmp-1749753188.2999501-9867-43399628853713/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:33:08,774 p=9871 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:33:08,782 p=9871 u=user n=p=9871 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:33:09,046 p=9871 u=user n=p=9871 u=user | paramiko [192.168.122.237] | Auth banner: b"\r\n**************************************************************************\r\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\r\n* education. IOSv is provided as-is and is not supported by Cisco's      *\r\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\r\n* of the IOSv Software or Documentation to any third party for any       *\r\n* purposes is expressly prohibited except as otherwise authorized by     *\r\n* Cisco in writing.                                                      *\r\n**************************************************************************"
2025-06-12 20:33:11,049 p=9871 u=user n=p=9871 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:33:11,052 p=9871 u=user n=p=9871 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:33:11,150 p=9871 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:33:11,166 p=9867 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-9864_zt4ygfx/ansible-tmp-1749753188.2999501-9867-43399628853713/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:33:11,172 p=9864 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_r0gxcyd6/ansible_ansible.legacy.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_r0gxcyd6/ansible_ansible.legacy.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:33:11,173 p=9864 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:33:11,173 p=9864 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:33:41,151 p=9871 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:33:41,253 p=9871 u=user n=ansible | shutdown complete
2025-06-12 20:35:08,724 p=9918 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:35:08,724 p=9918 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:35:08,728 p=9918 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:35:08,728 p=9918 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:35:08,730 p=9918 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 20:35:08,730 p=9918 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:35:08,821 p=9918 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:35:08,827 p=9918 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:35:08,832 p=9918 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:35:08,832 p=9918 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:35:08,832 p=9918 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:35:08,832 p=9918 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:35:08,832 p=9918 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:35:08,833 p=9918 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:35:08,839 p=9918 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:35:08,843 p=9921 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:35:08,853 p=9921 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:35:08,857 p=9921 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:35:08,860 p=9921 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:35:09,112 p=9925 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:35:09,126 p=9925 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:35:09,130 p=9925 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:35:09,172 p=9921 u=user n=ansible | network_os is set to ios
2025-06-12 20:35:09,173 p=9921 u=user n=ansible | [WARNING]: Ignoring timeout(10) for ansible.legacy.ios_facts

2025-06-12 20:35:09,173 p=9921 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:35:09,173 p=9921 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-9918ukrdhhol `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-9918ukrdhhol/ansible-tmp-1749753309.1736739-9921-22963988716370 `" && echo ansible-tmp-1749753309.1736739-9921-22963988716370="` echo /home/user/.ansible/tmp/ansible-local-9918ukrdhhol/ansible-tmp-1749753309.1736739-9921-22963988716370 `" ) && sleep 0'
2025-06-12 20:35:09,179 p=9921 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 20:35:09,360 p=9921 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 20:35:09,360 p=9921 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:35:09,363 p=9921 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:35:09,389 p=9921 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:35:09,390 p=9921 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9918ukrdhhol/tmp3xdxh2wn TO /home/user/.ansible/tmp/ansible-local-9918ukrdhhol/ansible-tmp-1749753309.1736739-9921-22963988716370/AnsiballZ_ios_facts.py
2025-06-12 20:35:09,390 p=9921 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-9918ukrdhhol/ansible-tmp-1749753309.1736739-9921-22963988716370/ /home/user/.ansible/tmp/ansible-local-9918ukrdhhol/ansible-tmp-1749753309.1736739-9921-22963988716370/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:35:09,393 p=9921 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-9918ukrdhhol/ansible-tmp-1749753309.1736739-9921-22963988716370/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:35:09,640 p=9925 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:35:09,648 p=9925 u=user n=p=9925 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:35:12,113 p=9925 u=user n=p=9925 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:35:12,117 p=9925 u=user n=p=9925 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:35:12,217 p=9925 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:35:12,233 p=9921 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-9918ukrdhhol/ansible-tmp-1749753309.1736739-9921-22963988716370/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:35:12,241 p=9918 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    ansible.legacy.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_fs2f2tth/ansible_ansible.legacy.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_ansible.legacy.ios_facts_payload_fs2f2tth/ansible_ansible.legacy.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: ansible.legacy.ios_facts
2025-06-12 20:35:12,243 p=9918 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:35:12,243 p=9918 u=user n=ansible | 192.168.122.237            : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:35:42,218 p=9925 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:35:42,319 p=9925 u=user n=ansible | shutdown complete
2025-06-12 20:36:51,315 p=9983 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:36:51,316 p=9983 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:36:51,319 p=9983 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:36:51,319 p=9983 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:36:51,321 p=9983 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:36:51,409 p=9983 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:36:51,415 p=9983 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:36:51,419 p=9983 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:36:51,419 p=9983 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:36:51,419 p=9983 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:36:51,420 p=9983 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:36:51,420 p=9983 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:36:51,421 p=9983 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:36:51,426 p=9983 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:36:51,431 p=9986 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:36:51,451 p=9986 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:36:51,713 p=9990 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:36:51,776 p=9986 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-12 20:36:51,777 p=9986 u=user n=ansible | [WARNING]: Ignoring timeout(10) for cisco.ios.ios_facts

2025-06-12 20:36:51,777 p=9986 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:36:51,777 p=9986 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-9983kdfxnm2l `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-9983kdfxnm2l/ansible-tmp-1749753411.777403-9986-238417287574500 `" && echo ansible-tmp-1749753411.777403-9986-238417287574500="` echo /home/user/.ansible/tmp/ansible-local-9983kdfxnm2l/ansible-tmp-1749753411.777403-9986-238417287574500 `" ) && sleep 0'
2025-06-12 20:36:51,969 p=9986 u=user n=ansible | <R1> Attempting python interpreter discovery
2025-06-12 20:36:51,969 p=9986 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:36:51,972 p=9986 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:36:51,997 p=9986 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:36:51,998 p=9986 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-9983kdfxnm2l/tmp16qs867f TO /home/user/.ansible/tmp/ansible-local-9983kdfxnm2l/ansible-tmp-1749753411.777403-9986-238417287574500/AnsiballZ_ios_facts.py
2025-06-12 20:36:51,998 p=9986 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-9983kdfxnm2l/ansible-tmp-1749753411.777403-9986-238417287574500/ /home/user/.ansible/tmp/ansible-local-9983kdfxnm2l/ansible-tmp-1749753411.777403-9986-238417287574500/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:36:52,001 p=9986 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-9983kdfxnm2l/ansible-tmp-1749753411.777403-9986-238417287574500/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:36:52,256 p=9990 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:36:52,266 p=9990 u=user n=p=9990 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:36:54,534 p=9990 u=user n=p=9990 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:36:54,537 p=9990 u=user n=p=9990 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:36:54,637 p=9990 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:36:54,652 p=9986 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-9983kdfxnm2l/ansible-tmp-1749753411.777403-9986-238417287574500/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:36:54,659 p=9983 u=user n=ansible | fatal: [R1]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    cisco.ios.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_cisco.ios.ios_facts_payload_ko5w6acj/ansible_cisco.ios.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_cisco.ios.ios_facts_payload_ko5w6acj/ansible_cisco.ios.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: cisco.ios.ios_facts
2025-06-12 20:36:54,659 p=9983 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:36:54,659 p=9983 u=user n=ansible | R1                         : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:37:24,644 p=9990 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:37:24,746 p=9990 u=user n=ansible | shutdown complete
2025-06-12 20:38:20,873 p=10034 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:38:20,873 p=10034 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:38:20,877 p=10034 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:38:20,877 p=10034 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:38:20,878 p=10034 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:38:20,965 p=10034 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:38:20,971 p=10034 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:38:20,975 p=10034 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:38:20,975 p=10034 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:38:20,975 p=10034 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:38:20,975 p=10034 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:38:20,975 p=10034 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:38:20,976 p=10034 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:38:20,982 p=10034 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:38:20,987 p=10037 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:38:21,008 p=10037 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:38:21,264 p=10041 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:38:21,327 p=10037 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-12 20:38:21,329 p=10037 u=user n=ansible | [WARNING]: Ignoring timeout(10) for cisco.ios.ios_facts

2025-06-12 20:38:21,329 p=10037 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:38:21,329 p=10037 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-100343cvvxiq7 `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-100343cvvxiq7/ansible-tmp-1749753501.3293192-10037-214021978700475 `" && echo ansible-tmp-1749753501.3293192-10037-214021978700475="` echo /home/user/.ansible/tmp/ansible-local-100343cvvxiq7/ansible-tmp-1749753501.3293192-10037-214021978700475 `" ) && sleep 0'
2025-06-12 20:38:21,533 p=10037 u=user n=ansible | <R1> Attempting python interpreter discovery
2025-06-12 20:38:21,533 p=10037 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:38:21,536 p=10037 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:38:21,560 p=10037 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:38:21,560 p=10037 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-100343cvvxiq7/tmpo5xx_oxl TO /home/user/.ansible/tmp/ansible-local-100343cvvxiq7/ansible-tmp-1749753501.3293192-10037-214021978700475/AnsiballZ_ios_facts.py
2025-06-12 20:38:21,561 p=10037 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-100343cvvxiq7/ansible-tmp-1749753501.3293192-10037-214021978700475/ /home/user/.ansible/tmp/ansible-local-100343cvvxiq7/ansible-tmp-1749753501.3293192-10037-214021978700475/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:38:21,563 p=10037 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-100343cvvxiq7/ansible-tmp-1749753501.3293192-10037-214021978700475/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 20:38:21,815 p=10041 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:38:21,824 p=10041 u=user n=p=10041 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:38:24,093 p=10041 u=user n=p=10041 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:38:24,096 p=10041 u=user n=p=10041 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:38:24,196 p=10041 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:38:24,213 p=10037 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-100343cvvxiq7/ansible-tmp-1749753501.3293192-10037-214021978700475/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:38:24,220 p=10034 u=user n=ansible | fatal: [R1]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    cisco.ios.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python3
      exception: |2-
          File "/tmp/ansible_cisco.ios.ios_facts_payload_4lpo32bt/ansible_cisco.ios.ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
            capabilities = Connection(module._socket_path).get_capabilities()
          File "/tmp/ansible_cisco.ios.ios_facts_payload_4lpo32bt/ansible_cisco.ios.ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
            raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
      failed: true
      invocation:
        module_args:
          gather_network_resources: null
          gather_subset:
          - '!config'
          provider: null
      msg: No existing session
  msg: |-
    The following modules failed to execute: cisco.ios.ios_facts
2025-06-12 20:38:24,221 p=10034 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:38:24,221 p=10034 u=user n=ansible | R1                         : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:38:53,534 p=10078 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:38:53,534 p=10078 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:38:53,538 p=10078 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:38:53,538 p=10078 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:38:53,539 p=10078 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:38:53,630 p=10078 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:38:53,636 p=10078 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:38:53,641 p=10078 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:38:53,641 p=10078 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:38:53,641 p=10078 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:38:53,641 p=10078 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:38:53,641 p=10078 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:38:53,643 p=10078 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:38:53,648 p=10078 u=user n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2025-06-12 20:38:53,654 p=10081 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:38:53,658 p=10081 u=user n=ansible | [WARNING]: Ignoring timeout(10) for cisco.ios.ios_facts

2025-06-12 20:38:53,658 p=10081 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:38:53,659 p=10081 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d 192.168.122.237 '/bin/sh -c '"'"'echo ~ansible && sleep 0'"'"''
2025-06-12 20:38:54,032 p=10081 u=user n=ansible | <192.168.122.237> (0, b'Line has invalid autocommand "/bin/sh -c \'echo ~ansible && sleep 0\'"', b'')
2025-06-12 20:38:54,033 p=10081 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:38:54,033 p=10081 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d 192.168.122.237 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1749753534.0330775-10081-45886855635626 `" && echo ansible-tmp-1749753534.0330775-10081-45886855635626="` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1749753534.0330775-10081-45886855635626 `" ) && sleep 0'"'"''
2025-06-12 20:38:54,197 p=10041 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:38:54,298 p=10041 u=user n=ansible | shutdown complete
2025-06-12 20:38:54,419 p=10081 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "/bin/sh -c \'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'echo ~ansible && sleep 0\'"\'"\'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'echo ~ansible && sleep 0\'"\'"\'"/.ansible/tmp/ansible-tmp-1"', b'')
2025-06-12 20:38:54,601 p=10081 u=user n=ansible | <R1> Attempting python interpreter discovery
2025-06-12 20:38:54,601 p=10081 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:38:54,602 p=10081 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d 192.168.122.237 '/bin/sh -c '"'"'echo PLATFORM; uname; echo FOUND; command -v '"'"'"'"'"'"'"'"'/usr/bin/python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.9'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.8'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.5'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/libexec/platform-python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/bin/python3'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python'"'"'"'"'"'"'"'"'; echo ENDFOUND && sleep 0'"'"''
2025-06-12 20:38:54,982 p=10081 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "/bin/sh -c \'echo PLATFORM; uname; echo FOUND; command -v \'"\'"\'/usr/bin/python\'"\'"\'; command -v \'"\'"\'python3.9\'"\'"\'; command -v \'"\'"\'python3.8\'"\'"\'; command -v \'"\'"\'python3.7\'"\'"\'; command -v \'"\'"\'python3.6\'"\'"\'; command -v \'"\'"\'python3.5\'"\'"\'; command -v "', b'')
2025-06-12 20:38:54,982 p=10081 u=user n=ansible | [WARNING]: Unhandled error in Python interpreter discovery for host R1: unexpected output from Python interpreter discovery

2025-06-12 20:38:54,983 p=10081 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 20:38:54,984 p=10081 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10078vux1ulnc/tmpq800a9ae TO Line has invalid autocommand "/bin/sh -c '( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'echo ~ansible && sleep 0'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'echo ~ansible && sleep 0'"'"'"/.ansible/tmp/ansible-tmp-1"/AnsiballZ_ios_facts.py
2025-06-12 20:38:54,984 p=10081 u=user n=ansible | <192.168.122.237> SSH: EXEC sftp -b - -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d '[192.168.122.237]'
2025-06-12 20:38:55,362 p=10081 u=user n=ansible | [WARNING]: sftp transfer mechanism failed on [192.168.122.237]. Use ANSIBLE_DEBUG=1 to see detailed information

2025-06-12 20:38:55,362 p=10081 u=user n=ansible | <192.168.122.237> SSH: EXEC scp -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d /home/user/.ansible/tmp/ansible-local-10078vux1ulnc/tmpq800a9ae '[192.168.122.237]:'"'"'Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1"/AnsiballZ_ios_facts.py'"'"''
2025-06-12 20:38:55,739 p=10081 u=user n=ansible | [WARNING]: scp transfer mechanism failed on [192.168.122.237]. Use ANSIBLE_DEBUG=1 to see detailed information

2025-06-12 20:38:55,739 p=10081 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:38:55,740 p=10081 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d 192.168.122.237 'dd of=Line has invalid autocommand "/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1"/AnsiballZ_ios_facts.py bs=65536'
2025-06-12 20:38:56,127 p=10081 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "dd of=Line has invalid autocommand "/bin/sh -c \'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'echo ~ansible && sleep 0\'"\'"\'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'echo ~ansible && slee"', b'')
2025-06-12 20:38:56,127 p=10081 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "dd of=Line has invalid autocommand "/bin/sh -c \'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'echo ~ansible && sleep 0\'"\'"\'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'echo ~ansible && slee"', b'')
2025-06-12 20:38:56,127 p=10081 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:38:56,128 p=10081 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d 192.168.122.237 '/bin/sh -c '"'"'chmod u+x '"'"'"'"'"'"'"'"'Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1"/'"'"'"'"'"'"'"'"' '"'"'"'"'"'"'"'"'Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1"/AnsiballZ_ios_facts.py'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2025-06-12 20:38:56,511 p=10081 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "/bin/sh -c \'chmod u+x \'"\'"\'Line has invalid autocommand "/bin/sh -c \'"\'"\'"\'"\'"\'"\'"\'"\'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'echo ~ansible && sleep 0\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"', b'')
2025-06-12 20:38:56,511 p=10081 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:38:56,512 p=10081 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d -tt 192.168.122.237 '/bin/sh -c '"'"'/usr/bin/python '"'"'"'"'"'"'"'"'Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1"/AnsiballZ_ios_facts.py'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2025-06-12 20:38:56,898 p=10081 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "/bin/sh -c \'/usr/bin/python \'"\'"\'Line has invalid autocommand "/bin/sh -c \'"\'"\'"\'"\'"\'"\'"\'"\'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'echo ~ansible && sleep 0\'"\'"\'"\'"\'"\'"\'"\'"', b'Shared connection to 192.168.122.237 closed.\r\n')
2025-06-12 20:38:56,899 p=10081 u=user n=ansible | <192.168.122.237> ESTABLISH SSH CONNECTION FOR USER: ansible
2025-06-12 20:38:56,899 p=10081 u=user n=ansible | <192.168.122.237> SSH: EXEC ssh -o ControlMaster=auto -o ControlPersist=90s -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o 'IdentityFile="/home/user/.ssh/id_rsa"' -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -o 'User="ansible"' -o ConnectTimeout=90 -o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o ControlPath=/home/user/.ansible/cp/ddc567e53d 192.168.122.237 '/bin/sh -c '"'"'rm -f -r '"'"'"'"'"'"'"'"'Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp `"&& mkdir "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"/.ansible/tmp/ansible-tmp-1"/'"'"'"'"'"'"'"'"' > /dev/null 2>&1 && sleep 0'"'"''
2025-06-12 20:38:57,279 p=10081 u=user n=ansible | <192.168.122.237> (0, b'\r\nLine has invalid autocommand "/bin/sh -c \'rm -f -r \'"\'"\'Line has invalid autocommand "/bin/sh -c \'"\'"\'"\'"\'"\'"\'"\'"\'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c \'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'echo ~ansible && sleep 0\'"\'"\'"\'"\'"\'"\'"\'"\'"\'"\'""', b'')
2025-06-12 20:38:57,284 p=10078 u=user n=ansible | fatal: [R1]: FAILED! => changed=false 
  ansible_facts: {}
  failed_modules:
    cisco.ios.ios_facts:
      ansible_facts:
        discovered_interpreter_python: /usr/bin/python
      failed: true
      module_stderr: |-
        Shared connection to 192.168.122.237 closed.
      module_stdout: |2-
  
        Line has invalid autocommand "/bin/sh -c '/usr/bin/python '"'"'Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'( umask 77 && mkdir -p "` echo Line has invalid autocommand "/bin/sh -c '"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'"'echo ~ansible && sleep 0'"'"'"'"'"'"'"'"
      msg: |-
        MODULE FAILURE
        See stdout/stderr for the exact error
      rc: 0
      warnings:
      - Platform unknown on host R1 is using the discovered Python interpreter at /usr/bin/python, but future installation of another Python interpreter could change the meaning of that path. See https://docs.ansible.com/ansible/2.10/reference_appendices/interpreter_discovery.html for more information.
  msg: |-
    The following modules failed to execute: cisco.ios.ios_facts
2025-06-12 20:38:57,286 p=10078 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:38:57,286 p=10078 u=user n=ansible | R1                         : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 20:40:39,847 p=10136 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:40:39,847 p=10136 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:40:39,851 p=10136 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:40:39,851 p=10136 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:40:39,852 p=10136 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:40:39,938 p=10136 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:40:39,943 p=10136 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:40:39,947 p=10136 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:40:39,947 p=10136 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:40:39,947 p=10136 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:40:39,947 p=10136 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:40:39,947 p=10136 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:40:39,948 p=10136 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:40:39,954 p=10136 u=user n=ansible | META: ran handlers
2025-06-12 20:40:39,956 p=10136 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 20:40:39,974 p=10139 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:40:39,990 p=10139 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:40:40,244 p=10143 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:40:40,303 p=10139 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-12 20:40:40,306 p=10136 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : cisco.ios.ios'
2025-06-12 20:40:40,308 p=10136 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 20:40:40,326 p=10136 u=user n=ansible | skipping: [R1] => 
2025-06-12 20:40:40,328 p=10136 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 20:40:40,346 p=10136 u=user n=ansible | skipping: [R1] => 
2025-06-12 20:40:40,349 p=10136 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 20:40:40,369 p=10136 u=user n=ansible | skipping: [R1] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 20:40:40,371 p=10136 u=user n=ansible | TASK [Appareils Pfsense] ***************************************************************************************************************************
2025-06-12 20:40:40,389 p=10136 u=user n=ansible | skipping: [R1] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 20:40:40,392 p=10136 u=user n=ansible | META: ran handlers
2025-06-12 20:40:40,393 p=10136 u=user n=ansible | META: ran handlers
2025-06-12 20:40:40,394 p=10136 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:40:40,394 p=10136 u=user n=ansible | R1                         : ok=1    changed=0    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2025-06-12 20:41:10,265 p=10143 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:41:10,366 p=10143 u=user n=ansible | shutdown complete
2025-06-12 20:41:24,307 p=10160 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:41:24,308 p=10160 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:41:24,311 p=10160 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:41:24,311 p=10160 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:41:24,313 p=10160 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:41:24,405 p=10160 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:41:24,411 p=10160 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:41:24,415 p=10160 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:41:24,416 p=10160 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:41:24,416 p=10160 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:41:24,416 p=10160 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:41:24,416 p=10160 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:41:24,418 p=10160 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:41:24,423 p=10160 u=user n=ansible | META: ran handlers
2025-06-12 20:41:24,425 p=10160 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 20:41:24,444 p=10163 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:41:24,454 p=10163 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:41:24,457 p=10163 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:41:24,460 p=10163 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:41:24,716 p=10167 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:41:24,730 p=10167 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:41:24,734 p=10167 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:41:24,778 p=10163 u=user n=ansible | network_os is set to ios
2025-06-12 20:41:24,781 p=10160 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 20:41:24,783 p=10160 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 20:41:24,800 p=10169 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:41:24,809 p=10169 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:41:24,812 p=10169 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:41:24,816 p=10169 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:41:25,100 p=10160 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 20:41:25,102 p=10160 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 20:41:25,121 p=10160 u=user n=ansible | skipping: [R1] => 
2025-06-12 20:41:25,123 p=10160 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 20:41:25,148 p=10160 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 20:41:25,154 p=10176 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:41:25,163 p=10176 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:41:25,167 p=10176 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:41:25,170 p=10176 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:41:25,447 p=10176 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 20:41:55,419 p=10167 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:41:55,520 p=10167 u=user n=ansible | shutdown complete
2025-06-12 20:45:14,530 p=10160 u=user n=ansible | ok: [R1] => changed=false 
  delta: 229
  echo: true
  rc: 0
  start: '2025-06-12 20:41:25.447101'
  stderr: ''
  stdout: Paused for 3.82 minutes
  stop: '2025-06-12 20:45:14.527467'
  user_input: '1'
2025-06-12 20:45:14,532 p=10160 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 20:45:14,558 p=10160 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:45:14,560 p=10160 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for R1
2025-06-12 20:45:14,563 p=10160 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:45:14,570 p=10160 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 20:45:14,575 p=10206 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:45:14,582 p=10206 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:45:14,583 p=10206 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:45:14,587 p=10206 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:45:14,843 p=10210 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:45:14,857 p=10210 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:45:14,861 p=10210 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:45:14,904 p=10206 u=user n=ansible | network_os is set to ios
2025-06-12 20:45:14,905 p=10206 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:45:14,905 p=10206 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:45:14,905 p=10206 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:45:14,905 p=10206 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-10160h8nmopiu `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-10160h8nmopiu/ansible-tmp-1749753914.9056616-10206-119252016187100 `" && echo ansible-tmp-1749753914.9056616-10206-119252016187100="` echo /home/user/.ansible/tmp/ansible-local-10160h8nmopiu/ansible-tmp-1749753914.9056616-10206-119252016187100 `" ) && sleep 0'
2025-06-12 20:45:14,998 p=10206 u=user n=ansible | <R1> Attempting python interpreter discovery
2025-06-12 20:45:14,999 p=10206 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:45:15,001 p=10206 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:45:15,027 p=10206 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_command.py
2025-06-12 20:45:15,028 p=10206 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10160h8nmopiu/tmphqsrmnu0 TO /home/user/.ansible/tmp/ansible-local-10160h8nmopiu/ansible-tmp-1749753914.9056616-10206-119252016187100/AnsiballZ_ios_command.py
2025-06-12 20:45:15,028 p=10206 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10160h8nmopiu/ansible-tmp-1749753914.9056616-10206-119252016187100/ /home/user/.ansible/tmp/ansible-local-10160h8nmopiu/ansible-tmp-1749753914.9056616-10206-119252016187100/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 20:45:15,031 p=10206 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-10160h8nmopiu/ansible-tmp-1749753914.9056616-10206-119252016187100/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 20:45:15,164 p=10210 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:45:15,173 p=10210 u=user n=p=10210 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:45:17,442 p=10210 u=user n=p=10210 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:45:17,445 p=10210 u=user n=p=10210 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:45:17,547 p=10210 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:45:17,560 p=10206 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-10160h8nmopiu/ansible-tmp-1749753914.9056616-10206-119252016187100/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:45:17,565 p=10160 u=user n=ansible | The full traceback is:
  File "/tmp/ansible_cisco.ios.ios_command_payload_bnxh_z8e/ansible_cisco.ios.ios_command_payload.zip/ansible_collections/cisco/ios/plugins/module_utils/network/ios/ios.py", line 94, in get_capabilities
    capabilities = Connection(module._socket_path).get_capabilities()
  File "/tmp/ansible_cisco.ios.ios_command_payload_bnxh_z8e/ansible_cisco.ios.ios_command_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
    raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)

2025-06-12 20:45:17,566 p=10160 u=user n=ansible | fatal: [R1]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  invocation:
    module_args:
      commands:
      - show running-config
      interval: 1
      match: all
      provider: null
      retries: 10
      wait_for: null
  msg: No existing session
2025-06-12 20:45:17,567 p=10160 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:45:17,567 p=10160 u=user n=ansible | R1                         : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 20:45:17,667 p=10210 u=user n=ansible | shutdown complete
2025-06-12 20:47:09,130 p=10255 u=user n=ansible | ERROR! the playbook: playbook.yml could not be found
2025-06-12 20:47:23,114 p=10277 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:47:23,124 p=10277 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 20:47:23,480 p=10280 u=user n=ansible | network_os is set to ios
2025-06-12 20:47:23,484 p=10277 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 20:47:23,489 p=10277 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 20:47:23,796 p=10277 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 20:47:23,801 p=10277 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 20:47:23,821 p=10277 u=user n=ansible | skipping: [R1]
2025-06-12 20:47:23,827 p=10277 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 20:47:23,861 p=10277 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 20:47:24,156 p=10293 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 20:47:33,291 p=10277 u=user n=ansible | ok: [R1]
2025-06-12 20:47:33,296 p=10277 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 20:47:33,326 p=10277 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for R1
2025-06-12 20:47:33,340 p=10277 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 20:47:33,922 p=10284 u=user n=p=10284 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:47:36,190 p=10284 u=user n=p=10284 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:47:36,193 p=10284 u=user n=p=10284 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:47:36,314 p=10277 u=user n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was:     raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)
2025-06-12 20:47:36,314 p=10277 u=user n=ansible | fatal: [R1]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 20:47:36,319 p=10277 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:47:36,319 p=10277 u=user n=ansible | R1                         : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 20:47:36,419 p=10284 u=user n=ansible | shutdown complete
2025-06-12 20:51:14,610 p=10357 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:51:14,610 p=10357 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:51:14,615 p=10357 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:51:14,615 p=10357 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:51:14,616 p=10357 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:51:14,704 p=10357 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:51:14,710 p=10357 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:51:14,715 p=10357 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:51:14,715 p=10357 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:51:14,715 p=10357 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:51:14,715 p=10357 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:51:14,715 p=10357 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:51:14,716 p=10357 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:51:14,722 p=10357 u=user n=ansible | META: ran handlers
2025-06-12 20:51:14,723 p=10357 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 20:51:14,742 p=10360 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:51:14,752 p=10360 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:51:14,755 p=10360 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:51:14,758 p=10360 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:51:15,012 p=10364 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:51:15,026 p=10364 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:51:15,030 p=10364 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:51:15,077 p=10360 u=user n=ansible | network_os is set to ios
2025-06-12 20:51:15,082 p=10357 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 20:51:15,084 p=10357 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 20:51:15,102 p=10366 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:51:15,113 p=10366 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:51:15,117 p=10366 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:51:15,120 p=10366 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:51:15,404 p=10357 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 20:51:15,406 p=10357 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 20:51:15,426 p=10357 u=user n=ansible | skipping: [R1] => 
2025-06-12 20:51:15,428 p=10357 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 20:51:15,455 p=10357 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 20:51:15,461 p=10373 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:51:15,474 p=10373 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:51:15,479 p=10373 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:51:15,482 p=10373 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:51:15,781 p=10373 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 20:51:20,633 p=10357 u=user n=ansible | ok: [R1] => changed=false 
  delta: 4
  echo: true
  rc: 0
  start: '2025-06-12 20:51:15.780787'
  stderr: ''
  stdout: Paused for 0.08 minutes
  stop: '2025-06-12 20:51:20.631271'
  user_input: '3'
2025-06-12 20:51:20,635 p=10357 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 20:51:20,657 p=10357 u=user n=ansible | skipping: [R1] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 20:51:20,659 p=10357 u=user n=ansible | TASK [cisco : Correction de toute la configuration] ************************************************************************************************
2025-06-12 20:51:20,680 p=10357 u=user n=ansible | skipping: [R1] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 20:51:20,682 p=10357 u=user n=ansible | TASK [cisco : cherry-pick fzf] *********************************************************************************************************************
2025-06-12 20:51:20,709 p=10357 u=user n=ansible | redirecting (type: action) cisco.ios.ios_config to cisco.ios.ios
2025-06-12 20:51:20,709 p=10357 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/test_cherry-pick.yml for R1
2025-06-12 20:51:20,714 p=10357 u=user n=ansible | TASK [cisco : charger règles cis] ******************************************************************************************************************
2025-06-12 20:51:20,731 p=10382 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:51:20,740 p=10382 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:51:20,742 p=10382 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:51:20,746 p=10382 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:51:21,134 p=10357 u=user n=ansible | ok: [R1] => changed=false 
  ansible_facts:
    cis:
      1.1.1:
        audit: show running-config | incl aaa new-model
        automated_or_manual: Automated
        commande: aaa new-model
        default_value: null
        description: This command enables the AAA access control system.
        impact: |-
          Implementing Cisco AAA is significantly disruptive as former access methods are
          immediately disabled. Therefore, before implementing Cisco AAA, the organization should
          carefully review and plan their authentication criteria (logins & passwords, challenges &
          responses, and token technologies), authorization methods, and accounting requirements.
        level: Level 1
        rationale: |-
          Authentication, authorization and accounting (AAA) services provide an authoritative
          source for managing and monitoring access for devices. Centralizing control improves
          consistency of access control, the services that may be accessed once authenticated and
          accountability by tracking services accessed. Additionally, centralizing access control
          simplifies and reduces administrative costs of account provisioning and de-provisioning,
          especially when managing a large number of devices.
        remediation: aaa new-model
        titre: 1.1.1
        titre_texte: Enable 'aaa new-model'
      1.1.10:
        audit: sh run | incl aaa accounting network
        automated_or_manual: Automated
        commande: aaa accounting network
        default_value: null
        description: Runs accounting for all network-related service requests.
        impact: |-
          Implementing aaa accounting network creates accounting records for a method list
          including ARA, PPP, SLIP, and NCPs sessions. Organizations should regular monitor these
          records for exceptions, remediate issues, and report findings.
        level: Level 2
        rationale: |-
          Authentication, authorization and accounting (AAA) systems provide an authoritative
          source for managing and monitoring access for devices. Centralizing control improves
          consistency of access control, the services that may be accessed once authenticated and
          accountability by tracking services accessed. Additionally, centralizing access control
          simplifies and reduces administrative costs of account provisioning and de-provisioning,
          especially when managing a large number of devices. AAA Accounting provides a
          management and audit trail for user and administrative sessions through RADIUS and
          TACACS+.
        remediation: aaa accounting network {default | list-name | guarantee-
        titre: 1.1.10
        titre_texte: Set 'aaa accounting network'
      1.1.11:
        audit: sh run | incl aaa accounting system
        automated_or_manual: Automated
        commande: aaa accounting system
        default_value: null
        description: Performs accounting for all system-level events not associated with users, such as reloads.
        impact: |-
          Enabling aaa accounting system creates accounting records for all system-level events.
          Organizations should regular monitor these records for exceptions, remediate issues, and
          report findings regularly.
        level: Level 2
        rationale: |-
          Authentication, authorization and accounting (AAA) systems provide an authoritative
          source for managing and monitoring access for devices. Centralizing control improves
          consistency of access control, the services that may be accessed once authenticated and
          accountability by tracking services accessed. Additionally, centralizing access control
          simplifies and reduces administrative costs of account provisioning and de-provisioning,
          especially when managing a large number of devices. AAA Accounting provides a
          management and audit trail for user and administrative sessions through RADIUS and
          TACACS+.
        remediation: aaa accounting system {default | list-name | guarantee-
        titre: 1.1.11
        titre_texte: Set 'aaa accounting system'
      1.1.2:
        audit: show run | incl aaa authentication login
        automated_or_manual: Automated
        commande: aaa authentication login
        default_value: null
        description: Sets authentication, authorization and accounting (AAA) authentication at login.
        impact: |-
          Implementing Cisco AAA is significantly disruptive as former access methods are
          immediately disabled. Therefore, before implementing Cisco AAA, the organization should
          carefully review and plan their authentication methods such as logins and passwords,
          challenges and responses, and which token technologies will be used.
        level: Level 1
        rationale: |-
          Using AAA authentication for interactive management access to the device provides
          consistent, centralized control of your network. The default under AAA (local or network)
          is to require users to log in using a valid user name and password. This rule applies for
          both local and network AAA. Fallback mode should also be enabled to allow emergency
          access to the router or switch in the event that the AAA server was unreachable, by
          utilizing the LOCAL keyword after the AAA server-tag.
        remediation: aaa authentication login {default | aaa_list_name} [passwd-
        titre: 1.1.2
        titre_texte: Enable 'aaa authentication login'
      1.1.3:
        audit: show running-config | incl aaa authentication enable
        automated_or_manual: Automated
        commande: aaa authentication enable default
        default_value: null
        description: Authenticates users who access privileged EXEC mode when they use the enable command.
        impact: |-
          Enabling Cisco AAA 'authentication enable' mode is significantly disruptive as former
          access methods are immediately disabled. Therefore, before enabling 'aaa authentication
          enable default' mode, the organization should plan and implement authentication logins
          and passwords, challenges and responses, and token technologies.
        level: Level 1
        rationale: |-
          Using AAA authentication for interactive management access to the device provides
          consistent, centralized control of your network. The default under AAA (local or network)
          is to require users to log in using a valid user name and password. This rule applies for
          both local and network AAA.
        remediation: aaa authentication enable default {method1} enable
        titre: 1.1.3
        titre_texte: Enable 'aaa authentication enable default'
      1.1.4:
        audit: sh run | sec line | incl login authentication
        automated_or_manual: Automated
        commande: login authentication for
        default_value: null
        description: Authenticates users who access the router or switch using the serial console port.
        impact: |-
          Enabling Cisco AAA 'line login' is significantly disruptive as former access methods are
          immediately disabled. Therefore, before enabling Cisco AAA 'line login', the organization
          should plan and implement authentication logins and passwords, challenges and
          responses, and token technologies.
        level: Level 1
        rationale: |-
          Using AAA authentication for interactive management access to the device provides
          consistent, centralized control of your network. The default under AAA (local or network)
          is to require users to log in using a valid user name and password. This rule applies for
          both local and network AAA.
        remediation: |-
          line console 0
          login authentication {default | _aaa\_list\_name_}
        titre: 1.1.4
        titre_texte: Set 'login authentication for 'line con 0'
      1.1.5:
        audit: sh run | sec line | incl login authentication
        automated_or_manual: Automated
        commande: login authentication for
        default_value: null
        description: Authenticates users who access the router or switch using the TTY port.
        impact: |-
          Enabling Cisco AAA 'login authentication for line TTY' is significantly disruptive as former
          access methods are immediately disabled. Therefore, before enabling Cisco AAA 'login
          authentication for line TTY', the organization should plan and implement authentication
          logins and passwords, challenges and responses, and token technologies.
        level: Level 1
        rationale: |-
          Using AAA authentication for interactive management access to the device provides
          consistent, centralized control of your network. The default under AAA (local or network)
          is to require users to log in using a valid user name and password. This rule applies for
          both local and network AAA.
        remediation: |-
          line tty {line-number} [ending-line-number]
          login authentication {default | aaa_list_name}
        titre: 1.1.5
        titre_texte: Set 'login authentication for 'line tty'
      1.1.6:
        audit: |-
          sh run | sec line | incl login authentication
          sh run | incl aaa accounting commands
        automated_or_manual: Automated
        commande: login authentication for
        default_value: null
        description: |-
          Authenticates users who access the router or switch remotely through the VTY port.
          Runs accounting for all commands at the specified privilege level.
        impact: |-
          Enabling Cisco AAA 'login authentication for line VTY' is significantly disruptive as former
          access methods are immediately disabled. Therefore, before enabling Cisco AAA 'login
          authentication for line VTY', the organization should plan and implement authentication
          logins and passwords, challenges and responses, and token technologies.
          Enabling 'aaa accounting' for privileged commands records and sends activity to the
          accounting servers and enables organizations to monitor and analyze privileged activity.
        level: Level 1
        rationale: |-
          Using AAA authentication for interactive management access to the device provides
          consistent, centralized control of your network. The default under AAA (local or network)
          is to require users to log in using a valid user name and password. This rule applies for
          both local and network AAA.
          Authentication, authorization and accounting (AAA) systems provide an authoritative
          source for managing and monitoring access for devices. Centralizing control improves
          consistency of access control, the services that may be accessed once authenticated and
          accountability by tracking services accessed. Additionally, centralizing access control
          simplifies and reduces administrative costs of account provisioning and de-provisioning,
          especially when managing a large number of devices. AAA Accounting provides a
          management and audit trail for user and administrative sessions through RADIUS or
          TACACS+.
        remediation: |-
          line vty {line-number} [ending-line-number]
          login authentication {default | aaa_list_name}
          aaa accounting commands 15 {default | list-name | guarantee-
        titre: 1.1.6
        titre_texte: Set 'login authentication for 'line vty'
      1.1.8:
        audit: sh run | incl aaa accounting connection
        automated_or_manual: Automated
        commande: aaa accounting connection
        default_value: null
        description: |-
          Provides information about all outbound connections made from the network access
          server.
        impact: |-
          Implementing aaa accounting connection creates accounting records about connections
          from the network access server. Organizations should regular monitor these connection
          records for exceptions, remediate issues, and report findings regularly.
        level: Level 2
        rationale: |-
          Authentication, authorization and accounting (AAA) systems provide an authoritative
          source for managing and monitoring access for devices. Centralizing control improves
          consistency of access control, the services that may be accessed once authenticated and
          accountability by tracking services accessed. Additionally, centralizing access control
          simplifies and reduces administrative costs of account provisioning and de-provisioning,
          especially when managing a large number of devices. AAA Accounting provides a
          management and audit trail for user and administrative sessions through RADIUS and
          TACACS+.
        remediation: aaa accounting connection {default | list-name | guarantee-
        titre: 1.1.8
        titre_texte: Set 'aaa accounting connection'
      1.1.9:
        audit: sh run | incl aaa accounting exec
        automated_or_manual: Automated
        commande: aaa accounting exec
        default_value: null
        description: Runs accounting for the EXEC shell session.
        impact: |-
          Enabling aaa accounting exec creates accounting records for the EXEC terminal sessions on
          the network access server. These records include start and stop times, usernames, and date
          information. Organizations should regularly monitor these records for exceptions,
          remediate issues, and report findings.
        level: Level 2
        rationale: |-
          Authentication, authorization and accounting (AAA) systems provide an authoritative
          source for managing and monitoring access for devices. Centralizing control improves
          consistency of access control, the services that may be accessed once authenticated and
          accountability by tracking services accessed. Additionally, centralizing access control
          simplifies and reduces administrative costs of account provisioning and de-provisioning,
          especially when managing a large number of devices. AAA Accounting provides a
          management and audit trail for user and administrative sessions through RADIUS and
          TACACS+.
        remediation: aaa accounting exec {default | list-name | guarantee-first}
        titre: 1.1.9
        titre_texte: Set 'aaa accounting exec'
      1.2.1:
        audit: show run | incl privilege
        automated_or_manual: Automated
        commande: privilege 1
        default_value: null
        description: Sets the privilege level for the user.
        impact: |-
          Organizations should create policies requiring all local accounts with 'privilege level 1' with
          encrypted passwords to reduce the risk of unauthorized access. Default configuration
          settings do not provide strong user authentication to the device.
        level: Level 1
        rationale: |-
          Default device configuration does not require strong user authentication potentially
          enabling unfettered access to an attacker that is able to reach the device. Creating a local
          account with privilege level 1 permissions only allows the local user to access the device
          with EXEC-level permissions and will be unable to modify the device without using the
          enable password. In addition, require the use of an encrypted password as well (see
          Section 1.1.4.4 - Require Encrypted User Passwords).
        remediation: username <LOCAL_USERNAME> privilege 1
        titre: 1.2.1
        titre_texte: Set 'privilege 1' for local users
      1.2.10:
        audit: null
        automated_or_manual: Automated
        commande: exec-timeout
        default_value: null
        description: null
        impact: null
        level: Level 1
        rationale: null
        remediation: null
        titre: 1.2.10
        titre_texte: Set 'exec-timeout' to less than or equal to 10 minutes 'line vty'
      1.2.11:
        audit: sh line aux 0 | incl input transports
        automated_or_manual: Automated
        commande: transport input none
        default_value: null
        description: When you want to allow only an outgoing connection on a line, use the no exec command.
        impact: |-
          Organizations should prevent all unauthorized access of auxiliary ports by disabling all
          protocols using the 'transport input none' command.
        level: Level 1
        rationale: |-
          Unused ports should be disabled, if not required, since they provide a potential access path
          for attackers. Some devices include both an auxiliary and console port that can be used to
          locally connect to and configure the device. The console port is normally the primary port
          used to configure the device; even when remote, backup administration is required via
          console server or Keyboard, Video, Mouse (KVM) hardware. The auxiliary port is primarily
          used for dial-up administration via an external modem; instead, use other available
          methods.
        remediation: |-
          line aux 0
          transport input none
        titre: 1.2.11
        titre_texte: Set 'transport input none' for 'line aux 0'
      1.2.2:
        audit: sh run | sec vty
        automated_or_manual: Automated
        commande: transport input ssh
        default_value: null
        description: Selects the Secure Shell (SSH) protocol.
        impact: |-
          To reduce risk of unauthorized access, organizations should require all VTY management
          line protocols to be limited to ssh.
        level: Level 1
        rationale: |-
          Configuring VTY access control restricts remote access to only those authorized to manage
          the device and prevents unauthorized users from accessing the system.
        remediation: |-
          line vty <line-number> <ending-line-number>
          transport input ssh
        titre: 1.2.2
        titre_texte: Set 'transport input ssh' for 'line vty' connections
      1.2.3:
        audit: |-
          sh run | sec aux
          sh line aux 0 | incl exec
        automated_or_manual: Automated
        commande: no exec
        default_value: null
        description: The 'no exec' command restricts a line to outgoing connections only.
        impact: |-
          Organizations can reduce the risk of unauthorized access by disabling the 'aux' port with
          the 'no exec' command. Conversely, not restricting access through the 'aux' port increases
          the risk of remote unauthorized access.
        level: Level 1
        rationale: |-
          Unused ports should be disabled, if not required, since they provide a potential access path
          for attackers. Some devices include both an auxiliary and console port that can be used to
          locally connect to and configure the device. The console port is normally the primary port
          used to configure the device; even when remote, backup administration is required via
          console server or Keyboard, Video, Mouse (KVM) hardware. The auxiliary port is primarily
          used for dial-up administration via an external modem; instead, use other available
          methods.
        remediation: |-
          line aux 0
          no exec
        titre: 1.2.3
        titre_texte: Set 'no exec' for 'line aux 0'
      1.2.4:
        audit: sh ip access-list <vty_acl_number>
        automated_or_manual: Automated
        commande: access-list
        default_value: null
        description: |-
          Access lists control the transmission of packets on an interface, control Virtual Terminal
          Line (VTY) access, and restrict the contents of routing updates. The Cisco IOS software
          stops checking the extended access list after a match occurs.
        impact: |-
          Organizations can reduce the risk of unauthorized access by implementing access-lists for
          all VTY lines. Conversely, using VTY lines without access-lists increases the risk of
          unauthorized access.
        level: Level 1
        rationale: |-
          VTY ACLs control what addresses may attempt to log in to the router. Configuring VTY lines
          to use an ACL, restricts the sources where a user can manage the device. You should limit
          the specific host(s) and or network(s) authorized to connect to and configure the device,
          via an approved protocol, to those individuals or systems authorized to administer the
          device. For example, you could limit access to specific hosts, so that only network managers
          can configure the devices only by using specific network management workstations. Make
          sure you configure all VTY lines to use the same ACL.
        remediation: |-
          access-list <vty_acl_number> permit tcp
          access-list <vty_acl_number> permit tcp host <vty_acl_host>
          deny ip any any log
        titre: 1.2.4
        titre_texte: Create 'access-list' for use with 'line vty'
      1.2.5:
        audit: |-
          sh run | sec vty <line-number> <ending-line-number>
          sh run | sec line aux 0
          sh run | sec line con 0
          sh line tty <tty_line_number> | begin Timeout
          sh line vty <tty_line_number> | begin Timeout
          sh line vty <tty_line_number> | begin Timeout
        automated_or_manual: Automated
        commande: access-class
        default_value: null
        description: |-
          The 'access-class' setting restricts incoming and outgoing connections between a particular
          vty (into a Cisco device) and the networking devices associated with addresses in an access
          list.
          If no input is detected during the interval, the EXEC facility resumes the current connection.
          If no connections exist, the EXEC facility returns the terminal to the idle state and
          disconnects the incoming session.
          If no input is detected during the interval, the EXEC facility resumes the current connection.
          If no connections exist, the EXEC facility returns the terminal to the idle state and
          disconnects the incoming session.
          If no input is detected during the interval, the EXEC facility resumes the current connection.
          If no connections exist, the EXEC facility returns the terminal to the idle state and
          disconnects the incoming session.
          If no input is detected during the interval, the EXEC facility resumes the current connection.
          If no connections exist, the EXEC facility returns the terminal to the idle state and
          disconnects the incoming session.
          If no input is detected during the interval, the EXEC facility resumes the current connection.
          If no connections exist, the EXEC facility returns the terminal to the idle state and
          disconnects the incoming session.
        impact: |-
          Applying 'access'class' to line VTY further restricts remote access to only those devices
          authorized to manage the device and reduces the risk of unauthorized access. Conversely,
          using VTY lines with 'access class' restrictions increases the risks of unauthorized access.
          Organizations should prevent unauthorized use of unattended or abandoned sessions by an
          automated control. Enabling 'exec-timeout' with an appropriate length of minutes or
          seconds prevents unauthorized access of abandoned sessions.
          Organizations should prevent unauthorized use of unattended or abandoned sessions by an
          automated control. Enabling 'exec-timeout' with an appropriate length reduces the risk of
          unauthorized access of abandoned sessions.
          Organizations should prevent unauthorized use of unattended or abandoned sessions by an
          automated control. Enabling 'exec-timeout' with an appropriate length reduces the risks of
          unauthorized access of abandoned sessions.
          Organizations should prevent unauthorized use of unattended or abandoned sessions by an
          automated control. Enabling 'exec-timeout' with an appropriate length of minutes or
          seconds prevents unauthorized access of abandoned sessions.
          Organizations should prevent unauthorized use of unattended or abandoned sessions by an
          automated control. Enabling 'exec-timeout' with an appropriate length of minutes or
          seconds prevents unauthorized access of abandoned sessions.
        level: Level 1
        rationale: |-
          Restricting the type of network devices, associated with the addresses on the access-list,
          further restricts remote access to those devices authorized to manage the device and
          reduces the risk of unauthorized access.
          This prevents unauthorized users from misusing abandoned sessions. For example, if the
          network administrator leaves for the day and leaves a computer open with an enabled
          login session accessible. There is a trade-off here between security (shorter timeouts) and
          usability (longer timeouts). Review your local policies and operational needs to determine
          the best timeout value. In most cases, this should be no more than 10 minutes.
          This prevents unauthorized users from misusing abandoned sessions. For example, if the
          network administrator leaves for the day and leaves a computer open with an enabled
          login session accessible. There is a trade-off here between security (shorter timeouts) and
          usability (longer timeouts). Review your local policies and operational needs to determine
          the best timeout value. In most cases, this should be no more than 10 minutes.
          This prevents unauthorized users from misusing abandoned sessions. For example, if the
          network administrator leaves for the day and leaves a computer open with an enabled
          login session accessible. There is a trade-off here between security (shorter timeouts) and
          usability (longer timeouts). Review your local policies and operational needs to determine
          the best timeout value. In most cases, this should be no more than 10 minutes.
          This prevents unauthorized users from misusing abandoned sessions. For example, if the
          network administrator leaves for the day and leaves a computer open with an enabled
          login session accessible. There is a trade-off here between security (shorter timeouts) and
          usability (longer timeouts). Review your local policies and operational needs to determine
          the best timeout value. In most cases, this should be no more than 10 minutes.
          This prevents unauthorized users from misusing abandoned sessions. For example, if the
          network administrator leaves for the day and leaves a computer open with an enabled
          login session accessible. There is a trade-off here between security (shorter timeouts) and
          usability (longer timeouts). Review your local policies and operational needs to determine
          the best timeout value. In most cases, this should be no more than 10 minutes.
        remediation: |-
          line vty <line-number> <ending-line-number>
          access-class <vty_acl_number> in
          line aux 0
          exec-timeout <timeout_in_minutes> <timeout_in_seconds>
          line con 0
          exec-timeout <timeout_in_minutes> <timeout_in_seconds>
          line tty {line_number} [ending_line_number]
          exec-timeout <timeout_in_minutes> <timeout_in_seconds>
          line vty {line_number} [ending_line_number]
          exec-timeout <<span>timeout_in_minutes>
          line vty {line_number} [ending_line_number]
          exec-timeout <<span>timeout_in_minutes>
        titre: 1.2.5
        titre_texte: Set 'access-class' for 'line vty'
      1.2.9:
        audit: null
        automated_or_manual: Automated
        commande: exec-timeout
        default_value: null
        description: null
        impact: null
        level: null
        rationale: null
        remediation: null
        titre: 1.2.9
        titre_texte: Set 'exec-timeout' to less than or equal to 10 minutes 'line vty'
      1.3.1:
        audit: sh running-config | beg banner exec
        automated_or_manual: Automated
        commande: banner-text
        default_value: null
        description: |-
          This command specifies a message to be displayed when an EXEC process is created (a line
          is activated, or an incoming connection is made to a vty). Follow this command with one or
          more blank spaces and a delimiting character of your choice. Then enter one or more lines
          of text, terminating the message with the second occurrence of the delimiting character.
          When a user connects to a router, the message-of-the-day (MOTD) banner appears first,
          followed by the login banner and prompts. After the user logs in to the router, the EXEC
          banner or incoming banner will be displayed, depending on the type of connection. For a
          reverse Telnet login, the incoming banner will be displayed. For all other connections, the
          router will display the EXEC banner.
        impact: |-
          Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
          their networks by using a 'banner-text' for the banner exec command.
        level: Level 1
        rationale: |-
          "Network banners are electronic messages that provide notice of legal rights to users of
          computer networks. From a legal standpoint, banners have four primary functions.
          • First, banners may be used to generate consent to real-time monitoring under Title
          III.
          • Second, banners may be used to generate consent to the retrieval of stored files and
          records pursuant to ECPA.
          • Third, in the case of government networks, banners may eliminate any Fourth
          Amendment "reasonable expectation of privacy" that government employees or
          other users might otherwise retain in their use of the government's network under
          O'Connor v. Ortega, 480 U.S. 709 (1987).
          • Fourth, in the case of a non-government network, banners may establish a system
          administrator's "common authority" to consent to a law enforcement search
          pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US Department of
          Justice APPENDIX A: Sample Network Banner Language)
  
  
  
          57 | P a g e
        remediation: banner exec c
        titre: 1.3.1
        titre_texte: Set the 'banner-text' for 'banner exec'
      1.3.2:
        audit: show running-config | beg banner login
        automated_or_manual: Automated
        commande: banner-text
        default_value: null
        description: |-
          Follow the banner login command with one or more blank spaces and a delimiting
          character of your choice. Then enter one or more lines of text, terminating the message
          with the second occurrence of the delimiting character.
          When a user connects to the router, the message-of-the-day (MOTD) banner (if configured)
          appears first, followed by the login banner and prompts. After the user successfully logs in
          to the router, the EXEC banner or incoming banner will be displayed, depending on the
          type of connection. For a reverse Telnet login, the incoming banner will be displayed. For
          all other connections, the router will display the EXEC banner.
        impact: |-
          Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
          their networks by using a 'banner-text' for the banner login command.
  
  
  
          60 | P a g e
        level: Level 1
        rationale: |-
          "Network banners are electronic messages that provide notice of legal rights to users of
          computer networks. From a legal standpoint, banners have four primary functions.
          • First, banners may be used to generate consent to real-time monitoring under Title
          III.
          • Second, banners may be used to generate consent to the retrieval of stored files and
          records pursuant to ECPA.
          • Third, in the case of government networks, banners may eliminate any Fourth
          Amendment "reasonable expectation of privacy" that government employees or
          other users might otherwise retain in their use of the government's network under
          O'Connor v. Ortega, 480 U.S. 709 (1987).
          • Fourth, in the case of a non-government network, banners may establish a system
          administrator's "common authority" to consent to a law enforcement search
          pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US Department of
          Justice APPENDIX A: Sample Network Banner Language)
        remediation: banner login c
        titre: 1.3.2
        titre_texte: Set the 'banner-text' for 'banner login'
      1.3.3:
        audit: sh running-config | beg banner motd
        automated_or_manual: Automated
        commande: banner-text
        default_value: null
        description: |-
          This MOTD banner is displayed to all terminals connected and is useful for sending
          messages that affect all users (such as impending system shutdowns). Use the no exec-
          banner or no motd-banner command to disable the MOTD banner on a line. The no exec-
          banner command also disables the EXEC banner on the line.
          When a user connects to the router, the MOTD banner appears before the login prompt.
          After the user logs in to the router, the EXEC banner or incoming banner will be displayed,
          depending on the type of connection. For a reverse Telnet login, the incoming banner will
          be displayed. For all other connections, the router will display the EXEC banner.
        impact: |-
          Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
          their networks by using a 'banner-text' for the banner motd command.
  
  
  
          62 | P a g e
        level: Level 1
        rationale: |-
          "Network banners are electronic messages that provide notice of legal rights to users of
          computer networks. From a legal standpoint, banners have four primary functions.
          • First, banners may be used to generate consent to real-time monitoring under Title
          III.
          • Second, banners may be used to generate consent to the retrieval of stored files and
          records pursuant to ECPA.
          • Third, in the case of government networks, banners may eliminate any Fourth
          Amendment "reasonable expectation of privacy" that government employees or
          other users might otherwise retain in their use of the government's network under
          O'Connor v. Ortega, 480 U.S. 709 (1987).
          • Fourth, in the case of a non-government network, banners may establish a system
          administrator's "common authority" to consent to a law enforcement search
          pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US Department of
          Justice APPENDIX A: Sample Network Banner Language)
        remediation: banner motd c
        titre: 1.3.3
        titre_texte: Set the 'banner-text' for 'banner motd'
      1.4.1:
        audit: sh run | incl enable secret
        automated_or_manual: Automated
        commande: password
        default_value: null
        description: |-
          Use the enable secret command to provide an additional layer of security over the enable
          password. The enable secret command provides better security by storing the enable
          secret password using a nonreversible cryptographic function. The added layer of security
          encryption provides is useful in environments where the password crosses the network or
          is stored on a TFTP server.
        impact: |-
          Organizations should protect privileged EXEC mode through policies requiring the
          'enabling secret' setting, which enforces a one-way cryptographic hash (MD5).
        level: Level 1
        rationale: |-
          Requiring the enable secret setting protects privileged EXEC mode. By default, a strong
          password is not required, a user can just press the Enter key at the Password prompt to
          start privileged mode. The enable password command causes the device to enforce use of a
          password to access privileged mode. Enable secrets use a one-way cryptographic hash
          (MD5). This is preferred to Level 7 enable passwords that use a weak, well-known, and
          easily reversible encryption algorithm.
        remediation: enable secret {ENABLE_SECRET_PASSWORD}
        titre: 1.4.1
        titre_texte: Set 'password' for 'enable secret'
      1.4.2:
        audit: sh run | incl service password-encryption
        automated_or_manual: Automated
        commande: service password-encryption
        default_value: null
        description: |-
          When password encryption is enabled, the encrypted form of the passwords is displayed
          when a more system:running-config command is entered.
        impact: |-
          Organizations implementing 'service password-encryption' reduce the risk of unauthorized
          users learning clear text passwords to Cisco IOS configuration files. However, the algorithm
          used is not designed to withstand serious analysis and should be treated like clear-text.
        level: Level 1
        rationale: |-
          This requires passwords to be encrypted in the configuration file to prevent unauthorized
          users from learning the passwords just by reading the configuration. When not enabled,
          many of the device's passwords will be rendered in plain text in the configuration file. This
          service ensures passwords are rendered as encrypted strings preventing an attacker from
          easily determining the configured value.
        remediation: service password-encryption
        titre: 1.4.2
        titre_texte: Enable 'service password-encryption'
      1.4.3:
        audit: show run | incl username
        automated_or_manual: Automated
        commande: username secret
        default_value: null
        description: |-
          Use the username secret command to configure a username and MD5-encrypted user
          password. MD5 encryption is a strong encryption method that is not retrievable; thus, you
          cannot use MD5 encryption with protocols that require clear-text passwords, such as
          Challenge Handshake Authentication Protocol (CHAP).
          The username secret command provides an additional layer of security over the username
          password. It also provides better security by encrypting the password using non reversible
          MD5 encryption and storing the encrypted text. The added layer of MD5 encryption is
          useful in environments in which the password crosses the network or is stored on a TFTP
          server.
        impact: |-
          Organizations implementing 'username secret' across their enterprise reduce the risk of
          unauthorized users gaining access to Cisco IOS devices by applying a MD5 hash and
          encrypting user passwords.
        level: Level 1
        rationale: |-
          Default device configuration does not require strong user authentication potentially
          enabling unfettered access to an attacker that is able to reach the device. Creating a local
          account with an encrypted password enforces login authentication and provides a fallback
          authentication mechanism for configuration in a named method list in a situation where
          centralized authentication, authorization, and accounting services are unavailable.
        remediation: username {LOCAL_USERNAME} secret
        titre: 1.4.3
        titre_texte: Set 'username secret' for all local users
      1.5.1:
        audit: show snmp community
        automated_or_manual: Automated
        commande: no snmp-server
        default_value: null
        description: If not in use, disable simple network management protocol (SNMP), read and write access.
        impact: |-
          Organizations not using SNMP should require all SNMP services to be disabled by running
          the 'no snmp-server' command.
        level: Level 1
        rationale: SNMP read access allows remote monitoring and management of the device.
        remediation: no snmp-server
        titre: 1.5.1
        titre_texte: Set 'no snmp-server' to disable SNMP when unused
      1.5.2:
        audit: show snmp community
        automated_or_manual: Automated
        commande: private
        default_value: null
        description: An SNMP community string permits read-only access to all objects.
        impact: |-
          To reduce the risk of unauthorized access, Organizations should disable default, easy to
          guess, settings such as the 'private' setting for snmp-server community.
        level: Level 1
        rationale: |-
          The default community string "private" is well known. Using easy to guess, well known
          community string poses a threat that an attacker can effortlessly gain unauthorized access
          to the device.
        remediation: no snmp-server community {private}
        titre: 1.5.2
        titre_texte: Unset 'private' for 'snmp-server community'
      1.5.3:
        audit: show snmp community
        automated_or_manual: Automated
        commande: public
        default_value: null
        description: An SNMP community string permits read-only access to all objects.
        impact: |-
          To reduce the risk of unauthorized access, Organizations should disable default, easy to
          guess, settings such as the 'public' setting for snmp-server community.
        level: Level 1
        rationale: |-
          The default community string "public" is well known. Using easy to guess, well known
          community string poses a threat that an attacker can effortlessly gain unauthorized access
          to the device.
        remediation: no snmp-server community {public}
        titre: 1.5.3
        titre_texte: Unset 'public' for 'snmp-server community'
      1.5.4:
        audit: show run | incl snmp-server community
        automated_or_manual: Automated
        commande: RW
        default_value: null
        description: |-
          Specifies read-write access. Authorized management stations can both retrieve and modify
          MIB objects.
        impact: |-
          To reduce the risk of unauthorized access, Organizations should disable the SNMP 'write'
          access for snmp-server community.
        level: Level 1
        rationale: |-
          Enabling SNMP read-write enables remote management of the device. Unless absolutely
          necessary, do not allow simple network management protocol (SNMP) write access.
        remediation: no snmp-server community {write_community_string}
        titre: 1.5.4
        titre_texte: Do not set 'RW' for any 'snmp-server community'
      1.5.5:
        audit: show run | incl snmp-server community
        automated_or_manual: Automated
        commande: snmp-server community
        default_value: null
        description: |-
          This feature specifies a list of IP addresses that are allowed to use the community string to
          gain access to the SNMP agent.
        impact: |-
          To reduce the risk of unauthorized access, Organizations should enable access control lists
          for all snmp-server communities and restrict the access to appropriate trusted
          management zones. If possible, implement SNMPv3 to apply authentication, authorization,
          and data privatization (encryption) for additional benefits to the organization.
        level: Level 1
        rationale: |-
          If ACLs are not applied, then anyone with a valid SNMP community string can potentially
          monitor and manage the router. An ACL should be defined and applied for all SNMP access
          to limit access to a small number of authorized management stations segmented in a
          trusted management zone. If possible, use SNMPv3 which uses authentication,
          authorization, and data privatization (encryption).
        remediation: snmp-server community <community_string> ro
        titre: 1.5.5
        titre_texte: Set the ACL for each 'snmp-server community'
      1.5.6:
        audit: sh ip access-list <snmp_acl_number>
        automated_or_manual: Automated
        commande: access-list
        default_value: null
        description: |-
          You can use access lists to control the transmission of packets on an interface, control
          Simple Network Management Protocol (SNMP) access, and restrict the contents of routing
          updates. The Cisco IOS software stops checking the extended access list after a match
          occurs.
        impact: null
        level: Level 1
        rationale: |-
          SNMP ACLs control what addresses are authorized to manage and monitor the device via
          SNMP. If ACLs are not applied, then anyone with a valid SNMP community string may
          monitor and manage the router. An ACL should be defined and applied for all SNMP
          community strings to limit access to a small number of authorized management stations
          segmented in a trusted management zone.
        remediation: |-
          access-list <snmp_acl_number> permit
          access-list deny any log
        titre: 1.5.6
        titre_texte: Create an 'access-list' for use with SNMP
      1.5.7:
        audit: show run | incl snmp-server
        automated_or_manual: Automated
        commande: snmp-server host
        default_value: null
        description: SNMP notifications can be sent as traps to authorized management systems.
        impact: |-
          Organizations using SNMP should restrict sending SNMP messages only to explicitly named
          systems to reduce unauthorized access.
        level: Level 1
        rationale: |-
          If SNMP is enabled for device management and device alerts are required, then ensure the
          device is configured to submit traps only to authorize management systems.
        remediation: snmp-server host {ip_address} {trap_community_string}
        titre: 1.5.7
        titre_texte: Set 'snmp-server host' when using SNMP
      1.5.8:
        audit: show run | incl snmp-server
        automated_or_manual: Automated
        commande: snmp-server enable traps snmp
        default_value: null
        description: SNMP notifications can be sent as traps to authorized management systems.
        impact: |-
          Organizations using SNMP should restrict trap types only to explicitly named traps to
          reduce unintended traffic. Enabling SNMP traps without specifying trap type will enable all
          SNMP trap types.
        level: Level 1
        rationale: SNMP has the ability to submit traps .
        remediation: snmp-server enable traps snmp authentication linkup linkdown
        titre: 1.5.8
        titre_texte: Set 'snmp-server enable traps snmp'
      1.5.9:
        audit: |-
          show snmp group
          show snmp user
        automated_or_manual: Automated
        commande: priv
        default_value: null
        description: |-
          Specifies authentication of a packet with encryption when using SNMPv3
          Specify the use of a minimum of 128-bit AES algorithm for encryption when using SNMPv3.
        impact: |-
          Organizations using SNMP can significantly reduce the risks of unauthorized access by
          using the 'snmp-server group v3 priv' setting to encrypt messages in transit.
          Organizations using SNMP can significantly reduce the risks of unauthorized access by
          using the 'snmp-server user' setting with appropriate authentication and privacy protocols
          to encrypt messages in transit.
        level: Level 2
        rationale: |-
          SNMPv3 provides much improved security over previous versions by offering options for
          Authentication and Encryption of messages. When configuring a user for SNMPv3 you have
          the option of using a range of encryption schemes, or no encryption at all, to protect
          messages in transit. AES128 is the minimum strength encryption method that should be
          deployed.
          SNMPv3 provides much improved security over previous versions by offering options for
          Authentication and Encryption of messages. When configuring a user for SNMPv3 you have
          the option of using a range of encryption schemes, or no encryption at all, to protect
          messages in transit. AES128 is the minimum strength encryption method that should be
          deployed.
        remediation: |-
          snmp-server group {group_name} v3 priv
          snmp-server user {user_name} {group_name} v3 auth sha
        titre: 1.5.9
        titre_texte: Set 'priv' for each 'snmp-server group' using SNMPv3
      2.1.1.1.1:
        audit: sh run | incl hostname
        automated_or_manual: Automated
        commande: hostname
        default_value: null
        description: The hostname is used in prompts and default configuration filenames.
        impact: |-
          Organizations should plan the enterprise network and identify an appropriate host name
          for each router.
        level: Level 1
        rationale: The domain name is prerequisite for setting up SSH.
        remediation: hostname {router_name}
        titre: 2.1.1.1.1
        titre_texte: Set the 'hostname'
      2.1.1.1.2:
        audit: |-
          sh run | incl domain-name
          sh crypto key mypubkey rsa
        automated_or_manual: Automated
        commande: ip domain-name
        default_value: null
        description: |-
          Define a default domain name that the Cisco IOS software uses to complete unqualified
          hostnames
          Use this command to generate RSA key pairs for your Cisco device.
          RSA keys are generated in pairs--one public RSA key and one private RSA key.
        impact: |-
          Organizations should plan the enterprise network and identify an appropriate domain
          name for the router.
          Organizations should plan and implement enterprise network cryptography and generate
          an appropriate RSA key pairs, such as 'modulus', greater than or equal to 2048.
        level: Level 1
        rationale: |-
          The domain name is a prerequisite for setting up SSH.
          An RSA key pair is a prerequisite for setting up SSH and should be at least 2048 bits.
          NOTE: IOS does NOT display the modulus bit value in the Audit Procedure.
        remediation: ip domain-name {domain-name}
        titre: 2.1.1.1.2
        titre_texte: Set the 'ip domain-name'
      2.1.1.1.4:
        audit: |-
          sh ip ssh
          sh ip ssh
        automated_or_manual: Automated
        commande: seconds
        default_value: null
        description: |-
          The time interval that the router waits for the SSH client to respond before disconnecting
          an uncompleted login attempt.
          The number of retries before the SSH login session disconnects.
        impact: |-
          Organizations should implement a security policy requiring minimum timeout settings for
          all network administrators and enforce the policy through the 'ip ssh timeout' command.
          Organizations should implement a security policy limiting the number of authentication
          attempts for network administrators and enforce the policy through the 'ip ssh
          authentication-retries' command.
        level: Level 1
        rationale: |-
          This reduces the risk of an administrator leaving an authenticated session logged in for an
          extended period of time.
          This limits the number of times an unauthorized user can attempt a password without
          having to establish a new SSH login attempt. This reduces the potential for success during
          online brute force attacks by limiting the number of login attempts per SSH connection.
        remediation: |-
          ip ssh time-out [60]
          ip ssh authentication-retries [3]
        titre: 2.1.1.1.4
        titre_texte: Set 'seconds' for 'ip ssh timeout'
      2.1.1.2:
        audit: sh ip ssh
        automated_or_manual: Automated
        commande: ip ssh version
        default_value: null
        description: Specify the version of Secure Shell (SSH) to be run on a router
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy to review their current protocols to ensure the most secure protocol versions are in
          use.
        level: Level 1
        rationale: |-
          SSH Version 1 has been subject to a number of serious vulnerabilities and is no longer
          considered to be a secure protocol, resulting in the adoption of SSH Version 2 as an Internet
          Standard in 2006.
          Cisco routers support both versions, but due to the weakness of SSH Version 1 only the
          later standard should be used.
        remediation: ip ssh version 2
        titre: 2.1.1.2
        titre_texte: Set version 2 for 'ip ssh version'
      2.1.2:
        audit: show cdp
        automated_or_manual: Automated
        commande: no cdp run
        default_value: null
        description: Disable Cisco Discovery Protocol (CDP) service at device level.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting network protocols and explicitly require disabling all insecure or
          unnecessary protocols.
        level: Level 1
        rationale: |-
          The Cisco Discovery Protocol is a proprietary protocol that Cisco devices use to identify
          each other on a LAN segment. It is useful only in network monitoring and troubleshooting
          situations but is considered a security risk because of the amount of information provided
          from queries. In addition, there have been published denial-of-service (DoS) attacks that
          use CDP. CDP should be completely disabled unless necessary.
        remediation: no cdp run
        titre: 2.1.2
        titre_texte: Set 'no cdp run'
      2.1.3:
        audit: show run | incl bootp
        automated_or_manual: Automated
        commande: no ip bootp server
        default_value: null
        description: Disable the Bootstrap Protocol (BOOTP) service on your routing device.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting network protocols and explicitly require disabling all insecure or
          unnecessary protocols such as 'ip bootp server'.
        level: Level 1
        rationale: |-
          BootP allows a router to issue IP addresses. This should be disabled unless there is a
          specific requirement.
        remediation: ip dhcp bootp ignore
        titre: 2.1.3
        titre_texte: Set 'no ip bootp server'
      2.1.4:
        audit: show run | incl dhcp
        automated_or_manual: Automated
        commande: no service dhcp
        default_value: null
        description: |-
          Disable the Dynamic Host Configuration Protocol (DHCP) server and relay agent features
          on your router.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting network protocols and explicitly require disabling all insecure or
          unnecessary protocols such as the Dynamic Host Configuration Protocol (DHCP).
        level: Level 1
        rationale: |-
          The DHCP server supplies automatic configuration parameters, such as dynamic IP
          address, to requesting systems. A dedicated server located in a secured management zone
          should be used to provide DHCP services instead. Attackers can potentially be used for
          denial-of-service (DoS) attacks.
        remediation: <strong>no service dhcp</strong>
        titre: 2.1.4
        titre_texte: Set 'no service dhcp'
      2.1.5:
        audit: show run | incl identd
        automated_or_manual: Automated
        commande: no ip identd
        default_value: null
        description: Disable the identification (identd) server.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting network protocols and explicitly require disabling all insecure or
          unnecessary protocols such as the identification protocol (identd).
        level: Level 1
        rationale: |-
          Identification protocol enables identifying a user's transmission control protocol (TCP)
          session. This information disclosure could potentially provide an attacker with information
          about users.
        remediation: no ip identd
        titre: 2.1.5
        titre_texte: Set 'no ip identd'
      2.1.6:
        audit: show run | incl service tcp
        automated_or_manual: Automated
        commande: service tcp-keepalives-in
        default_value: null
        description: Generate keepalive packets on idle incoming network connections.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting how long to allow terminated sessions and enforce this policy through the
          use of 'tcp-keepalives-in' command.
        level: Level 1
        rationale: |-
          Stale connections use resources and could potentially be hijacked to gain illegitimate
          access. The TCP keepalives-in service generates keepalive packets on idle incoming
          network connections (initiated by remote host). This service allows the device to detect
          when the remote host fails and drop the session. If enabled, keepalives are sent once per
          minute on idle connections. The connection is closed within five minutes if no keepalives
          are received or immediately if the host replies with a reset packet.
        remediation: service tcp-keepalives-in
        titre: 2.1.6
        titre_texte: Set 'service tcp-keepalives-in'
      2.1.7:
        audit: show run | incl service tcp
        automated_or_manual: Automated
        commande: service tcp-keepalives-out
        default_value: null
        description: Generate keepalive packets on idle outgoing network connections.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting how long to allow terminated sessions and enforce this policy through the
          use of 'tcp-keepalives-out' command.
        level: Level 1
        rationale: |-
          Stale connections use resources and could potentially be hijacked to gain illegitimate
          access. The TCP keepalives-in service generates keepalive packets on idle incoming
          network connections (initiated by remote host). This service allows the device to detect
          when the remote host fails and drop the session. If enabled, keepalives are sent once per
          minute on idle connections. The closes connection is closed within five minutes if no
          keepalives are received or immediately if the host replies with a reset packet.
        remediation: service tcp-keepalives-out
        titre: 2.1.7
        titre_texte: Set 'service tcp-keepalives-out'
      2.1.8:
        audit: show run | incl service pad
        automated_or_manual: Automated
        commande: no service pad
        default_value: null
        description: Disable X.25 Packet Assembler/Disassembler (PAD) service.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting unnecessary services such as the 'PAD' service.
        level: Level 1
        rationale: |-
          If the PAD service is not necessary, disable the service to prevent intruders from accessing
          the X.25 PAD command set on the router.
        remediation: no service pad
        titre: 2.1.8
        titre_texte: Set 'no service pad'
      2.2.1:
        audit: show run | incl logging
        automated_or_manual: Automated
        commande: logging on
        default_value: null
        description: Enable logging of system messages.
        impact: |-
          Enabling the Cisco IOS 'logging on' command enforces the monitoring of technology risks
          for the organizations' network devices.
        level: Level 1
        rationale: |-
          Logging provides a chronological record of activities on the Cisco device and allows
          monitoring of both operational and security related events.
        remediation: logging enable
        titre: 2.2.1
        titre_texte: Set 'logging on'
      2.2.2:
        audit: show run | incl logging buffered
        automated_or_manual: Automated
        commande: buffer size
        default_value: null
        description: Enable system message logging to a local buffer.
        impact: |-
          Data forensics is effective for managing technology risks and an organization can enforce
          such policies by enabling the 'logging buffered' command.
        level: Level 1
        rationale: |-
          The device can copy and store log messages to an internal memory buffer. The buffered
          data is available only from a router exec or enabled exec session. This form of logging is
          useful for debugging and monitoring when logged in to a router.
        remediation: logging buffered [log_buffer_size]
        titre: 2.2.2
        titre_texte: Set 'buffer size' for 'logging buffered'
      2.2.3:
        audit: show run | incl logging console
        automated_or_manual: Automated
        commande: logging console critical
        default_value: null
        description: |-
          Verify logging to device console is enabled and limited to a rational severity level to avoid
          impacting system performance and management.
        impact: |-
          Logging critical messages at the console is important for an organization managing
          technology risk. The 'logging console' command should capture appropriate severity
          messages to be effective.
        level: Level 1
        rationale: |-
          This configuration determines the severity of messages that will generate console
          messages. Logging to console should be limited only to those messages required for
          immediate troubleshooting while logged into the device. This form of logging is not
          persistent; messages printed to the console are not stored by the router. Console logging is
          handy for operators when they use the console.
        remediation: logging console critical
        titre: 2.2.3
        titre_texte: Set 'logging console critical'
      2.2.4:
        audit: sh log | incl logging host
        automated_or_manual: Automated
        commande: logging host
        default_value: null
        description: Log system messages and debug output to a remote host.
        impact: |-
          Logging is an important process for an organization managing technology risk. The 'logging
          host' command sets the IP address of the logging host and enforces the logging process.
        level: Level 1
        rationale: |-
          Cisco routers can send their log messages to a Unix-style Syslog service. A syslog service
          simply accepts messages and stores them in files or prints them according to a simple
          configuration file. This form of logging is best because it can provide protected long-term
          storage for logs (the devices internal logging buffer has limited capacity to store events.) In
          addition, logging to an external system is highly recommended or required by most
          security standards. If desired or required by policy, law and/or regulation, enable a second
          syslog server for redundancy.
        remediation: logging host {syslog_server}
        titre: 2.2.4
        titre_texte: Set IP address for 'logging host'
      2.2.5:
        audit: sh log | incl trap logging
        automated_or_manual: Automated
        commande: logging trap informational
        default_value: null
        description: Limit messages logged to the syslog servers based on severity level informational.
        impact: |-
          Logging is an important process for an organization managing technology risk. The 'logging
          trap' command sets the severity of messages and enforces the logging process.
        level: Level 1
        rationale: |-
          This determines the severity of messages that will generate simple network management
          protocol (SNMP) trap and or syslog messages. This setting should be set to either
          "debugging" (7) or "informational" (6), but no lower.
        remediation: logging trap informational
        titre: 2.2.5
        titre_texte: Set 'logging trap informational'
      2.2.6:
        audit: sh run | incl service timestamps
        automated_or_manual: Automated
        commande: service timestamps debug datetime
        default_value: null
        description: |-
          Configure the system to apply a time stamp to debugging messages or system logging
          messages
        impact: |-
          Logging is an important process for an organization managing technology risk and
          establishing a timeline of events is critical. The 'service timestamps' command sets the date
          and time on entries sent to the logging host and enforces the logging process.
        level: Level 1
        rationale: |-
          Including timestamps in log messages allows correlating events and tracing network
          attacks across multiple devices. Enabling service timestamp to mark the time log messages
          were generated simplifies obtaining a holistic view of events enabling faster
          troubleshooting of issues or attacks.
        remediation: service timestamps debug datetime {msec} show-
        titre: 2.2.6
        titre_texte: Set 'service timestamps debug datetime'
      2.2.7:
        audit: sh run | incl logging source
        automated_or_manual: Automated
        commande: logging source interface
        default_value: null
        description: Specify the source IPv4 or IPv6 address of system logging packets
        impact: |-
          Logging is an important process for an organization managing technology risk and
          establishing a consistent source of messages for the logging host is critical. The 'logging
          source interface loopback' command sets a consistent IP address to send messages to the
          logging host and enforces the logging process.
        level: Level 1
        rationale: |-
          This is required so that the router sends log messages to the logging server from a
          consistent IP address.
        remediation: logging source-interface loopback
        titre: 2.2.7
        titre_texte: Set 'logging source interface'
      2.3.1.1:
        audit: show run | include ntp
        automated_or_manual: Automated
        commande: ntp authenticate
        default_value: null
        description: Enable NTP authentication.
        impact: |-
          Organizations should establish three Network Time Protocol (NTP) hosts to set consistent
          time across the enterprise. Enabling the 'ntp authenticate' command enforces
          authentication between NTP hosts.
        level: Level 2
        rationale: |-
          Using authenticated NTP ensures the Cisco device only permits time updates from
          authorized NTP servers.
        remediation: ntp authenticate
        titre: 2.3.1.1
        titre_texte: Set 'ntp authenticate'
      2.3.1.2:
        audit: show run | include ntp authentication-key
        automated_or_manual: Automated
        commande: ntp authentication-key
        default_value: null
        description: Define an authentication key for Network Time Protocol (NTP).
        impact: |-
          Organizations should establish three Network Time Protocol (NTP) hosts to set consistent
          time across the enterprise. Enabling the 'ntp authentication-key' command enforces
          encrypted authentication between NTP hosts.
        level: Level 2
        rationale: |-
          Using an authentication key provides a higher degree of security as only authenticated NTP
          servers will be able to update time for the Cisco device.
        remediation: ntp authentication-key {ntp_key_id} md5 {ntp_key_hash}
        titre: 2.3.1.2
        titre_texte: Set 'ntp authentication-key'
      2.3.1.3:
        audit: show run | include ntp trusted-key
        automated_or_manual: Automated
        commande: ntp trusted-key
        default_value: null
        description: |-
          Ensure you authenticate the identity of a system to which Network Time Protocol (NTP)
          will synchronize
        impact: |-
          Organizations should establish three Network Time Protocol (NTP) hosts to set consistent
          time across the enterprise. Enabling the 'ntp trusted-key' command enforces encrypted
          authentication between NTP hosts.
        level: Level 2
        rationale: |-
          This authentication function provides protection against accidentally synchronizing the
          system to another system that is not trusted, because the other system must know the
          correct authentication key.
        remediation: ntp trusted-key {ntp_key_id}
        titre: 2.3.1.3
        titre_texte: Set the 'ntp trusted-key'
      2.3.1.4:
        audit: show run | include ntp server
        automated_or_manual: Automated
        commande: key
        default_value: null
        description: Specifies the authentication key for NTP.
        impact: |-
          Organizations should establish three Network Time Protocol (NTP) hosts to set consistent
          time across the enterprise. Enabling the 'ntp server key' command enforces encrypted
          authentication between NTP hosts.
        level: Level 2
        rationale: |-
          This authentication feature provides protection against accidentally synchronizing the ntp
          system to another system that is not trusted, because the other system must know the
          correct authentication key.
        remediation: ntp server {ntp-server_ip_address}{key
        titre: 2.3.1.4
        titre_texte: Set 'key' for each 'ntp server'
      2.3.2:
        audit: sh ntp associations
        automated_or_manual: Automated
        commande: ip address
        default_value: null
        description: |-
          Use this command if you want to allow the system to synchronize the system software
          clock with the specified NTP server.
        impact: |-
          Organizations should establish three Network Time Protocol (NTP) hosts to set consistent
          time across the enterprise. Enabling the 'ntp server ip address' enforces encrypted
          authentication between NTP hosts.
        level: Level 1
        rationale: |-
          To ensure that the time on your Cisco router is consistent with other devices in your
          network, at least two (and preferably at least three) NTP Server/s external to the router
          should be configured.
          Ensure you also configure consistent timezone and daylight savings time setting for all
          devices. For simplicity, the default of Coordinated Universal Time (UTC).
        remediation: ntp server {ntp-server_ip_address}
        titre: 2.3.2
        titre_texte: Set 'ip address' for 'ntp server'
      2.4.1:
        audit: sh ip int brief | incl Loopback
        automated_or_manual: Automated
        commande: interface loopback
        default_value: null
        description: Configure a single loopback interface.
        impact: |-
          Organizations should plan and establish 'loopback interfaces' for the enterprise network.
          Loopback interfaces enable critical network information such as OSPF Router IDs and
          provide termination points for routing protocol sessions.
        level: Level 2
        rationale: |-
          Software-only loopback interface that emulates an interface that is always up. It is a virtual
          interface supported on all platforms.
          Alternate loopback addresses create a potential for abuse, mis-configuration, and
          inconsistencies. Additional loopback interfaces must be documented and approved prior to
          use by local security personnel.
        remediation: |-
          interface loopback <number>
          ip address <loopback_ip_address>
        titre: 2.4.1
        titre_texte: Create a single 'interface loopback'
      2.4.2:
        audit: sh run | incl tacacs source | radius source
        automated_or_manual: Automated
        commande: source-interface
        default_value: null
        description: Force AAA to use the IP address of a specified interface for all outgoing AAA packets
        impact: |-
          Organizations should design and implement authentication, authorization, and accounting
          (AAA) services for effective monitoring of enterprise network devices. Binding AAA
          services to the source-interface loopback enables these services.
        level: Level 2
        rationale: |-
          This is required so that the AAA server (RADIUS or TACACS+) can easily identify routers
          and authenticate requests by their IP address.
        remediation: |-
          ip radius source-interface loopback
          aaa group server tacacs+ {group_name} hostname(config-sg-
          ip tacacs source-interface {loopback_interface_number}
        titre: 2.4.2
        titre_texte: Set AAA 'source-interface'
      2.4.3:
        audit: |-
          sh run | incl ntp source
          sh run | incl tftp source-interface
        automated_or_manual: Automated
        commande: ntp source
        default_value: null
        description: |-
          Use a particular source address in Network Time Protocol (NTP) packets.
          Specify the IP address of an interface as the source address for TFTP connections.
        impact: |-
          Organizations should plan and implement network time protocol (NTP) services to
          establish official time for all enterprise network devices. Setting 'ntp source loopback'
          enforces the proper IP address for NTP services.
          Organizations should plan and implement trivial file transfer protocol (TFTP) services in
          the enterprise by setting 'tftp source-interface loopback', which enables the TFTP servers
          to identify routers and authenticate requests by IP address.
        level: Level 2
        rationale: |-
          Set the source address to be used when sending NTP traffic. This may be required if the
          NTP servers you peer with filter based on IP address.
          This is required so that the TFTP servers can easily identify routers and authenticate
          requests by their IP address.
        remediation: |-
          ntp source loopback {loopback_interface_number}
          ip tftp source-interface loopback
        titre: 2.4.3
        titre_texte: Set 'ntp source' to Loopback Interface
      3.1.1:
        audit: sh run | incl ip source-route
        automated_or_manual: Automated
        commande: no ip source-route
        default_value: null
        description: Disable the handling of IP datagrams with source routing header options.
        impact: |-
          Organizations should plan and implement network policies to ensure unnecessary services
          are explicitly disabled. The 'ip source-route' feature has been used in several attacks and
          should be disabled.
        level: Level 1
        rationale: |-
          Source routing is a feature of IP whereby individual packets can specify routes. This feature
          is used in several kinds of attacks. Cisco routers normally accept and process source routes.
          Unless a network depends on source routing, it should be disabled.
        remediation: no ip source-route
        titre: 3.1.1
        titre_texte: Set 'no ip source-route'
      3.1.2:
        audit: sh ip int {interface} | incl proxy-arp
        automated_or_manual: Manual
        commande: no ip proxy-arp
        default_value: null
        description: Disable proxy ARP on all interfaces.
        impact: |-
          Organizations should plan and implement network policies to ensure unnecessary services
          are explicitly disabled. The 'ip proxy-arp' feature effectively breaks the LAN security
          perimeter and should be disabled.
        level: Level 2
        rationale: |-
          Address Resolution Protocol (ARP) provides resolution between IP and MAC Addresses (or
          other Network and Link Layer addresses on none IP networks) within a Layer 2 network.
          Proxy ARP is a service where a device connected to one network (in this case the Cisco
          router) answers ARP Requests which are addressed to a host on another network, replying
          with its own MAC Address and forwarding the traffic on to the intended host.
          Sometimes used for extending broadcast domains across WAN links, in most cases Proxy
          ARP on enterprise networks is used to enable communication for hosts with mis-
          configured subnet masks, a situation which should no longer be a common problem. Proxy
          ARP effectively breaks the LAN Security Perimeter, extending a network across multiple
          Layer 2 segments. Using Proxy ARP can also allow other security controls such as PVLAN to
          be bypassed.
        remediation: |-
          interface {interface}
          no ip proxy-arp
        titre: 3.1.2
        titre_texte: Set 'no ip proxy-arp'
      3.1.3:
        audit: sh ip int brief | incl tunnel
        automated_or_manual: Automated
        commande: no interface tunnel
        default_value: null
        description: Verify no tunnel interfaces are defined.
        impact: |-
          Organizations should plan and implement enterprise network security policies that disable
          insecure and unnecessary features that increase attack surfaces such as 'tunnel interfaces'.
        level: Level 2
        rationale: |-
          Tunnel interfaces should not exist in general. They can be used for malicious purposes. If
          they are necessary, the network admin's should be well aware of them and their purpose.
        remediation: no interface tunnel {instance}
        titre: 3.1.3
        titre_texte: Set 'no interface tunnel'
      3.1.4:
        audit: |-
          sh ip int {interface} | incl verify source
          sh ip access-list {name | number}
        automated_or_manual: Automated
        commande: ip verify unicast source reachable-via
        default_value: null
        description: |-
          Examines incoming packets to determine whether the source address is in the Forwarding
          Information Base (FIB) and permits the packet only if the source is reachable through the
          interface on which the packet was received (sometimes referred to as strict mode).
          This command places the router in access-list configuration mode, where you must define
          the denied or permitted access conditions by using the deny and permit commands.
        impact: |-
          Organizations should plan and implement enterprise security policies that protect the
          confidentiality, integrity, and availability of network devices. The 'unicast Reverse-Path
          Forwarding' (uRPF) feature dynamically uses the router table to either accept or drop
          packets when arriving on an interface.
          Organizations should plan and implement enterprise security policies that explicitly
          separate internal from external networks. Adding 'ip access-list' explicitly permitting and
          denying internal and external networks enforces these policies.
        level: Level 2
        rationale: |-
          Enabled uRPF helps mitigate IP spoofing by ensuring only packet source IP addresses only
          originate from expected interfaces. Configure unicast reverse-path forwarding (uRPF) on
          all external or high risk interfaces.
          Configuring access controls can help prevent spoofing attacks. To reduce the effectiveness
          of IP spoofing, configure access control to deny any traffic from the external network that
          has a source address that should reside on the internal network. Include local host address
          or any reserved private addresses (RFC 1918).
          Ensure the permit rule(s) above the final deny rule only allow traffic according to your
          organization's least privilege policy.
        remediation: |-
          interface {interface_name}
          ip verify unicast source reachable-via rx
          ip access-list extended {<span>name | number}
          deny ip
          deny ip 127.0.0.0 0.255.255.255 any log
          deny ip 10.0.0.0 0.255.255.255 any log
          deny ip 0.0.0.0 0.255.255.255 any log
          deny ip 172.16.0.0 0.15.255.255 any log
          deny ip 192.168.0.0 0.0.255.255 any log
          deny ip 192.0.2.0 0.0.0.255 any log
          deny ip 169.254.0.0 0.0.255.255 any log
          deny ip 224.0.0.0 31.255.255.255 any log
          deny ip host 255.255.255.255 any log
          permit {protocol} {source_ip}
          deny any any log
          interface <external_interface>
          access-group <access-list> in
        titre: 3.1.4
        titre_texte: Set 'ip verify unicast source reachable-via'
      3.2.2:
        audit: sh run | sec interface {external_interface}
        automated_or_manual: Manual
        commande: ip access-group
        default_value: null
        description: |-
          This command places the router in access-list configuration mode, where you must define
          the denied or permitted access conditions by using the deny and permit commands.
        impact: |-
          Organizations should plan and implement enterprise security policies explicitly permitting
          and denying access based upon access lists. Using the 'ip access-group' command enforces
          these policies by explicitly identifying groups permitted access.
        level: Level 2
        rationale: |-
          Configuring access controls can help prevent spoofing attacks. To reduce the effectiveness
          of IP spoofing, configure access control to deny any traffic from the external network that
          has a source address that should reside on the internal network. Include local host address
          or any reserved private addresses (RFC 1918).
          Ensure the permit rule(s) above the final deny rule only allow traffic according to your
          organization's least privilege policy.
        remediation: |-
          interface {external_interface}
          ip access-group {name | number} in
        titre: 3.2.2
        titre_texte: Set inbound 'ip access-group' on the External Interface
      3.3.1.1:
        audit: sh run | sec key chain
        automated_or_manual: Automated
        commande: key chain
        default_value: null
        description: |-
          Define an authentication key chain to enable authentication for routing protocols. A key
          chain must have at least one key and can have up to 2,147,483,647 keys.
          NOTE: Only DRP Agent, EIGRP, and RIPv2 use key chains.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Using 'key chains' for routing protocols
          enforces these policies.
        level: Level 2
        rationale: Routing protocols such as DRP Agent, EIGRP, and RIPv2 use key chains for authentication.
        remediation: key chain {key-chain_name}
        titre: 3.3.1.1
        titre_texte: Set 'key chain'
      3.3.1.2:
        audit: sh run | sec key chain
        automated_or_manual: Automated
        commande: key
        default_value: null
        description: Configure an authentication key on a key chain.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Using 'key numbers' for key chains for
          routing protocols enforces these policies.
        level: Level 2
        rationale: This is part of the routing authentication setup
        remediation: key {key-number}
        titre: 3.3.1.2
        titre_texte: Set 'key'
      3.3.1.3:
        audit: sh run | sec key chain
        automated_or_manual: Automated
        commande: key-string
        default_value: null
        description: Configure the authentication string for a key.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Using 'key strings' for key chains for routing
          protocols enforces these policies.
        level: Level 2
        rationale: This is part of the routing authentication setup
        remediation: key-string <key-string>
        titre: 3.3.1.3
        titre_texte: Set 'key-string'
      3.3.1.4:
        audit: sh run | sec router eigrp
        automated_or_manual: Automated
        commande: address-family ipv4 autonomous-system
        default_value: null
        description: Configure the EIGRP address family.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Using 'address-family' for EIGRP enforces
          these policies by restricting the exchanges between predefined network devices.
        level: Level 2
        rationale: |-
          Rationale: EIGRP is a true multi-protocol routing protocol and the 'address-family' feature
          enables restriction of exchanges with specific neighbors
        remediation: |-
          router eigrp <virtual-instance-name>
          address-family ipv4 autonomous-system {eigrp_as-
        titre: 3.3.1.4
        titre_texte: Set 'address-family ipv4 autonomous-system'
      3.3.1.5:
        audit: sh run | sec router eigrp
        automated_or_manual: Automated
        commande: af-interface default
        default_value: null
        description: Defines user defaults to apply to EIGRP interfaces that belong to an address-family.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Using 'af-interface default' for EIGRP
          interfaces enforces these policies by restricting the exchanges between predefined network
          devices.
        level: Level 2
        rationale: Part of the EIGRP address-family setup
        remediation: |-
          router eigrp <virtual-instance-name>
          address-family ipv4 autonomous-system {eigrp_as-
          af-interface default
        titre: 3.3.1.5
        titre_texte: Set 'af-interface default'
      3.3.1.6:
        audit: sh run | sec router eigrp
        automated_or_manual: Automated
        commande: authentication key-chain
        default_value: null
        description: Configure the EIGRP address family key chain.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Using the address-family 'key chain' for
          EIGRP enforces these policies by restricting the exchanges between predefined network
          devices.
        level: Level 2
        rationale: This is part of the EIGRP authentication configuration
        remediation: |-
          router eigrp <virtual-instance-name>
          address-family ipv4 autonomous-system {eigrp_as-
          af-interface {interface-name}
          authentication key-chain {eigrp_key-
        titre: 3.3.1.6
        titre_texte: Set 'authentication key-chain'
      3.3.1.7:
        audit: sh run | sec router eigrp
        automated_or_manual: Automated
        commande: authentication mode md5
        default_value: null
        description: |-
          Configure authentication to prevent unapproved sources from introducing unauthorized or
          false service messages.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Using the 'authentication mode' for EIGRP
          address-family or service-family packets enforces these policies by restricting the type of
          authentication between network devices.
        level: Level 2
        rationale: This is part of the EIGRP authentication configuration
        remediation: |-
          router eigrp <virtual-instance-name>
          address-family ipv4 autonomous-system {eigrp_as-
          af-interface {interface-name}
          authentication mode md5
        titre: 3.3.1.7
        titre_texte: Set 'authentication mode md5'
      3.3.1.8:
        audit: |-
          sh ip eigrp int
          sh run int {interface_name} | incl key-chain
        automated_or_manual: Automated
        commande: ip authentication key-chain eigrp
        default_value: null
        description: |-
          Specify the type of authentication used in Enhanced Interior Gateway Routing Protocol
          (EIGRP) packets per interface.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Configuring the interface with 'ip
          authentication key chain' for EIGRP by name and number enforces these policies by
          restricting the exchanges between network devices.
        level: Level 2
        rationale: |-
          Configuring EIGRP authentication key-chain number and name to restrict packet exchanges
          between network devices.
        remediation: |-
          interface {interface_name}
          ip authentication key-chain eigrp {eigrp_as-
        titre: 3.3.1.8
        titre_texte: Set 'ip authentication key-chain eigrp'
      3.3.1.9:
        audit: |-
          sh ip eigrp int
          sh run int {interface_name} | incl authentication mode
        automated_or_manual: Automated
        commande: ip authentication mode eigrp
        default_value: null
        description: |-
          Configure authentication to prevent unapproved sources from introducing unauthorized or
          false routing messages.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Configuring the interface with 'ip
          authentication mode' for EIGRP by number and mode enforces these policies by restricting
          the exchanges between network devices.
        level: Level 2
        rationale: This is part of the EIGRP authentication configuration
        remediation: |-
          interface {interface_name}
          ip authentication mode eigrp {<span>eigrp_as-
        titre: 3.3.1.9
        titre_texte: Set 'ip authentication mode eigrp'
      3.3.2.1:
        audit: sh run | sec router ospf
        automated_or_manual: Automated
        commande: authentication message-digest
        default_value: null
        description: Enable MD5 authentication for OSPF.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Configuring the area 'authentication
          message-digest' for OSPF enforces these policies by restricting exchanges between network
          devices.
        level: Level 2
        rationale: This is part of the OSPF authentication setup.
        remediation: |-
          router ospf <ospf_process-id>
          area <ospf_area-id> authentication message-
        titre: 3.3.2.1
        titre_texte: Set 'authentication message-digest' for OSPF area
      3.3.2.2:
        audit: sh run int {interface}
        automated_or_manual: Automated
        commande: ip ospf message-digest-key md5
        default_value: null
        description: Enable Open Shortest Path First (OSPF) Message Digest 5 (MD5) authentication.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Configuring the proper interface(s) for 'ip
          ospf message-digest-key md5' enforces these policies by restricting exchanges between
          network devices.
        level: Level 2
        rationale: This is part of the OSPF authentication setup
        remediation: |-
          interface {interface_name}
          ip ospf message-digest-key {ospf_md5_key-id} md5
        titre: 3.3.2.2
        titre_texte: Set 'ip ospf message-digest-key md5'
      3.3.3.1:
        audit: sh run | sec key chain
        automated_or_manual: Automated
        commande: key chain
        default_value: null
        description: Define an authentication key chain to enable authentication for RIPv2 routing protocols.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Configuring the proper authentication 'key-
          chain (name)' for RIPv2 protocols enforces these policies by restricting acceptable
          authentication between network devices.
        level: Level 2
        rationale: This is part of the routing authentication process.
        remediation: key chain {rip_key-chain_name}
        titre: 3.3.3.1
        titre_texte: Set 'key chain'
      3.3.3.2:
        audit: sh run | sec key chain
        automated_or_manual: Automated
        commande: key
        default_value: null
        description: Configure an authentication key on a key chain.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Configuring the proper authentication 'key'
          for RIPv2 protocols enforces these policies by restricting acceptable authentication
          between network devices.
        level: Level 2
        rationale: This is part of the routing authentication setup
        remediation: key {key-number}
        titre: 3.3.3.2
        titre_texte: Set 'key'
      3.3.3.3:
        audit: sh run | sec key chain
        automated_or_manual: Automated
        commande: key-string
        default_value: null
        description: Configure the authentication string for a key.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Using 'key-string' for key chains for routing
          protocols enforces these policies.
        level: Level 2
        rationale: This is part of the routing authentication setup
        remediation: key-string <key-string>
        titre: 3.3.3.3
        titre_texte: Set 'key-string'
      3.3.3.4:
        audit: sh run int {interface_name}
        automated_or_manual: Automated
        commande: ip rip authentication key-chain
        default_value: null
        description: |-
          Enable authentication for Routing Information Protocol (RIP) Version 2 packets and to
          specify the set of keys that can be used on an interface.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Configuring the interface with 'ip rip
          authentication key-chain' by name enforces these policies by restricting the exchanges
          between network devices.
        level: Level 2
        rationale: This is part of the RIPv2 authentication setup
        remediation: |-
          interface {interface_name}
          ip rip authentication key-chain {rip_key-
        titre: 3.3.3.4
        titre_texte: Set 'ip rip authentication key-chain'
      3.3.3.5:
        audit: sh run int <interface>
        automated_or_manual: Automated
        commande: ip rip authentication mode
        default_value: null
        description: Configure the Interface with the RIPv2 key chain.
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Using the 'ip rip authentication mode md5'
          enforces these policies by restricting the type of authentication between network devices.
        level: Level 2
        rationale: This is part of the RIPv2 authentication setup
        remediation: |-
          interface <interface_name>
          ip rip authentication mode md5
        titre: 3.3.3.5
        titre_texte: Set 'ip rip authentication mode' to 'md5'
      3.3.4.1:
        audit: sh run | sec router bgp
        automated_or_manual: Automated
        commande: neighbor password
        default_value: null
        description: Enable message digest5 (MD5) authentication on a TCP connection between two BGP peers
        impact: |-
          Organizations should plan and implement enterprise security policies that require rigorous
          authentication methods for routing protocols. Using the 'neighbor password' for BGP
          enforces these policies by restricting the type of authentication between network devices.
        level: Level 2
        rationale: |-
          Enforcing routing authentication reduces the likelihood of routing poisoning and
          unauthorized routers from joining BGP routing.
        remediation: |-
          router bgp <bgp_as-number>
          neighbor <bgp_neighbor-ip | peer-group-
        titre: 3.3.4.1
        titre_texte: Set 'neighbor password'
  ansible_included_var_files:
  - /home/user/TFE_automation_compliance_CIS/cis_ios15_complet.yml
2025-06-12 20:51:21,137 p=10357 u=user n=ansible | TASK [cisco : cherrypick fzfdf] ********************************************************************************************************************
2025-06-12 20:51:21,161 p=10357 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/tasks/fzf-cherrypick.yml for R1
2025-06-12 20:51:21,165 p=10357 u=user n=ansible | TASK [cisco : cherrypick fzfdf] ********************************************************************************************************************
2025-06-12 20:51:21,184 p=10387 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:51:21,193 p=10387 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:51:21,196 p=10387 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:51:21,198 p=10387 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:51:21,489 p=10387 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:51:21,490 p=10387 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-10357bl398ehg `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-10357bl398ehg/ansible-tmp-1749754281.4896748-10387-48609986418334 `" && echo ansible-tmp-1749754281.4896748-10387-48609986418334="` echo /home/user/.ansible/tmp/ansible-local-10357bl398ehg/ansible-tmp-1749754281.4896748-10387-48609986418334 `" ) && sleep 0'
2025-06-12 20:51:21,575 p=10387 u=user n=ansible | <R1> Attempting python interpreter discovery
2025-06-12 20:51:21,575 p=10387 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:51:21,578 p=10387 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:51:21,603 p=10387 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/command.py
2025-06-12 20:51:21,603 p=10387 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10357bl398ehg/tmpm0my4xh8 TO /home/user/.ansible/tmp/ansible-local-10357bl398ehg/ansible-tmp-1749754281.4896748-10387-48609986418334/AnsiballZ_command.py
2025-06-12 20:51:21,604 p=10387 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10357bl398ehg/ansible-tmp-1749754281.4896748-10387-48609986418334/ /home/user/.ansible/tmp/ansible-local-10357bl398ehg/ansible-tmp-1749754281.4896748-10387-48609986418334/AnsiballZ_command.py && sleep 0'
2025-06-12 20:51:21,606 p=10387 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-10357bl398ehg/ansible-tmp-1749754281.4896748-10387-48609986418334/AnsiballZ_command.py && sleep 0'
2025-06-12 20:51:40,821 p=10387 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-10357bl398ehg/ansible-tmp-1749754281.4896748-10387-48609986418334/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:51:40,828 p=10357 u=user n=ansible | fatal: [R1]: FAILED! => changed=true 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  cmd: |-
    cat /home/user/TFE_automation_compliance_CIS/correctif/R1_nok.txt | /home/user/TFE_automation_compliance_CIS/tools/fzf --multi --prompt="Choississez les commandes à corriger :"
  delta: '0:00:19.111571'
  end: '2025-06-12 20:51:40.809336'
  invocation:
    module_args:
      _raw_params: |-
        cat /home/user/TFE_automation_compliance_CIS/correctif/R1_nok.txt | /home/user/TFE_automation_compliance_CIS/tools/fzf --multi --prompt="Choississez les commandes à corriger :"
      _uses_shell: true
      argv: null
      chdir: null
      creates: null
      executable: null
      removes: null
      stdin: null
      stdin_add_newline: true
      strip_empty_ends: true
      warn: true
  msg: non-zero return code
  rc: 1
  start: '2025-06-12 20:51:21.697765'
  stderr: 'cat: /home/user/TFE_automation_compliance_CIS/correctif/R1_nok.txt: No such file or directory'
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2025-06-12 20:51:40,829 p=10357 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:51:40,829 p=10357 u=user n=ansible | R1                         : ok=6    changed=0    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   
2025-06-12 20:51:40,929 p=10364 u=user n=ansible | shutdown complete
2025-06-12 20:53:18,929 p=10443 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:53:18,929 p=10443 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:53:18,932 p=10443 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:53:18,932 p=10443 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:53:18,934 p=10443 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:53:19,020 p=10443 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:53:19,025 p=10443 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:53:19,029 p=10443 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:53:19,029 p=10443 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:53:19,029 p=10443 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:53:19,030 p=10443 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:53:19,030 p=10443 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:53:19,031 p=10443 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:53:19,036 p=10443 u=user n=ansible | META: ran handlers
2025-06-12 20:53:19,038 p=10443 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 20:53:19,055 p=10447 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:53:19,064 p=10447 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:53:19,068 p=10447 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:53:19,070 p=10447 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:53:19,320 p=10451 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:53:19,335 p=10451 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:53:19,339 p=10451 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:53:19,384 p=10447 u=user n=ansible | network_os is set to ios
2025-06-12 20:53:19,387 p=10443 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 20:53:19,389 p=10443 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 20:53:19,408 p=10453 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:53:19,418 p=10453 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:53:19,422 p=10453 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:53:19,425 p=10453 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:53:19,699 p=10443 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 20:53:19,701 p=10443 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 20:53:19,722 p=10443 u=user n=ansible | skipping: [R1] => 
2025-06-12 20:53:19,724 p=10443 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 20:53:19,752 p=10443 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 20:53:19,757 p=10460 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:53:19,855 p=10460 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:53:19,859 p=10460 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:53:19,862 p=10460 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:53:20,138 p=10460 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 20:53:22,707 p=10443 u=user n=ansible | ok: [R1] => changed=false 
  delta: 2
  echo: true
  rc: 0
  start: '2025-06-12 20:53:20.138228'
  stderr: ''
  stdout: Paused for 0.04 minutes
  stop: '2025-06-12 20:53:22.701463'
  user_input: '1'
2025-06-12 20:53:22,708 p=10443 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 20:53:22,735 p=10443 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:53:22,737 p=10443 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for R1
2025-06-12 20:53:22,739 p=10443 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:53:22,746 p=10443 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 20:53:22,752 p=10465 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:53:22,758 p=10465 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:53:22,760 p=10465 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 20:53:22,763 p=10465 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:53:23,037 p=10465 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:53:23,037 p=10465 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:53:23,038 p=10465 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:53:23,038 p=10465 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-10443fcgce6ed `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-10443fcgce6ed/ansible-tmp-1749754403.0380406-10465-259124169324499 `" && echo ansible-tmp-1749754403.0380406-10465-259124169324499="` echo /home/user/.ansible/tmp/ansible-local-10443fcgce6ed/ansible-tmp-1749754403.0380406-10465-259124169324499 `" ) && sleep 0'
2025-06-12 20:53:23,140 p=10465 u=user n=ansible | <R1> Attempting python interpreter discovery
2025-06-12 20:53:23,140 p=10465 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:53:23,143 p=10465 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:53:23,167 p=10465 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_command.py
2025-06-12 20:53:23,167 p=10465 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10443fcgce6ed/tmpni2ofy1m TO /home/user/.ansible/tmp/ansible-local-10443fcgce6ed/ansible-tmp-1749754403.0380406-10465-259124169324499/AnsiballZ_ios_command.py
2025-06-12 20:53:23,168 p=10465 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10443fcgce6ed/ansible-tmp-1749754403.0380406-10465-259124169324499/ /home/user/.ansible/tmp/ansible-local-10443fcgce6ed/ansible-tmp-1749754403.0380406-10465-259124169324499/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 20:53:23,171 p=10465 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-10443fcgce6ed/ansible-tmp-1749754403.0380406-10465-259124169324499/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 20:53:23,309 p=10451 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:53:23,320 p=10451 u=user n=p=10451 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:53:25,589 p=10451 u=user n=p=10451 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:53:25,593 p=10451 u=user n=p=10451 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:53:25,692 p=10451 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:53:25,706 p=10465 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-10443fcgce6ed/ansible-tmp-1749754403.0380406-10465-259124169324499/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:53:25,711 p=10443 u=user n=ansible | The full traceback is:
  File "/tmp/ansible_cisco.ios.ios_command_payload_ywjeutrj/ansible_cisco.ios.ios_command_payload.zip/ansible_collections/cisco/ios/plugins/module_utils/network/ios/ios.py", line 94, in get_capabilities
    capabilities = Connection(module._socket_path).get_capabilities()
  File "/tmp/ansible_cisco.ios.ios_command_payload_ywjeutrj/ansible_cisco.ios.ios_command_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
    raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)

2025-06-12 20:53:25,712 p=10443 u=user n=ansible | fatal: [R1]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  invocation:
    module_args:
      commands:
      - show running-config
      interval: 1
      match: all
      provider: null
      retries: 10
      wait_for: null
  msg: No existing session
2025-06-12 20:53:25,714 p=10443 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:53:25,715 p=10443 u=user n=ansible | R1                         : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 20:53:25,814 p=10451 u=user n=ansible | shutdown complete
2025-06-12 20:55:43,339 p=10520 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:55:43,340 p=10520 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:55:43,343 p=10520 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:55:43,343 p=10520 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:55:43,345 p=10520 u=user n=ansible | [WARNING]: Skipping key (ansible_host) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:43,345 p=10520 u=user n=ansible | [WARNING]: Skipping key (ansible_user) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:43,345 p=10520 u=user n=ansible | [WARNING]: Skipping key (ansible_ssh_private_key_file) in group (R1) as it is not a mapping, it is a <class
'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:43,345 p=10520 u=user n=ansible | [WARNING]: Skipping key (ansible_connection) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:43,345 p=10520 u=user n=ansible | [WARNING]: Skipping key (ansible_network_os) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:43,345 p=10520 u=user n=ansible | [WARNING]: Skipping key (ansible_become) in group (R1) as it is not a mapping, it is a <class 'bool'>

2025-06-12 20:55:43,345 p=10520 u=user n=ansible | [WARNING]: Skipping key (ansible_become_method) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:43,345 p=10520 u=user n=ansible | [WARNING]: Skipping key (ansible_become_password) in group (R1) as it is not a mapping, it is a <class
'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:43,345 p=10520 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:55:43,347 p=10520 u=user n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2025-06-12 20:55:43,431 p=10520 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:55:43,436 p=10520 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:55:43,440 p=10520 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:55:43,440 p=10520 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:55:43,441 p=10520 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:55:43,441 p=10520 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:55:43,441 p=10520 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:55:43,441 p=10520 u=user n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: routers

2025-06-12 20:55:43,442 p=10520 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:55:43,442 p=10520 u=user n=ansible | skipping: no hosts matched
2025-06-12 20:55:43,442 p=10520 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:55:59,435 p=10526 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:55:59,436 p=10526 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:55:59,439 p=10526 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:55:59,440 p=10526 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:55:59,441 p=10526 u=user n=ansible | [WARNING]: Skipping key (ansible_host) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:59,441 p=10526 u=user n=ansible | [WARNING]: Skipping key (ansible_user) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:59,441 p=10526 u=user n=ansible | [WARNING]: Skipping key (ansible_ssh_private_key_file) in group (R1) as it is not a mapping, it is a <class
'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:59,441 p=10526 u=user n=ansible | [WARNING]: Skipping key (ansible_connection) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:59,441 p=10526 u=user n=ansible | [WARNING]: Skipping key (ansible_network_os) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:59,441 p=10526 u=user n=ansible | [WARNING]: Skipping key (ansible_become) in group (R1) as it is not a mapping, it is a <class 'bool'>

2025-06-12 20:55:59,442 p=10526 u=user n=ansible | [WARNING]: Skipping key (ansible_become_method) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:59,442 p=10526 u=user n=ansible | [WARNING]: Skipping key (ansible_become_password) in group (R1) as it is not a mapping, it is a <class
'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:55:59,442 p=10526 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:55:59,444 p=10526 u=user n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2025-06-12 20:55:59,528 p=10526 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:55:59,534 p=10526 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:55:59,538 p=10526 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:55:59,538 p=10526 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:55:59,538 p=10526 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:55:59,538 p=10526 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:55:59,538 p=10526 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:55:59,539 p=10526 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:55:59,539 p=10526 u=user n=ansible | skipping: no hosts matched
2025-06-12 20:55:59,539 p=10526 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:56:22,465 p=10532 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:56:22,465 p=10532 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:56:22,469 p=10532 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:56:22,469 p=10532 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:56:22,471 p=10532 u=user n=ansible | [WARNING]: Skipping key (ansible_host) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:56:22,471 p=10532 u=user n=ansible | [WARNING]: Skipping key (ansible_user) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:56:22,471 p=10532 u=user n=ansible | [WARNING]: Skipping key (ansible_ssh_private_key_file) in group (R1) as it is not a mapping, it is a <class
'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:56:22,471 p=10532 u=user n=ansible | [WARNING]: Skipping key (ansible_connection) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:56:22,471 p=10532 u=user n=ansible | [WARNING]: Skipping key (ansible_network_os) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:56:22,471 p=10532 u=user n=ansible | [WARNING]: Skipping key (ansible_become) in group (R1) as it is not a mapping, it is a <class 'bool'>

2025-06-12 20:56:22,471 p=10532 u=user n=ansible | [WARNING]: Skipping key (ansible_become_method) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:56:22,471 p=10532 u=user n=ansible | [WARNING]: Skipping key (ansible_become_password) in group (R1) as it is not a mapping, it is a <class
'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:56:22,472 p=10532 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:56:22,474 p=10532 u=user n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2025-06-12 20:56:22,560 p=10532 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:56:22,566 p=10532 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:56:22,570 p=10532 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:56:22,570 p=10532 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:56:22,570 p=10532 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:56:22,570 p=10532 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:56:22,570 p=10532 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:56:22,571 p=10532 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:56:22,571 p=10532 u=user n=ansible | skipping: no hosts matched
2025-06-12 20:56:22,571 p=10532 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:57:32,731 p=10559 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:57:32,731 p=10559 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:57:32,735 p=10559 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:57:32,735 p=10559 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:57:32,736 p=10559 u=user n=ansible | [WARNING]: Skipping key (ansible_host) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:57:32,736 p=10559 u=user n=ansible | [WARNING]: Skipping key (ansible_user) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:57:32,737 p=10559 u=user n=ansible | [WARNING]: Skipping key (ansible_ssh_private_key_file) in group (R1) as it is not a mapping, it is a <class
'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:57:32,737 p=10559 u=user n=ansible | [WARNING]: Skipping key (ansible_connection) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:57:32,737 p=10559 u=user n=ansible | [WARNING]: Skipping key (ansible_network_os) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:57:32,737 p=10559 u=user n=ansible | [WARNING]: Skipping key (ansible_become) in group (R1) as it is not a mapping, it is a <class 'bool'>

2025-06-12 20:57:32,737 p=10559 u=user n=ansible | [WARNING]: Skipping key (ansible_become_method) in group (R1) as it is not a mapping, it is a <class 'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:57:32,737 p=10559 u=user n=ansible | [WARNING]: Skipping key (ansible_become_password) in group (R1) as it is not a mapping, it is a <class
'ansible.parsing.yaml.objects.AnsibleUnicode'>

2025-06-12 20:57:32,737 p=10559 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:57:32,739 p=10559 u=user n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2025-06-12 20:57:32,827 p=10559 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:57:32,832 p=10559 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:57:32,836 p=10559 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:57:32,836 p=10559 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:57:32,836 p=10559 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:57:32,837 p=10559 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:57:32,837 p=10559 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:57:32,838 p=10559 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:57:32,838 p=10559 u=user n=ansible | skipping: no hosts matched
2025-06-12 20:57:32,838 p=10559 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:58:35,631 p=10569 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:58:35,631 p=10569 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:58:35,635 p=10569 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:58:35,635 p=10569 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:58:35,636 p=10569 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:58:35,726 p=10569 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:58:35,732 p=10569 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:58:35,736 p=10569 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:58:35,736 p=10569 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:58:35,736 p=10569 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:58:35,737 p=10569 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:58:35,737 p=10569 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:58:35,738 p=10569 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:58:35,743 p=10569 u=user n=ansible | META: ran handlers
2025-06-12 20:58:35,745 p=10569 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 20:58:35,763 p=10572 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:58:35,780 p=10572 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:58:36,045 p=10576 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:58:36,112 p=10572 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-12 20:58:36,116 p=10569 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : cisco.ios.ios'
2025-06-12 20:58:36,117 p=10569 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 20:58:36,135 p=10578 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:58:36,152 p=10578 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:58:36,433 p=10569 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 20:58:36,435 p=10569 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 20:58:36,455 p=10569 u=user n=ansible | skipping: [R1] => 
2025-06-12 20:58:36,458 p=10569 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 20:58:36,478 p=10569 u=user n=ansible | skipping: [R1] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 20:58:36,480 p=10569 u=user n=ansible | TASK [Appareils Pfsense] ***************************************************************************************************************************
2025-06-12 20:58:36,499 p=10569 u=user n=ansible | skipping: [R1] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 20:58:36,502 p=10569 u=user n=ansible | META: ran handlers
2025-06-12 20:58:36,503 p=10569 u=user n=ansible | META: ran handlers
2025-06-12 20:58:36,504 p=10569 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:58:36,504 p=10569 u=user n=ansible | R1                         : ok=2    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2025-06-12 20:59:06,401 p=10576 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 20:59:06,503 p=10576 u=user n=ansible | shutdown complete
2025-06-12 20:59:18,973 p=10594 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 20:59:18,973 p=10594 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 20:59:18,977 p=10594 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:59:18,977 p=10594 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 20:59:18,979 p=10594 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 20:59:19,068 p=10594 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:59:19,073 p=10594 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 20:59:19,077 p=10594 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 20:59:19,078 p=10594 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 20:59:19,078 p=10594 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 20:59:19,078 p=10594 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 20:59:19,078 p=10594 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 20:59:19,079 p=10594 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 20:59:19,084 p=10594 u=user n=ansible | META: ran handlers
2025-06-12 20:59:19,086 p=10594 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 20:59:19,103 p=10597 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:59:19,119 p=10597 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:59:19,367 p=10602 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:59:19,429 p=10597 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-12 20:59:19,433 p=10594 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : cisco.ios.ios'
2025-06-12 20:59:19,435 p=10594 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 20:59:19,454 p=10604 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:59:19,470 p=10604 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:59:19,747 p=10594 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 20:59:19,749 p=10594 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 20:59:19,768 p=10594 u=user n=ansible | skipping: [R1] => 
2025-06-12 20:59:19,771 p=10594 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 20:59:19,799 p=10594 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 20:59:19,804 p=10611 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:59:19,823 p=10611 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:59:20,139 p=10611 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 20:59:23,915 p=10594 u=user n=ansible | ok: [R1] => changed=false 
  delta: 3
  echo: true
  rc: 0
  start: '2025-06-12 20:59:20.139155'
  stderr: ''
  stdout: Paused for 0.06 minutes
  stop: '2025-06-12 20:59:23.912775'
  user_input: '1'
2025-06-12 20:59:23,918 p=10594 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 20:59:23,944 p=10594 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:59:23,946 p=10594 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for R1
2025-06-12 20:59:23,951 p=10594 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:59:23,958 p=10594 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 20:59:23,964 p=10616 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 20:59:23,974 p=10616 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 20:59:24,251 p=10616 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:59:24,251 p=10616 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 20:59:24,252 p=10616 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 20:59:24,252 p=10616 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-10594rjv7yh4d `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-10594rjv7yh4d/ansible-tmp-1749754764.2520256-10616-243916602328349 `" && echo ansible-tmp-1749754764.2520256-10616-243916602328349="` echo /home/user/.ansible/tmp/ansible-local-10594rjv7yh4d/ansible-tmp-1749754764.2520256-10616-243916602328349 `" ) && sleep 0'
2025-06-12 20:59:24,351 p=10616 u=user n=ansible | <R1> Attempting python interpreter discovery
2025-06-12 20:59:24,351 p=10616 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 20:59:24,353 p=10616 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 20:59:24,378 p=10616 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_command.py
2025-06-12 20:59:24,379 p=10616 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10594rjv7yh4d/tmpckz92557 TO /home/user/.ansible/tmp/ansible-local-10594rjv7yh4d/ansible-tmp-1749754764.2520256-10616-243916602328349/AnsiballZ_ios_command.py
2025-06-12 20:59:24,379 p=10616 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10594rjv7yh4d/ansible-tmp-1749754764.2520256-10616-243916602328349/ /home/user/.ansible/tmp/ansible-local-10594rjv7yh4d/ansible-tmp-1749754764.2520256-10616-243916602328349/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 20:59:24,381 p=10616 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-10594rjv7yh4d/ansible-tmp-1749754764.2520256-10616-243916602328349/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 20:59:24,525 p=10602 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 20:59:24,534 p=10602 u=user n=p=10602 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 20:59:26,800 p=10602 u=user n=p=10602 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 20:59:26,803 p=10602 u=user n=p=10602 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 20:59:26,904 p=10602 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 20:59:26,919 p=10616 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-10594rjv7yh4d/ansible-tmp-1749754764.2520256-10616-243916602328349/ > /dev/null 2>&1 && sleep 0'
2025-06-12 20:59:26,924 p=10594 u=user n=ansible | The full traceback is:
  File "/tmp/ansible_cisco.ios.ios_command_payload_faxn1cda/ansible_cisco.ios.ios_command_payload.zip/ansible_collections/cisco/ios/plugins/module_utils/network/ios/ios.py", line 94, in get_capabilities
    capabilities = Connection(module._socket_path).get_capabilities()
  File "/tmp/ansible_cisco.ios.ios_command_payload_faxn1cda/ansible_cisco.ios.ios_command_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
    raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)

2025-06-12 20:59:26,925 p=10594 u=user n=ansible | fatal: [R1]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  invocation:
    module_args:
      commands:
      - show running-config
      interval: 1
      match: all
      provider: null
      retries: 10
      wait_for: null
  msg: No existing session
2025-06-12 20:59:26,926 p=10594 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 20:59:26,926 p=10594 u=user n=ansible | R1                         : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 20:59:27,026 p=10602 u=user n=ansible | shutdown complete
2025-06-12 21:00:03,527 p=10661 u=user n=ansible | ERROR! A playbook must be a list of plays, got a <class 'ansible.parsing.yaml.objects.AnsibleMapping'> instead

The error appears to be in '/home/user/TFE_automation_compliance_CIS/test.yml': line 1, column 1, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


switchs:
^ here

2025-06-12 21:00:48,910 p=10673 u=user n=ansible | PLAY [TEST SHOW VERSION] ***************************************************************************************************************************
2025-06-12 21:00:48,938 p=10673 u=user n=ansible | TASK [Run show version] ****************************************************************************************************************************
2025-06-12 21:00:49,263 p=10676 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-12 21:00:49,516 p=10680 u=user n=p=10680 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:00:51,834 p=10680 u=user n=p=10680 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 21:00:51,838 p=10680 u=user n=p=10680 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 21:00:51,961 p=10673 u=user n=ansible | fatal: [R1]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 21:00:51,965 p=10673 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:00:51,965 p=10673 u=user n=ansible | R1                         : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 21:00:52,062 p=10680 u=user n=ansible | shutdown complete
2025-06-12 21:02:23,619 p=10722 u=user n=ansible | PLAY [TEST SHOW VERSION] ***************************************************************************************************************************
2025-06-12 21:02:23,648 p=10722 u=user n=ansible | TASK [Run show version] ****************************************************************************************************************************
2025-06-12 21:02:23,975 p=10725 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-12 21:02:24,227 p=10729 u=user n=p=10729 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:02:26,498 p=10729 u=user n=p=10729 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 21:02:26,501 p=10729 u=user n=p=10729 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 21:02:26,620 p=10722 u=user n=ansible | fatal: [R1]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 21:02:26,621 p=10722 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:02:26,621 p=10722 u=user n=ansible | R1                         : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-06-12 21:02:26,721 p=10729 u=user n=ansible | shutdown complete
2025-06-12 21:02:33,022 p=10762 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:02:33,022 p=10762 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:02:33,026 p=10762 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:02:33,026 p=10762 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:02:33,027 p=10762 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:02:33,112 p=10762 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:02:33,118 p=10762 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:02:33,122 p=10762 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:02:33,122 p=10762 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:02:33,122 p=10762 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:02:33,123 p=10762 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 21:02:33,123 p=10762 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:02:33,124 p=10762 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:02:33,129 p=10762 u=user n=ansible | META: ran handlers
2025-06-12 21:02:33,131 p=10762 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:02:33,148 p=10765 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:02:33,165 p=10765 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:02:33,410 p=10769 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:02:33,469 p=10765 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-12 21:02:33,472 p=10762 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : cisco.ios.ios'
2025-06-12 21:02:33,474 p=10762 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:02:33,490 p=10771 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:02:33,506 p=10771 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:02:33,789 p=10762 u=user n=ansible | ok: [R1] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:02:33,791 p=10762 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:02:33,809 p=10762 u=user n=ansible | skipping: [R1] => 
2025-06-12 21:02:33,811 p=10762 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:02:33,838 p=10762 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:02:33,843 p=10778 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:02:33,860 p=10778 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:02:34,136 p=10778 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:02:37,174 p=10762 u=user n=ansible | ok: [R1] => changed=false 
  delta: 3
  echo: true
  rc: 0
  start: '2025-06-12 21:02:34.136095'
  stderr: ''
  stdout: Paused for 0.05 minutes
  stop: '2025-06-12 21:02:37.171498'
  user_input: '1'
2025-06-12 21:02:37,177 p=10762 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:02:37,204 p=10762 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:02:37,205 p=10762 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for R1
2025-06-12 21:02:37,208 p=10762 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:02:37,215 p=10762 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 21:02:37,221 p=10783 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:02:37,231 p=10783 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:02:37,511 p=10783 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:02:37,511 p=10783 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:02:37,512 p=10783 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 21:02:37,512 p=10783 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-107628e0q2ai9 `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-107628e0q2ai9/ansible-tmp-1749754957.5121465-10783-205284108825094 `" && echo ansible-tmp-1749754957.5121465-10783-205284108825094="` echo /home/user/.ansible/tmp/ansible-local-107628e0q2ai9/ansible-tmp-1749754957.5121465-10783-205284108825094 `" ) && sleep 0'
2025-06-12 21:02:37,614 p=10783 u=user n=ansible | <R1> Attempting python interpreter discovery
2025-06-12 21:02:37,614 p=10783 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 21:02:37,617 p=10783 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 21:02:37,643 p=10783 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_command.py
2025-06-12 21:02:37,643 p=10783 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-107628e0q2ai9/tmp75pulfk1 TO /home/user/.ansible/tmp/ansible-local-107628e0q2ai9/ansible-tmp-1749754957.5121465-10783-205284108825094/AnsiballZ_ios_command.py
2025-06-12 21:02:37,643 p=10783 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-107628e0q2ai9/ansible-tmp-1749754957.5121465-10783-205284108825094/ /home/user/.ansible/tmp/ansible-local-107628e0q2ai9/ansible-tmp-1749754957.5121465-10783-205284108825094/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 21:02:37,646 p=10783 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-107628e0q2ai9/ansible-tmp-1749754957.5121465-10783-205284108825094/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 21:02:37,778 p=10769 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 21:02:37,786 p=10769 u=user n=p=10769 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:02:40,054 p=10769 u=user n=p=10769 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 21:02:40,059 p=10769 u=user n=p=10769 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 21:02:40,161 p=10769 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 21:02:40,175 p=10783 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-107628e0q2ai9/ansible-tmp-1749754957.5121465-10783-205284108825094/ > /dev/null 2>&1 && sleep 0'
2025-06-12 21:02:40,180 p=10762 u=user n=ansible | The full traceback is:
  File "/tmp/ansible_cisco.ios.ios_command_payload_cl65ye1g/ansible_cisco.ios.ios_command_payload.zip/ansible_collections/cisco/ios/plugins/module_utils/network/ios/ios.py", line 94, in get_capabilities
    capabilities = Connection(module._socket_path).get_capabilities()
  File "/tmp/ansible_cisco.ios.ios_command_payload_cl65ye1g/ansible_cisco.ios.ios_command_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
    raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)

2025-06-12 21:02:40,181 p=10762 u=user n=ansible | fatal: [R1]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  invocation:
    module_args:
      commands:
      - show running-config
      interval: 1
      match: all
      provider: null
      retries: 10
      wait_for: null
  msg: No existing session
2025-06-12 21:02:40,183 p=10762 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:02:40,183 p=10762 u=user n=ansible | R1                         : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:02:40,283 p=10769 u=user n=ansible | shutdown complete
2025-06-12 21:04:33,305 p=10843 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:04:33,305 p=10843 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:04:33,308 p=10843 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:04:33,308 p=10843 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:04:33,310 p=10843 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:04:33,310 p=10843 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:04:33,402 p=10843 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:04:33,408 p=10843 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:04:33,412 p=10843 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:04:33,412 p=10843 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:04:33,412 p=10843 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:04:33,412 p=10843 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 21:04:33,412 p=10843 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:04:33,414 p=10843 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:04:33,420 p=10843 u=user n=ansible | META: ran handlers
2025-06-12 21:04:33,421 p=10843 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:04:33,439 p=10846 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:04:33,452 p=10846 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:04:33,456 p=10846 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:04:33,459 p=10846 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:04:33,718 p=10850 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:04:33,731 p=10850 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:04:33,735 p=10850 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:04:33,777 p=10846 u=user n=ansible | network_os is set to ios
2025-06-12 21:04:33,781 p=10843 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:04:33,783 p=10843 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:04:33,802 p=10852 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:04:33,811 p=10852 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:04:33,814 p=10852 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:04:33,818 p=10852 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:04:34,095 p=10843 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:04:34,097 p=10843 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:04:34,118 p=10843 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:04:34,120 p=10843 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:04:34,149 p=10843 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:04:34,154 p=10859 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:04:34,164 p=10859 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:04:34,168 p=10859 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:04:34,170 p=10859 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:04:34,458 p=10859 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:04:37,742 p=10843 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  delta: 3
  echo: true
  rc: 0
  start: '2025-06-12 21:04:34.458854'
  stderr: ''
  stdout: Paused for 0.05 minutes
  stop: '2025-06-12 21:04:37.739233'
  user_input: '1'
2025-06-12 21:04:37,744 p=10843 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:04:37,772 p=10843 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:04:37,773 p=10843 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 21:04:37,776 p=10843 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:04:37,782 p=10843 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 21:04:37,788 p=10864 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:04:37,794 p=10864 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:04:37,796 p=10864 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:04:37,799 p=10864 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:04:38,077 p=10864 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:04:38,077 p=10864 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:04:38,078 p=10864 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 21:04:38,078 p=10864 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-108436t2pmcy4 `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-108436t2pmcy4/ansible-tmp-1749755078.078179-10864-189449599675517 `" && echo ansible-tmp-1749755078.078179-10864-189449599675517="` echo /home/user/.ansible/tmp/ansible-local-108436t2pmcy4/ansible-tmp-1749755078.078179-10864-189449599675517 `" ) && sleep 0'
2025-06-12 21:04:38,186 p=10864 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 21:04:38,186 p=10864 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 21:04:38,189 p=10864 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 21:04:38,212 p=10864 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_command.py
2025-06-12 21:04:38,213 p=10864 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-108436t2pmcy4/tmpi4yufhvb TO /home/user/.ansible/tmp/ansible-local-108436t2pmcy4/ansible-tmp-1749755078.078179-10864-189449599675517/AnsiballZ_ios_command.py
2025-06-12 21:04:38,213 p=10864 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-108436t2pmcy4/ansible-tmp-1749755078.078179-10864-189449599675517/ /home/user/.ansible/tmp/ansible-local-108436t2pmcy4/ansible-tmp-1749755078.078179-10864-189449599675517/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 21:04:38,216 p=10864 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-108436t2pmcy4/ansible-tmp-1749755078.078179-10864-189449599675517/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 21:04:38,351 p=10850 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 21:04:38,361 p=10850 u=user n=p=10850 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:04:40,638 p=10850 u=user n=p=10850 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 21:04:40,641 p=10850 u=user n=p=10850 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 21:04:40,743 p=10850 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 21:04:40,756 p=10864 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-108436t2pmcy4/ansible-tmp-1749755078.078179-10864-189449599675517/ > /dev/null 2>&1 && sleep 0'
2025-06-12 21:04:40,760 p=10843 u=user n=ansible | The full traceback is:
  File "/tmp/ansible_cisco.ios.ios_command_payload_k4e6eawi/ansible_cisco.ios.ios_command_payload.zip/ansible_collections/cisco/ios/plugins/module_utils/network/ios/ios.py", line 94, in get_capabilities
    capabilities = Connection(module._socket_path).get_capabilities()
  File "/tmp/ansible_cisco.ios.ios_command_payload_k4e6eawi/ansible_cisco.ios.ios_command_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
    raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)

2025-06-12 21:04:40,763 p=10843 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  invocation:
    module_args:
      commands:
      - show running-config
      interval: 1
      match: all
      provider: null
      retries: 10
      wait_for: null
  msg: No existing session
2025-06-12 21:04:40,765 p=10843 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:04:40,765 p=10843 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:04:40,865 p=10850 u=user n=ansible | shutdown complete
2025-06-12 21:05:36,783 p=10908 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:05:36,783 p=10908 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:05:36,787 p=10908 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:05:36,787 p=10908 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:05:36,789 p=10908 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:05:36,790 p=10908 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:05:36,879 p=10908 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:05:36,885 p=10908 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:05:36,889 p=10908 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:05:36,889 p=10908 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:05:36,889 p=10908 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:05:36,889 p=10908 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 21:05:36,890 p=10908 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:05:36,891 p=10908 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:05:36,896 p=10908 u=user n=ansible | META: ran handlers
2025-06-12 21:05:36,898 p=10908 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:05:36,914 p=10911 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:05:36,924 p=10911 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:36,928 p=10911 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:36,931 p=10911 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:05:37,181 p=10915 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:05:37,196 p=10915 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:37,200 p=10915 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:37,247 p=10911 u=user n=ansible | network_os is set to ios
2025-06-12 21:05:37,251 p=10908 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:05:37,253 p=10908 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:05:37,272 p=10917 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:05:37,281 p=10917 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:37,285 p=10917 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:37,289 p=10917 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:05:37,574 p=10908 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:05:37,577 p=10908 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:05:37,597 p=10908 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:05:37,600 p=10908 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:05:37,629 p=10908 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:05:37,635 p=10924 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:05:37,645 p=10924 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:37,650 p=10924 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:37,653 p=10924 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:05:37,931 p=10924 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:05:40,449 p=10908 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  delta: 2
  echo: true
  rc: 0
  start: '2025-06-12 21:05:37.931254'
  stderr: ''
  stdout: Paused for 0.04 minutes
  stop: '2025-06-12 21:05:40.445877'
  user_input: '1'
2025-06-12 21:05:40,451 p=10908 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:05:40,478 p=10908 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:05:40,479 p=10908 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 21:05:40,482 p=10908 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:05:40,489 p=10908 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 21:05:40,495 p=10930 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:05:40,501 p=10930 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:40,504 p=10930 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:40,507 p=10930 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:05:40,784 p=10930 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:05:40,785 p=10930 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:05:40,785 p=10930 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 21:05:40,785 p=10930 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755140.7854278-10930-29921952026514 `" && echo ansible-tmp-1749755140.7854278-10930-29921952026514="` echo /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755140.7854278-10930-29921952026514 `" ) && sleep 0'
2025-06-12 21:05:40,885 p=10930 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 21:05:40,885 p=10930 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 21:05:40,888 p=10930 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 21:05:40,913 p=10930 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_command.py
2025-06-12 21:05:40,914 p=10930 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/tmpmgcxr_e8 TO /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755140.7854278-10930-29921952026514/AnsiballZ_ios_command.py
2025-06-12 21:05:40,914 p=10930 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755140.7854278-10930-29921952026514/ /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755140.7854278-10930-29921952026514/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 21:05:40,916 p=10930 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755140.7854278-10930-29921952026514/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 21:05:41,056 p=10915 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 21:05:41,065 p=10915 u=user n=p=10915 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:05:41,335 p=10915 u=user n=p=10915 u=user | paramiko [192.168.122.237] | Authentication (password) successful!
2025-06-12 21:05:42,782 p=10930 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755140.7854278-10930-29921952026514/ > /dev/null 2>&1 && sleep 0'
2025-06-12 21:05:42,792 p=10908 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  invocation:
    module_args:
      commands:
      - show running-config
      interval: 1
      match: all
      provider: null
      retries: 10
      wait_for: null
  stdout:
  - |-
    Building configuration...
  
  
    Current configuration : 1579 bytes
    !
    ! Last configuration change at 18:31:57 UTC Thu Jun 12 2025
    !
    version 15.6
    service timestamps debug datetime msec
    service timestamps log datetime msec
    no service password-encryption
    !
    hostname R1
    !
    boot-start-marker
    boot-end-marker
    !
    !
    !
    no aaa new-model
    ethernet lmi ce
    !
    !
    !
    no process cpu autoprofile hog
    mmi polling-interval 60
    no mmi auto-configure
    no mmi pvc
    mmi snmp-timeout 180
    !
    !
    !
    !
    !
    no ip icmp rate-limit unreachable
    !
    !
    !
    !
    !
    !
    no ip domain lookup
    ip domain name formation.lab
    ip cef
    no ipv6 cef
    !
    multilink bundle-name authenticated
    !
    !
    !
    !
    username ansible privilege 15 password 0 ansible
    !
    redundancy
    !
    no cdp log mismatch duplex
    no cdp run
    !
    ip tcp synwait-time 5
    !
    !
    !
    !
    !
    !
    !
    !
    !
    !
    !
    !
    !
    interface GigabitEthernet0/0
     ip address dhcp
     duplex auto
     speed auto
     media-type rj45
     no cdp enable
    !
    interface GigabitEthernet0/1
     no ip address
     shutdown
     duplex auto
     speed auto
     media-type rj45
     no cdp enable
    !
    interface GigabitEthernet0/2
     no ip address
     shutdown
     duplex auto
     speed auto
     media-type rj45
     no cdp enable
    !
    interface GigabitEthernet0/3
     no ip address
     shutdown
     duplex auto
     speed auto
     media-type rj45
     no cdp enable
    !
    ip forward-protocol nd
    !
    !
    no ip http server
    no ip http secure-server
    ip ssh version 2
    ip ssh pubkey-chain
      username ansible
       key-hash ssh-rsa 7CE48FF48D648995625C30A668919A5B
    !
    !
    !
    !
    control-plane
    !
    !
    line con 0
     exec-timeout 0 0
     privilege level 15
     logging synchronous
    line aux 0
     exec-timeout 0 0
     privilege level 15
     logging synchronous
    line vty 0 4
     login local
     transport input ssh
    !
    no scheduler allocate
    !
    end
  stdout_lines: <omitted>
2025-06-12 21:05:42,795 p=10908 u=user n=ansible | TASK [cisco : Sauvegarde de la config] *************************************************************************************************************
2025-06-12 21:05:42,814 p=10964 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:05:42,819 p=10964 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:42,822 p=10964 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:42,826 p=10964 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:05:43,108 p=10964 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 21:05:43,108 p=10964 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420 `" && echo ansible-tmp-1749755143.1078331-10964-116867405443420="` echo /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420 `" ) && sleep 0'
2025-06-12 21:05:43,193 p=10964 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/stat.py
2025-06-12 21:05:43,194 p=10964 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/tmp8u7xcuvv TO /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/AnsiballZ_stat.py
2025-06-12 21:05:43,194 p=10964 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/ /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/AnsiballZ_stat.py && sleep 0'
2025-06-12 21:05:43,196 p=10964 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/AnsiballZ_stat.py && sleep 0'
2025-06-12 21:05:43,312 p=10964 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/tmpp02nje1a TO /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/source
2025-06-12 21:05:43,313 p=10964 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/ /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/source && sleep 0'
2025-06-12 21:05:43,406 p=10964 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/copy.py
2025-06-12 21:05:43,406 p=10964 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/tmpfzm2h5c_ TO /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/AnsiballZ_copy.py
2025-06-12 21:05:43,407 p=10964 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/ /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/AnsiballZ_copy.py && sleep 0'
2025-06-12 21:05:43,409 p=10964 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/AnsiballZ_copy.py && sleep 0'
2025-06-12 21:05:43,511 p=10964 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/ > /dev/null 2>&1 && sleep 0'
2025-06-12 21:05:43,518 p=10908 u=user n=ansible | changed: [192.168.122.237] => changed=true 
  checksum: 72097e863cb78da2b81de8eed79f81c9d34aec2e
  dest: /home/user/TFE_automation_compliance_CIS/config/192.168.122.237_running_config.txt
  diff: []
  gid: 1000
  group: user
  invocation:
    module_args:
      _original_basename: tmpp02nje1a
      attributes: null
      backup: false
      checksum: 72097e863cb78da2b81de8eed79f81c9d34aec2e
      content: null
      dest: /home/user/TFE_automation_compliance_CIS/config/192.168.122.237_running_config.txt
      directory_mode: null
      follow: false
      force: true
      group: null
      local_follow: null
      mode: null
      owner: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/source
      unsafe_writes: false
      validate: null
  md5sum: 9a36c294c7cde8209201bd03952c0b61
  mode: '0664'
  owner: user
  size: 1642
  src: /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755143.1078331-10964-116867405443420/source
  state: file
  uid: 1000
2025-06-12 21:05:43,521 p=10908 u=user n=ansible | TASK [cisco : declaration des variables] ***********************************************************************************************************
2025-06-12 21:05:43,681 p=11003 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:05:43,685 p=11003 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:43,687 p=11003 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:43,689 p=11003 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:05:44,078 p=10908 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  ansible_facts:
    host_config: |-
      Building configuration...
  
  
      Current configuration : 1579 bytes
      !
      ! Last configuration change at 18:31:57 UTC Thu Jun 12 2025
      !
      version 15.6
      service timestamps debug datetime msec
      service timestamps log datetime msec
      no service password-encryption
      !
      hostname R1
      !
      boot-start-marker
      boot-end-marker
      !
      !
      !
      no aaa new-model
      ethernet lmi ce
      !
      !
      !
      no process cpu autoprofile hog
      mmi polling-interval 60
      no mmi auto-configure
      no mmi pvc
      mmi snmp-timeout 180
      !
      !
      !
      !
      !
      no ip icmp rate-limit unreachable
      !
      !
      !
      !
      !
      !
      no ip domain lookup
      ip domain name formation.lab
      ip cef
      no ipv6 cef
      !
      multilink bundle-name authenticated
      !
      !
      !
      !
      username ansible privilege 15 password 0 ansible
      !
      redundancy
      !
      no cdp log mismatch duplex
      no cdp run
      !
      ip tcp synwait-time 5
      !
      !
      !
      !
      !
      !
      !
      !
      !
      !
      !
      !
      !
      interface GigabitEthernet0/0
       ip address dhcp
       duplex auto
       speed auto
       media-type rj45
       no cdp enable
      !
      interface GigabitEthernet0/1
       no ip address
       shutdown
       duplex auto
       speed auto
       media-type rj45
       no cdp enable
      !
      interface GigabitEthernet0/2
       no ip address
       shutdown
       duplex auto
       speed auto
       media-type rj45
       no cdp enable
      !
      interface GigabitEthernet0/3
       no ip address
       shutdown
       duplex auto
       speed auto
       media-type rj45
       no cdp enable
      !
      ip forward-protocol nd
      !
      !
      no ip http server
      no ip http secure-server
      ip ssh version 2
      ip ssh pubkey-chain
        username ansible
         key-hash ssh-rsa 7CE48FF48D648995625C30A668919A5B
      !
      !
      !
      !
      control-plane
      !
      !
      line con 0
       exec-timeout 0 0
       privilege level 15
       logging synchronous
      line aux 0
       exec-timeout 0 0
       privilege level 15
       logging synchronous
      line vty 0 4
       login local
       transport input ssh
      !
      no scheduler allocate
      !
      end
    ref_cis_ios17:
      1.1.1:
        audit: show running-config | inc aaa new-model
        automated_or_manual: Automated
        commande: aaa new-model
        default_value: null
        description: This command enables the AAA access control system.
        impact: |-
          Implementing Cisco AAA is significantly disruptive as former access methods are
          immediately disabled. Therefore, before implementing Cisco AAA, the organization
          should carefully review and plan their authentication criteria (logins & passwords,
          challenges & responses, and token technologies), authorization methods, and
          accounting requirements.
        level: Level 1
        rationale: |-
          Authentication, authorization and accounting (AAA) services provide an authoritative
          source for managing and monitoring access for devices. Centralizing control improves
          consistency of access control, the services that may be accessed once authenticated
          and accountability by tracking services accessed. Additionally, centralizing access
          control simplifies and reduces administrative costs of account provisioning and de-
          provisioning, especially when managing a large number of devices.
        remediation: aaa new-model
        titre: 1.1.1
        titre_texte: Enable 'aaa new-model'
      1.1.10:
        audit: show running-config | incl aaa accounting system
        automated_or_manual: Automated
        commande: aaa accounting system
        default_value: null
        description: |-
          Performs accounting for all system-level events not associated with users, such as
          reloads.
        impact: |-
          Enabling aaa accounting system creates accounting records for all system-level events.
          Organizations should regular monitor these records for exceptions, remediate issues,
          and report findings regularly.
        level: Level 2
        rationale: |-
          Authentication, authorization and accounting (AAA) systems provide an authoritative
          source for managing and monitoring access for devices. Centralizing control improves
          consistency of access control, the services that may be accessed once authenticated
          and accountability by tracking services accessed. Additionally, centralizing access
          control simplifies and reduces administrative costs of account provisioning and de-
          provisioning, especially when managing a large number of devices. AAA Accounting
          provides a management and audit trail for user and administrative sessions through
          RADIUS and TACACS+.
        remediation: aaa accounting system {default | list-name | guarantee-
        titre: 1.1.10
        titre_texte: Set 'aaa accounting system'
      1.1.2:
        audit: show running-config | incl aaa authentication login
        automated_or_manual: Automated
        commande: aaa authentication login
        default_value: null
        description: Sets authentication, authorization and accounting (AAA) authentication at login.
        impact: |-
          Implementing Cisco AAA is significantly disruptive as former access methods are
          immediately disabled. Therefore, before implementing Cisco AAA, the organization
          should carefully review and plan their authentication methods such as logins and
          passwords, challenges and responses, and which token technologies will be used.
        level: Level 1
        rationale: |-
          Using AAA authentication for interactive management access to the device provides
          consistent, centralized control of your network. The default under AAA (local or network)
          is to require users to log in using a valid user name and password. This rule applies for
          both local and network AAA. Fallback mode should also be enabled to allow emergency
          access to the router or switch in the event that the AAA server was unreachable, by
          utilizing the LOCAL keyword after the AAA server-tag.
        remediation: aaa authentication login {default | aaa_list_name} [passwd-
        titre: 1.1.2
        titre_texte: Enable 'aaa authentication login'
      1.1.3:
        audit: show running-config | incl aaa authentication enable
        automated_or_manual: Automated
        commande: aaa authentication enable default
        default_value: null
        description: |-
          Authenticates users who access privileged EXEC mode when they use the enable
          command.
        impact: |-
          Enabling Cisco AAA 'authentication enable' mode is significantly disruptive as former
          access methods are immediately disabled. Therefore, before enabling 'aaa
          authentication enable default' mode, the organization should plan and implement
          authentication logins and passwords, challenges and responses, and token
          technologies.
        level: Level 1
        rationale: |-
          Using AAA authentication for interactive management access to the device provides
          consistent, centralized control of your network. The default under AAA (local or network)
          is to require users to log in using a valid user name and password. This rule applies for
          both local and network AAA.
        remediation: aaa authentication enable default {method1} enable
        titre: 1.1.3
        titre_texte: Enable 'aaa authentication enable default'
      1.1.4:
        audit: show running-config | sec line | incl login authentication
        automated_or_manual: Automated
        commande: login authentication for
        default_value: null
        description: Authenticates users who access the router or switch remotely through the VTY port.
        impact: |-
          Enabling Cisco AAA 'login authentication for line VTY' is significantly disruptive as
          former access methods are immediately disabled. Therefore, before enabling Cisco
          AAA 'login authentication for line VTY', the organization should plan and implement
          authentication logins and passwords, challenges and responses, and token
          technologies.
        level: Level 1
        rationale: |-
          Using AAA authentication for interactive management access to the device provides
          consistent, centralized control of your network. The default under AAA (local or network)
          is to require users to log in using a valid user name and password. This rule applies for
          both local and network AAA.
        remediation: |-
          line vty {line-number} [ending-line-number]
          login authentication {default | aaa_list_name}
        titre: 1.1.4
        titre_texte: Set 'login authentication for 'line vty'
      1.1.5:
        audit: |-
          show running-config | inc ip http authentication
          show running-config | incl aaa accounting commands
        automated_or_manual: Automated
        commande: login authentication for
        default_value: null
        description: |-
          If account management functions are not automatically enforced, an attacker could gain
          privileged access to a vital element of the network security architecture
          Runs accounting for all commands at the specified privilege level.
        impact: |-
          Enabling Cisco AAA 'line login' is significantly disruptive as former access methods are
          immediately disabled. Therefore, before enabling Cisco AAA 'line login', the
          organization should plan and implement authentication logins and passwords,
          challenges and responses, and token technologies.
          Enabling 'aaa accounting' for privileged commands records and sends activity to the
          accounting servers and enables organizations to monitor and analyze privileged activity.
        level: Level 1
        rationale: |-
          Using AAA authentication for interactive management access to the device provides
          consistent, centralized control of your network. The default under AAA (local or network)
          is to require users to log in using a valid user name and password. This rule applies for
          both local and network AAA.
          Authentication, authorization and accounting (AAA) systems provide an authoritative
          source for managing and monitoring access for devices. Centralizing control improves
          consistency of access control, the services that may be accessed once authenticated
          and accountability by tracking services accessed. Additionally, centralizing access
          control simplifies and reduces administrative costs of account provisioning and de-
          provisioning, especially when managing a large number of devices. AAA Accounting
          provides a management and audit trail for user and administrative sessions through
          TACACS+.
        remediation: |-
          (config)ip http secure-server
          (config)ip http authentication {default | _aaa\_list\_name_}
          aaa accounting commands 15 {default | list-name | guarantee-
        titre: 1.1.5
        titre_texte: Set 'login authentication for 'ip http'
      1.1.7:
        audit: show running-config | incl aaa accounting connection
        automated_or_manual: Automated
        commande: aaa accounting connection
        default_value: null
        description: |-
          Provides information about all outbound connections made from the network access
          server.
        impact: |-
          Implementing aaa accounting connection creates accounting records about connections
          from the network access server. Organizations should regular monitor these connection
          records for exceptions, remediate issues, and report findings regularly.
        level: Level 2
        rationale: |-
          Authentication, authorization and accounting (AAA) systems provide an authoritative
          source for managing and monitoring access for devices. Centralizing control improves
          consistency of access control, the services that may be accessed once authenticated
          and accountability by tracking services accessed. Additionally, centralizing access
          control simplifies and reduces administrative costs of account provisioning and de-
          provisioning, especially when managing a large number of devices. AAA Accounting
          provides a management and audit trail for user and administrative sessions through
          RADIUS and TACACS+.
        remediation: aaa accounting connection {default | list-name | guarantee-
        titre: 1.1.7
        titre_texte: Set 'aaa accounting connection'
      1.1.8:
        audit: show running-config | incl aaa accounting exec
        automated_or_manual: Automated
        commande: aaa accounting exec
        default_value: null
        description: Runs accounting for the EXEC shell session.
        impact: |-
          Enabling aaa accounting exec creates accounting records for the EXEC terminal
          sessions on the network access server. These records include start and stop times,
          usernames, and date information. Organizations should regularly monitor these records
          for exceptions, remediate issues, and report findings.
        level: Level 2
        rationale: |-
          Authentication, authorization and accounting (AAA) systems provide an authoritative
          source for managing and monitoring access for devices. Centralizing control improves
          consistency of access control, the services that may be accessed once authenticated
          and accountability by tracking services accessed. Additionally, centralizing access
          control simplifies and reduces administrative costs of account provisioning and de-
          provisioning, especially when managing a large number of devices. AAA Accounting
          provides a management and audit trail for user and administrative sessions through
          RADIUS and TACACS+.
        remediation: aaa accounting exec {default | list-name | guarantee-first}
        titre: 1.1.8
        titre_texte: Set 'aaa accounting exec'
      1.1.9:
        audit: show running-config | incl aaa accounting network
        automated_or_manual: Automated
        commande: aaa accounting network
        default_value: null
        description: Runs accounting for all network-related service requests.
        impact: |-
          Implementing aaa accounting network creates accounting records for a method list
          including ARA, PPP, SLIP, and NCPs sessions. Organizations should regular monitor
          these records for exceptions, remediate issues, and report findings.
        level: Level 2
        rationale: |-
          Authentication, authorization and accounting (AAA) systems provide an authoritative
          source for managing and monitoring access for devices. Centralizing control improves
          consistency of access control, the services that may be accessed once authenticated
          and accountability by tracking services accessed. Additionally, centralizing access
          control simplifies and reduces administrative costs of account provisioning and de-
          provisioning, especially when managing a large number of devices. AAA Accounting
          provides a management and audit trail for user and administrative sessions through
          RADIUS and TACACS+.
        remediation: aaa accounting network {default | list-name | guarantee-
        titre: 1.1.9
        titre_texte: Set 'aaa accounting network'
      1.2.1:
        audit: |-
          show running-config | incl privilege
          show running-config | sec vty
        automated_or_manual: Automated
        commande: privilege 1
        default_value: null
        description: |-
          Sets the privilege level for the user.
          Selects the Secure Shell (SSH) protocol.
        impact: |-
          Organizations should create policies requiring all local accounts with 'privilege level 1'
          with encrypted passwords to reduce the risk of unauthorized access. Default
          configuration settings do not provide strong user authentication to the device.
          To reduce risk of unauthorized access, organizations should require all VTY
          management line protocols to be limited to ssh.
        level: Level 1
        rationale: |-
          Default device configuration does not require strong user authentication potentially
          enabling unfettered access to an attacker that is able to reach the device. Creating a
          local account with privilege level 1 permissions only allows the local user to access the
          device with EXEC-level permissions and will be unable to modify the device without
          using the enable password. In addition, require the use of an encrypted password as
          well (see Section 1.1.4.4 - Require Encrypted User Passwords).
          Configuring VTY access control restricts remote access to only those authorized to
          manage the device and prevents unauthorized users from accessing the system.
        remediation: |-
          username <LOCAL_USERNAME> privilege 1
          line vty <line-number> <ending-line-number>
          transport input ssh
        titre: 1.2.1
        titre_texte: Set 'privilege 1' for local users
      1.2.10:
        audit: show run | inc ip http secure-server
        automated_or_manual: Automated
        commande: http Secure-server
        default_value: null
        description: |-
          Device management includes the ability to control the number of administrators and
          management sessions that manage a device. Limiting the number of allowed
          administrators and sessions per administrator based on account type, role, or access
          type is helpful in limiting risks related to denial-of-service (DoS) attacks.
          If no input is detected during the interval, the EXEC facility resumes the current
          connection. If no connections exist, the EXEC facility returns the terminal to the idle
          state and disconnects the incoming session.
        impact: null
        level: Level 1
        rationale: |-
          This requirement addresses concurrent sessions for administrative accounts and does
          not address concurrent sessions by a single administrator via multiple administrative
          accounts. The maximum number of concurrent sessions should be defined based upon
          mission needs and the operational environment for each system. At a minimum, limits
          must be set for SSH, HTTPS, account of last resort, and root account sessions.
          This prevents unauthorized users from misusing abandoned sessions. For example, if
          the network administrator leaves for the day and leaves a computer open with an
          enabled login session accessible. There is a trade-off here between security (shorter
          timeouts) and usability (longer timeouts). Review your local policies and operational
          needs to determine the best timeout value. In most cases, this should be no more than
          10 minutes.
          This prevents unauthorized users from misusing abandoned sessions. For example, if
          the network administrator leaves for the day and leaves a computer open with an
          enabled login session accessible. There is a trade-off here between security (shorter
          timeouts) and usability (longer timeouts). Review your local policies and operational
          needs to determine the best timeout value. In most cases, this should be no more than
          10 minutes.
        remediation: ip http max-connections 2
        titre: 1.2.10
        titre_texte: Set 'http Secure-server' limit
      1.2.3:
        audit: |-
          show running-config | sec aux
          show line aux 0 | incl exec
        automated_or_manual: Automated
        commande: no exec
        default_value: null
        description: The 'no exec' command restricts a line to outgoing connections only.
        impact: |-
          Organizations can reduce the risk of unauthorized access by disabling the 'aux' port
          with the 'no exec' command. Conversely, not restricting access through the 'aux' port
          increases the risk of remote unauthorized access.
        level: Level 1
        rationale: |-
          Unused ports should be disabled, if not required, since they provide a potential access
          path for attackers. Some devices include both an auxiliary and console port that can be
          used to locally connect to and configure the device. The console port is normally the
          primary port used to configure the device; even when remote, backup administration is
          required via console server or Keyboard, Video, Mouse (KVM) hardware. The auxiliary
          port is primarily used for dial-up administration via an external modem; instead, use
          other available methods.
        remediation: |-
          line aux 0
          no exec
        titre: 1.2.3
        titre_texte: Set 'no exec' for 'line aux 0'
      1.2.4:
        audit: sh ip access-list <vty_acl_number>
        automated_or_manual: Automated
        commande: access-list
        default_value: null
        description: |-
          Access lists control the transmission of packets on an interface, control Virtual Terminal
          Line (VTY) access, and restrict the contents of routing updates. The Cisco IOS software
          stops checking the extended access list after a match occurs.
        impact: |-
          Organizations can reduce the risk of unauthorized access by implementing access-lists
          for all VTY lines. Conversely, using VTY lines without access-lists increases the risk of
          unauthorized access.
        level: Level 1
        rationale: |-
          VTY ACLs control what addresses may attempt to log in to the router. Configuring VTY
          lines to use an ACL, restricts the sources where a user can manage the device. You
          should limit the specific host(s) and or network(s) authorized to connect to and configure
          the device, via an approved protocol, to those individuals or systems authorized to
          administer the device. For example, you could limit access to specific hosts, so that only
          network managers can configure the devices only by using specific network
          management workstations. Make sure you configure all VTY lines to use the same ACL.
        remediation: |-
          access-list <vty_acl_number> permit tcp
          access-list <vty_acl_number> permit tcp host <vty_acl_host>
          deny ip any any log
        titre: 1.2.4
        titre_texte: Create 'access-list' for use with 'line vty'
      1.2.5:
        audit: |-
          sh run | sec vty <line-number> <ending-line-number>
          sh run | sec line aux 0
          sh run | sec line con 0
          sh line vty <tty_line_number> | begin Timeout
        automated_or_manual: Automated
        commande: access-class
        default_value: null
        description: |-
          The 'access-class' setting restricts incoming and outgoing connections between a
          particular vty (into a Cisco device) and the networking devices associated with
          addresses in an access list.
          If no input is detected during the interval, the EXEC facility resumes the current
          connection. If no connections exist, the EXEC facility returns the terminal to the idle
          state and disconnects the incoming session.
          If no input is detected during the interval, the EXEC facility resumes the current
          connection. If no connections exist, the EXEC facility returns the terminal to the idle
          state and disconnects the incoming session.
          If no input is detected during the interval, the EXEC facility resumes the current
          connection. If no connections exist, the EXEC facility returns the terminal to the idle
          state and disconnects the incoming session.
        impact: |-
          Applying 'access'class' to line VTY further restricts remote access to only those devices
          authorized to manage the device and reduces the risk of unauthorized access.
          Conversely, using VTY lines with 'access class' restrictions increases the risks of
          unauthorized access.
          Organizations should prevent unauthorized use of unattended or abandoned sessions
          by an automated control. Enabling 'exec-timeout' with an appropriate length of minutes
          or seconds prevents unauthorized access of abandoned sessions.
          Organizations should prevent unauthorized use of unattended or abandoned sessions
          by an automated control. Enabling 'exec-timeout' with an appropriate length reduces the
          risk of unauthorized access of abandoned sessions.
          Organizations should prevent unauthorized use of unattended or abandoned sessions
          by an automated control. Enabling 'exec-timeout' with an appropriate length of minutes
          or seconds prevents unauthorized access of abandoned sessions.
        level: Level 1
        rationale: |-
          Restricting the type of network devices, associated with the addresses on the access-
          list, further restricts remote access to those devices authorized to manage the device
          and reduces the risk of unauthorized access.
          This prevents unauthorized users from misusing abandoned sessions. For example, if
          the network administrator leaves for the day and leaves a computer open with an
          enabled login session accessible. There is a trade-off here between security (shorter
          timeouts) and usability (longer timeouts). Review your local policies and operational
          needs to determine the best timeout value. In most cases, this should be no more than
          10 minutes.
          This prevents unauthorized users from misusing abandoned sessions. For example, if
          the network administrator leaves for the day and leaves a computer open with an
          enabled login session accessible. There is a trade-off here between security (shorter
          timeouts) and usability (longer timeouts). Review your local policies and operational
          needs to determine the best timeout value. In most cases, this should be no more than
          10 minutes.
          This prevents unauthorized users from misusing abandoned sessions. For example, if
          the network administrator leaves for the day and leaves a computer open with an
          enabled login session accessible. There is a trade-off here between security (shorter
          timeouts) and usability (longer timeouts). Review your local policies and operational
          needs to determine the best timeout value. In most cases, this should be no more than
          10 minutes.
        remediation: |-
          line vty <line-number> <ending-line-number>
          access-class <vty_acl_number> in
          line aux 0
          exec-timeout <timeout_in_minutes> <timeout_in_seconds>
          line con 0
          exec-timeout <timeout_in_minutes> <timeout_in_seconds>
          line vty {line_number} [ending_line_number]
          exec-timeout <<span>timeout_in_minutes>
        titre: 1.2.5
        titre_texte: Set 'access-class' for 'line vty'
      1.2.9:
        audit: sh line aux 0 | incl input transports
        automated_or_manual: Automated
        commande: transport input none
        default_value: null
        description: |-
          When you want to allow only an outgoing connection on a line, use the no exec
          command.
        impact: |-
          Organizations should prevent all unauthorized access of auxiliary ports by disabling all
          protocols using the 'transport input none' command.
        level: Level 1
        rationale: |-
          Unused ports should be disabled, if not required, since they provide a potential access
          path for attackers. Some devices include both an auxiliary and console port that can be
          used to locally connect to and configure the device. The console port is normally the
          primary port used to configure the device; even when remote, backup administration is
          required via console server or Keyboard, Video, Mouse (KVM) hardware. The auxiliary
          port is primarily used for dial-up administration via an external modem; instead, use
          other available methods.
        remediation: |-
          line aux 0
          transport input none
        titre: 1.2.9
        titre_texte: Set 'transport input none' for 'line aux 0'
      1.3.1:
        audit: sh running-config | beg banner exec
        automated_or_manual: Automated
        commande: banner-text
        default_value: null
        description: |-
          This command specifies a message to be displayed when an EXEC process is created
          (a line is activated, or an incoming connection is made to a vty). Follow this command
          with one or more blank spaces and a delimiting character of your choice. Then enter
          one or more lines of text, terminating the message with the second occurrence of the
          delimiting character.
          When a user connects to a router, the message-of-the-day (MOTD) banner appears
          first, followed by the login banner and prompts. After the user logs in to the router, the
          EXEC banner or incoming banner will be displayed, depending on the type of
          connection. For a reverse Telnet login, the incoming banner will be displayed. For all
          other connections, the router will display the EXEC banner.
        impact: |-
          Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
          their networks by using a 'banner-text' for the banner exec command.
        level: Level 1
        rationale: |-
          "Network banners are electronic messages that provide notice of legal rights to users of
          computer networks. From a legal standpoint, banners have four primary functions.
          • First, banners may be used to generate consent to real-time monitoring under
          Title III.
          • Second, banners may be used to generate consent to the retrieval of stored files
          and records pursuant to ECPA.
          • Third, in the case of government networks, banners may eliminate any Fourth
          Amendment "reasonable expectation of privacy" that government employees or
          other users might otherwise retain in their use of the government's network under
          O'Connor v. Ortega, 480 U.S. 709 (1987).
          • Fourth, in the case of a non-government network, banners may establish a
          system administrator's "common authority" to consent to a law enforcement
          search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
          Department of Justice APPENDIX A: Sample Network Banner Language)
        remediation: banner exec c
        titre: 1.3.1
        titre_texte: Set the 'banner-text' for 'banner exec'
      1.3.2:
        audit: show running-config | beg banner login
        automated_or_manual: Automated
        commande: banner-text
        default_value: null
        description: |-
          Follow the banner login command with one or more blank spaces and a delimiting
          character of your choice. Then enter one or more lines of text, terminating the message
          with the second occurrence of the delimiting character.
          When a user connects to the router, the message-of-the-day (MOTD) banner (if
          configured) appears first, followed by the login banner and prompts. After the user
          successfully logs in to the router, the EXEC banner or incoming banner will be
          displayed, depending on the type of connection. For a reverse Telnet login, the
          incoming banner will be displayed. For all other connections, the router will display the
          EXEC banner.
        impact: |-
          Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
          their networks by using a 'banner-text' for the banner login command.
        level: Level 1
        rationale: |-
          "Network banners are electronic messages that provide notice of legal rights to users of
          computer networks. From a legal standpoint, banners have four primary functions.
          • First, banners may be used to generate consent to real-time monitoring under
          Title III.
          • Second, banners may be used to generate consent to the retrieval of stored files
          and records pursuant to ECPA.
          • Third, in the case of government networks, banners may eliminate any Fourth
          Amendment "reasonable expectation of privacy" that government employees or
          other users might otherwise retain in their use of the government's network under
          O'Connor v. Ortega, 480 U.S. 709 (1987).
          • Fourth, in the case of a non-government network, banners may establish a
          system administrator's "common authority" to consent to a law enforcement
          search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
          Department of Justice APPENDIX A: Sample Network Banner Language)
        remediation: banner login c
        titre: 1.3.2
        titre_texte: Set the 'banner-text' for 'banner login'
      1.3.3:
        audit: sh running-config | beg banner motd
        automated_or_manual: Automated
        commande: banner-text
        default_value: null
        description: |-
          This MOTD banner is displayed to all terminals connected and is useful for sending
          messages that affect all users (such as impending system shutdowns). Use the no
          exec-banner or no motd-banner command to disable the MOTD banner on a line. The
          no exec-banner command also disables the EXEC banner on the line.
          When a user connects to the router, the MOTD banner appears before the login prompt.
          After the user logs in to the router, the EXEC banner or incoming banner will be
          displayed, depending on the type of connection. For a reverse Telnet login, the
          incoming banner will be displayed. For all other connections, the router will display the
          EXEC banner.
        impact: |-
          Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
          their networks by using a 'banner-text' for the banner motd command.
        level: Level 1
        rationale: |-
          "Network banners are electronic messages that provide notice of legal rights to users of
          computer networks. From a legal standpoint, banners have four primary functions.
          • First, banners may be used to generate consent to real-time monitoring under
          Title III.
          • Second, banners may be used to generate consent to the retrieval of stored files
          and records pursuant to ECPA.
          • Third, in the case of government networks, banners may eliminate any Fourth
          Amendment "reasonable expectation of privacy" that government employees or
          other users might otherwise retain in their use of the government's network under
          O'Connor v. Ortega, 480 U.S. 709 (1987).
          • Fourth, in the case of a non-government network, banners may establish a
          system administrator's "common authority" to consent to a law enforcement
          search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
          Department of Justice APPENDIX A: Sample Network Banner Language)
        remediation: banner motd c
        titre: 1.3.3
        titre_texte: Set the 'banner-text' for 'banner motd'
      1.3.4:
        audit: show ip admission auth-proxy-banner http
        automated_or_manual: Automated
        commande: banner-text
        default_value: null
        description: |-
          This banner is displayed to all terminals connected and is useful for sending messages
          that affect all users (such as impending system shutdowns). Use the no exec-banner or
          no motd-banner command to disable the banner on a line. The no exec-banner
          command also disables the EXEC banner on the line.
          When a user connects to the router, the MOTD banner appears before the login prompt.
          After the user logs in to the router, the EXEC banner or incoming banner will be
          displayed, depending on the type of connection. For a reverse Telnet login, the
          incoming banner will be displayed. For all other connections, the router will display the
          EXEC banner.
        impact: |-
          Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
          their networks by using a 'banner-text' for the banner motd command.
        level: Level 1
        rationale: |-
          "Network banners are electronic messages that provide notice of legal rights to users of
          computer networks. From a legal standpoint, banners have four primary functions.
          • First, banners may be used to generate consent to real-time monitoring under
          Title III.
          • Second, banners may be used to generate consent to the retrieval of stored files
          and records pursuant to ECPA.
          • Third, in the case of government networks, banners may eliminate any Fourth
          Amendment "reasonable expectation of privacy" that government employees or
          other users might otherwise retain in their use of the government's network under
          O'Connor v. Ortega, 480 U.S. 709 (1987).
          • Fourth, in the case of a non-government network, banners may establish a
          system administrator's "common authority" to consent to a law enforcement
          search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
          Department of Justice APPENDIX A: Sample Network Banner Language)
        remediation: ip admission auth-proxy-banner http {banner-text | filepath}
        titre: 1.3.4
        titre_texte: Set the 'banner-text' for 'webauth banner'
      1.4.1:
        audit: sh run | incl enable secret
        automated_or_manual: Automated
        commande: password
        default_value: null
        description: |-
          Enable secret password type 5 and enable secret password type 5 must be migrated to
          the stronger password type 8 or 9. IF a device is upgraded from IOS XE 16.9 or later
          the type 5 is auto converted to type 9.
          Use the enable secret command to provide an additional layer of security over the
          enable password. The enable secret command provides better security by storing the
          enable secret password using a nonreversible cryptographic function. The added layer
          of security encryption provides is useful in environments where the password crosses
          the network or is stored on a TFTP server.
        impact: |-
          Default device configuration does not require strong user authentication potentially
          enabling unfettered access to an attacker that is able to reach the device. Creating a
          local account with an encrypted password enforces login authentication and provides a
          fallback authentication mechanism for configuration in a named method list in a situation
          where centralized authentication, authorization, and accounting services are
          unavailable. The following is the type of encryption the device will allow as of 15.3: Type
          0 this mean the password will not be encrypted when router store it in Run/Start Files
          command: enable password cisco123
          Type 4 this mean the password will be encrypted when router store it in Run/Start Files
          using SHA-256 which apps like Cain can crack but will take long time command :
          enable secret 4 Rv4kArhts7yA2xd8BD2YTVbts (notice above is not the password string
          it self but the hash of the password)
          this type is deprecated starting from IOS 15.3(3)
          Type 5 this mean the password will be encrypted when router store it in Run/Start Files
          using MD5 which apps like Cain can crack but will take long time command: enable
          secret 5 00271A5307542A02D22842 (notice above is not the password string it self but
          the hash of the password) or enable secret cisco123 (notice above is the password
          string it self)
          Page 68
          Type 7 this mean the password will be encrypted when router store it in Run/Start Files
          using Vigenere cipher which any website with type7 reverser can crack it in less than
          one second command : ena password cisco123 service password-encryption
          Type 8
          this mean the password will be encrypted when router store it in Run/Start Files using
          PBKDF2-SHA-256
          starting from IOS 15.3(3).
          Password-Based Key Derivation Function 2 (PBKDF2) with Secure Hash Algorithm, 26-
          bits (SHA-256) as the hashing algorithm
          Example : R1(config)#enable algorithm-type sha256 secret cisco
          R1(config)#do sh run | i enable
          enable secret 8
          $8$mTj4RZG8N9ZDOk$elY/asfm8kD3iDmkBe3hD2r4xcA/0oWS5V3os.O91u.
          Example : R1(config)# username yasser algorithm-type sha256 secret cisco
          R1# show running-config | inc username
          username yasser secret 8
          $8$dsYGNam3K1SIJO$7nv/35M/qr6t.dVc7UY9zrJDWRVqncHub1PE9UlMQFs
          Type 9
          this means the password will be encrypted when router store it in Run/Start Files using
          scrypt as the hashing algorithm.
          starting from IOS 15.3(3)
          Example : R1(config)#ena algorithm-type scrypt secret cisco
          R1(config)#do sh run | i enable
          enable secret 9
          $9$WnArItcQHW/uuE$x5WTLbu7PbzGDuv0fSwGKS/KURsy5a3WCQckmJp0MbE
          Example : R1(config)# username demo9 algorithm-type scrypt secret cisco
          R1# show running-config | inc username
          username demo9 secret 9
          $9$nhEmQVczB7dqsO$X.HsgL6x1il0RxkOSSvyQYwucySCt7qFm4v7pqCxkKM
          Important Notes:
          1-If you configure type 8 or type 9 passwords and then downgrade to a release that
          does not support type 8 and type 9 passwords, you must configure the type 5
          passwords before downgrading. If not, you are locked out of the device and a password
          recovery is required.
          Page 69
          2-Starting from IOS 15.3(3)The 4 keyword was deprecated and support for type 8 and
          type 9 algorithms were added and The warning message for removal of support for the
          type 4 algorithm was added tect privileged EXEC mode through policies requiring the
          'enabling secret' setting, which enforces a one-way cryptographic hash (MD5).
        level: Level 1
        rationale: |-
          Requiring the enable secret setting protects privileged EXEC mode. By default, a strong
          password is not required, a user can just press the Enter key at the Password prompt to
          start privileged mode. The enable password command causes the device to enforce use
          of a password to access privileged mode. Enable secrets use a one-way cryptographic
          hash (MD5). This is preferred to Level 7 enable passwords that use a weak, well-
          known, and easily reversible encryption algorithm.
        remediation: enable secret 9 {ENABLE_SECRET_PASSWORD}
        titre: 1.4.1
        titre_texte: Set 'password' for 'enable secret'
      1.4.2:
        audit: sh run | incl service password-encryption
        automated_or_manual: Automated
        commande: service password-encryption
        default_value: null
        description: |-
          When password encryption is enabled, the encrypted form of the passwords is
          displayed when a more system:running-config command is entered.
        impact: |-
          Organizations implementing 'service password-encryption' reduce the risk of
          unauthorized users learning clear text passwords to Cisco IOS configuration files.
          However, the algorithm used is not designed to withstand serious analysis and should
          be treated like clear-text.
        level: Level 1
        rationale: |-
          This requires passwords to be encrypted in the configuration file to prevent
          unauthorized users from learning the passwords just by reading the configuration. When
          not enabled, many of the device's passwords will be rendered in plain text in the
          configuration file. This service ensures passwords are rendered as encrypted strings
          preventing an attacker from easily determining the configured value.
        remediation: service password-encryption
        titre: 1.4.2
        titre_texte: Enable 'service password-encryption'
      1.4.3:
        audit: |-
          show run | incl username
          show snmp community
        automated_or_manual: Automated
        commande: username secret
        default_value: null
        description: |-
          Username secret password type 5 and enable secret password type 5 must be migrated
          to the stronger password type 8 or 9. IF a device is upgraded from IOS XE 16.9 or later
          the type 5 is auto converted to type 9.
          The username secret command provides an additional layer of security over the
          username password.
          If not in use, disable simple network management protocol (SNMP), read and write
          access.
        impact: |-
          Organizations implementing 'username secret' across their enterprise reduce the risk of
          unauthorized users gaining access to Cisco IOS devices by applying a MD5 hash and
          encrypting user passwords.
          Organizations not using SNMP should require all SNMP services to be disabled by
          running the 'no snmp-server' command.
        level: Level 1
        rationale: |-
          Default device configuration does not require strong user authentication potentially
          enabling unfettered access to an attacker that is able to reach the device. Creating a
          local account with an encrypted password enforces login authentication and provides a
          fallback authentication mechanism for configuration in a named method list in a situation
          where centralized authentication, authorization, and accounting services are
          unavailable. The following is the type of encryption the device will allow as of 15.3: Type
          0 this mean the password will not be encrypted when router store it in Run/Start Files
          command: enable password cisco123
          Type 4 this mean the password will be encrypted when router store it in Run/Start Files
          using SHA-256 which apps like Cain can crack but will take long time command :
          enable secret 4 Rv4kArhts7yA2xd8BD2YTVbts (notice above is not the password string
          it self but the hash of the password)
          this type is deprecated starting from IOS 15.3(3)
          Type 5 this mean the password will be encrypted when router store it in Run/Start Files
          using MD5 which apps like Cain can crack but will take long time command: enable
          secret 5 00271A5307542A02D22842 (notice above is not the password string it self but
          the hash of the password) or enable secret cisco123 (notice above is the password
          string it self)
          Type 7 this mean the password will be encrypted when router store it in Run/Start Files
          using Vigenere cipher which any website with type7 reverser can crack it in less than
          one second command : ena password cisco123 service password-encryption
          Type 8
          this mean the password will be encrypted when router store it in Run/Start Files using
          PBKDF2-SHA-256
          starting from IOS 15.3(3).
          Page 73
          Password-Based Key Derivation Function 2 (PBKDF2) with Secure Hash Algorithm, 26-
          bits (SHA-256) as the hashing algorithm
          Example :
          R1(config)#enable algorithm-type sha256 secret cisco
          R1(config)#do sh run | i enable
          enable secret 8
          $8$mTj4RZG8N9ZDOk$elY/asfm8kD3iDmkBe3hD2r4xcA/0oWS5V3os.O91u.
          Example :
          R1(config)# username yasser algorithm-type sha256 secret cisco
          R1# show running-config | inc username
          username yasser secret 8
          $8$dsYGNam3K1SIJO$7nv/35M/qr6t.dVc7UY9zrJDWRVqncHub1PE9UlMQFs
          Type 9
          this mean the password will be encrypted when router store it in Run/Start Files using
          scrypt as the hashing algorithm.
          starting from IOS 15.3(3)
          Example :
          R1(config)#ena algorithm-type scrypt secret cisco
          R1(config)#do sh run | i enable
          enable secret 9
          $9$WnArItcQHW/uuE$x5WTLbu7PbzGDuv0fSwGKS/KURsy5a3WCQckmJp0MbE
          Example :
          R1(config)# username demo9 algorithm-type scrypt secret cisco
          R1# show running-config | inc username
          username demo9 secret 9
          $9$nhEmQVczB7dqsO$X.HsgL6x1il0RxkOSSvyQYwucySCt7qFm4v7pqCxkKM
          Important Notes:
          1-If you configure type 8 or type 9 passwords and then downgrade to a release that
          does not support type 8 and type 9 passwords, you must configure the type 5
          passwords before downgrading. If not, you are locked out of the device and a password
          recovery is required.
          2-Starting from IOS 15.3(3)The 4 keyword was deprecated and support for type 8 and
          type 9 algorithms were added and The warning message for removal of support for the
          type 4 algorithm was added
          Page 74
          SNMP read access allows remote monitoring and management of the device.
        remediation: |-
          username {LOCAL_USERNAME} secret
          no snmp-server
        titre: 1.4.3
        titre_texte: Set 'username secret' for all local users
      1.5.2:
        audit: show snmp community
        automated_or_manual: Automated
        commande: private
        default_value: null
        description: An SNMP community string permits read-only access to all objects.
        impact: |-
          To reduce the risk of unauthorized access, Organizations should disable default, easy
          to guess, settings such as the 'private' setting for snmp-server community.
        level: Level 1
        rationale: |-
          The default community string "private" is well known. Using easy to guess, well known
          community string poses a threat that an attacker can effortlessly gain unauthorized
          access to the device.
        remediation: no snmp-server community {private}
        titre: 1.5.2
        titre_texte: Unset 'private' for 'snmp-server community'
      1.5.3:
        audit: |-
          show snmp community
          show run | incl snmp-server community
        automated_or_manual: Automated
        commande: public
        default_value: null
        description: |-
          An SNMP community string permits read-only access to all objects.
          Specifies read-write access. Authorized management stations can both retrieve and
          modify MIB objects.
        impact: |-
          To reduce the risk of unauthorized access, Organizations should disable default, easy
          to guess, settings such as the 'public' setting for snmp-server community.
          To reduce the risk of unauthorized access, Organizations should disable the SNMP
          'write' access for snmp-server community.
        level: Level 1
        rationale: |-
          The default community string "public" is well known. Using easy to guess, well known
          community string poses a threat that an attacker can effortlessly gain unauthorized
          access to the device.
          Enabling SNMP read-write enables remote management of the device. Unless
          absolutely necessary, do not allow simple network management protocol (SNMP) write
          access.
        remediation: |-
          no snmp-server community {public}
          no snmp-server community {write_community_string}
        titre: 1.5.3
        titre_texte: Unset 'public' for 'snmp-server community'
      1.5.5:
        audit: show run | incl snmp-server community
        automated_or_manual: Automated
        commande: snmp-server community
        default_value: null
        description: |-
          This feature specifies a list of IP addresses that are allowed to use the community string
          to gain access to the SNMP agent.
        impact: |-
          To reduce the risk of unauthorized access, Organizations should enable access control
          lists for all snmp-server communities and restrict the access to appropriate trusted
          management zones. If possible, implement SNMPv3 to apply authentication,
          authorization, and data privatization (encryption) for additional benefits to the
          organization.
        level: Level 1
        rationale: |-
          If ACLs are not applied, then anyone with a valid SNMP community string can
          potentially monitor and manage the router. An ACL should be defined and applied for all
          SNMP access to limit access to a small number of authorized management stations
          segmented in a trusted management zone. If possible, use SNMPv3 which uses
          authentication, authorization, and data privatization (encryption).
        remediation: snmp-server community <community_string> ro
        titre: 1.5.5
        titre_texte: Set the ACL for each 'snmp-server community'
      1.5.6:
        audit: sh ip access-list <snmp_acl_number>
        automated_or_manual: Automated
        commande: access-list
        default_value: null
        description: |-
          You can use access lists to control the transmission of packets on an interface, control
          Simple Network Management Protocol (SNMP) access, and restrict the contents of
          routing updates. The Cisco IOS software stops checking the extended access list after a
          match occurs.
        impact: null
        level: Level 1
        rationale: |-
          SNMP ACLs control what addresses are authorized to manage and monitor the device
          via SNMP. If ACLs are not applied, then anyone with a valid SNMP community string
          may monitor and manage the router. An ACL should be defined and applied for all
          SNMP community strings to limit access to a small number of authorized management
          stations segmented in a trusted management zone.
        remediation: |-
          access-list <snmp_acl_number> permit
          access-list deny any log
        titre: 1.5.6
        titre_texte: Create an 'access-list' for use with SNMP
      1.5.7:
        audit: show run | incl snmp-server
        automated_or_manual: Automated
        commande: snmp-server host
        default_value: null
        description: SNMP notifications can be sent as traps to authorized management systems.
        impact: |-
          Organizations using SNMP should restrict sending SNMP messages only to explicitly
          named systems to reduce unauthorized access.
        level: Level 1
        rationale: |-
          If SNMP is enabled for device management and device alerts are required, then ensure
          the device is configured to submit traps only to authorize management systems.
        remediation: snmp-server host {ip_address} {trap_community_string}
        titre: 1.5.7
        titre_texte: Set 'snmp-server host' when using SNMP
      1.5.8:
        audit: |-
          show run | incl snmp-server
          show snmp group
          show snmp user
        automated_or_manual: Automated
        commande: snmp-server enable traps snmp
        default_value: null
        description: |-
          SNMP notifications can be sent as traps to authorized management systems.
          Specifies authentication of a packet with encryption when using SNMPv3
          Specify the use of a minimum of 128-bit AES algorithm for encryption when using
          SNMPv3.
        impact: |-
          Organizations using SNMP should restrict trap types only to explicitly named traps to
          reduce unintended traffic. Enabling SNMP traps without specifying trap type will enable
          all SNMP trap types.
          Organizations using SNMP can significantly reduce the risks of unauthorized access by
          using the 'snmp-server group v3 priv' setting to encrypt messages in transit.
          Organizations using SNMP can significantly reduce the risks of unauthorized access by
          using the 'snmp-server user' setting with appropriate authentication and privacy
          protocols to encrypt messages in transit.
        level: Level 1
        rationale: |-
          SNMP has the ability to submit traps .
          SNMPv3 provides much improved security over previous versions by offering options
          for Authentication and Encryption of messages. When configuring a user for SNMPv3
          you have the option of using a range of encryption schemes, or no encryption at all, to
          protect messages in transit. AES128 is the minimum strength encryption method that
          should be deployed.
          SNMPv3 provides much improved security over previous versions by offering options
          for Authentication and Encryption of messages. When configuring a user for SNMPv3
          you have the option of using a range of encryption schemes, or no encryption at all, to
          protect messages in transit. AES128 is the minimum strength encryption method that
          should be deployed.
        remediation: |-
          snmp-server enable traps snmp authentication linkup linkdown
          snmp-server group {group_name} v3 priv
          snmp-server user {user_name} {group_name} v3 auth sha
        titre: 1.5.8
        titre_texte: Set 'snmp-server enable traps snmp'
      1.6.1:
        audit: show running-config | inc login block
        automated_or_manual: Automated
        commande: null
        default_value: null
        description: |-
          All login parameters are disabled by default. You must issue the login block-for
          command, which enables default login functionality, before using any other login
          commands. After the login block-for command is enabled, the following defaults are
          enforced:
          A default login delay of one second
          All login attempts made via Telnet or SSH are denied during the quiet period; that is, no
          ACLs are exempt from the login period until the login quiet-mode access-class
          command is issued.
        impact: null
        level: Level 2
        rationale: |-
          If the configured number of connection attempts fail within a specified time period, the
          Cisco device will not accept any additional connections for a “quiet period.” (Hosts that
          are permitted by a predefined access-control list [ACL] are excluded from the quiet
          period.)
          The number of failed connection attempts that trigger the quiet period can be specified
          via the new global configuration mode command login block-for . The predefined ACL
          that is excluded from the quiet period can be specified via the new global configuration
          mode command login quiet-mode access-class .
        remediation: |-
          (config)login block-for {**seconds**} attempts {**tries**} within
          (config)login quiet-mode access class {**acl-name | acl-number**}
          (config)login delay {**seconds**}
        titre: 1.6.1
        titre_texte: Configure Login Block
      1.6.2:
        audit: show auto secure config
        automated_or_manual: Automated
        commande: null
        default_value: null
        description: |-
          The AutoSecure feature secures a router by using a single CLI command to disable
          common IP services that can be exploited for network attacks, enable IP services and
          features that can aid in the defense of a network when under attack, and simplify and
          harden the security configuration of the router.
        impact: |-
          After enabling this feature, the following options in which to secure access to the router
          are available to the user:
          If a text banner does not exist, users are prompted to add a banner. This feature
          provides the following sample banner:
          Authorized access only This system is the property of ABC Enterprise Disconnect
          IMMEDIATELY if you are not an authorized user! Contact abc@xyz.com +99 876
          543210 for help. The login and password (preferably a secret password, if supported)
          are configured on the console, AUX, vty, and tty lines. The transport input and transport
          output commands are also configured on all of these lines. (Telnet and secure shell
          (SSH) are the only valid transport methods.) The exec-timeout command is configured
          on the console and AUX as 10.
          When the image on the device is a crypto image, AutoSecure enables SSH and secure
          copy (SCP) for access and file transfer to and from the router. The timeout seconds and
          authentication-retries integer options for the ip ssh command are configured to a
          minimum number. (Telnet and FTP are not affected by this operation and remain
          operational.)
          If the AutoSecure user specifies that their device does not use Simple Network
          Management Protocol (SNMP), one of the following functions occur: In interactive
          mode, the user is asked whether to disable SNMP regardless of the values of the
          community strings, which act like passwords to regulate access to the agent on the
          router. In non-interact mode, SNMP is disabled if the community string is “public” or
          “private.”
        level: Level 2
        rationale: |-
          After enabling this feature (through the auto secure command), the following global
          services are disabled on the router without prompting the user:
          Finger--Collects information about the system (reconnaissance) before an attack. If
          enabled, the information can leave your device vulnerable to attacks.
          PAD--Enables all packet assembler and disassembler (PAD) commands and
          connections between PAD devices and access servers. If enabled, it can leave your
          device vulnerable to attacks.
          Small Servers--Causes TCP and User Datagram Protocol (UDP) diagnostic port
          attacks: a sender transmits a volume of fake requests for UDP diagnostic services on
          the router, consuming all CPU resources.
          Bootp Server--Bootp is an insecure protocol that can be exploited for an attack.
          HTTP Server--Without secure-http or authentication embedded in the HTTP server with
          an associated ACL, the HTTP server is insecure and can be exploited for an attack. (If
          you must enable the HTTP server, you are prompted for the proper authentication or
          access list.) Identification Service--An insecure protocol, defined in RFC 1413, that
          allows one to query a TCP port for identification. An attacker can access private
          information about the user from the ID server.
          CDP--If a large number of Cisco Discovery Protocol (CDP) packets are sent to the
          router, the available memory of the router can be consumed, causing the router to
          crash. NTP--Without authentication or access-control, Network Time Protocol (NTP) is
          insecure and can be used by an attacker to send NTP packets to crash or overload the
          router. (If you want to turn on NTP, you must configure NTP authentication using
          Message Digest 5 (MD5) and the ntp access-group command. If NTP is enabled
          globally, disable it on all interfaces on which it is not needed.)
          Source Routing--Provided only for debugging purposes, so source routing should be
          disabled in all other cases. Otherwise, packets may slip away from some of the access
          control mechanisms that they should have gone through.
          Page 100
        remediation: |-
          (config)auto secure {management | forwarding} {no-interact | full}
          (config)enable password {password | [encryption-type ] encrypted-
          security authentication failure rate {**threshold-rate**} log
        titre: 1.6.2
        titre_texte: AutoSecure
      1.6.3:
        audit: show kerberos cred
        automated_or_manual: Automated
        commande: null
        default_value: null
        description: |-
          Kerberos is a secret-key network authentication protocol, developed at the
          Massachusetts Institute of Technology (MIT), that uses the Data Encryption Standard
          (DES) cryptographic algorithm for encryption and authentication. Kerberos was
          designed to authenticate requests for network resources. Kerberos, like other secret-
          key systems, is based on the concept of a trusted third party that performs secure
          verification of users and services. In the Kerberos protocol, this trusted third party is
          called the key distribution center (KDC).
          The primary use of Kerberos is to verify that users and the network services they use
          are really who and what they claim to be. To accomplish this, a trusted Kerberos server
          issues tickets to users. These tickets, which have a limited lifespan, are stored in a
          user’s credential cache and can be used in place of the standard username-and-
          password authentication mechanism.
          The Kerberos credential scheme embodies a concept called “single logon.” This
          process requires authenticating a user once, and then allows secure authentication
          (without encrypting another password) wherever that user’s credential is accepted.
          Cisco IOS XE software includes Kerberos 5 support, which allows organizations already
          deploying Kerberos 5 to use the same Kerberos authentication database on their
          routers that they are already using on their other network hosts (such as UNIX servers
          and PCs).
          The following network services are supported by the Kerberos authentication
          capabilities in Cisco IOS XE software:
          Telnet
          rlogin
          rsh
          rcp
        impact: |-
          A remote user who successfully initiates a PPP session and authenticates to the
          boundary router is inside the firewall but still must authenticate to the KDC directly
          before being allowed to access network services. This is because the TGT issued by
          the KDC is stored on the router and is not useful for additional authentication unless the
          user physically logs on to the router.
        level: Level 2
        rationale: |-
          Authenticating to the Boundary Router This section describes the first layer of security
          that remote users must pass through when they attempt to access a network. The first
          step in the Kerberos authentication process is for users to authenticate themselves to
          the boundary router. The following process describes how users authenticate to a
          boundary router:
          Page 103
        remediation: |-
          ank {username@REALM}
          ank {username/instance@REALM
          ark {SERVICE/HOSTNAME@REALM}
          (config)kerberos local-realm {kerberos-realm}
          (config)kerberos server {kerberos-realm {hostname | ip-address}}
          (config)kerberos realm {dns-domain | host} {kerberos-realm}
        titre: 1.6.3
        titre_texte: Configuring Kerberos
      1.6.4:
        audit: show ip admission
        automated_or_manual: Automated
        commande: null
        default_value: null
        description: |-
          Web-based authentication is an ingress-only feature.
          You can configure web-based authentication only on access ports. Web-based
          authentication is not supported on trunk ports, EtherChannel member ports, or dynamic
          trunk ports.
          External web authentication, where the switch redirects a client to a particular host or
          web server for displaying login message, is not supported.
          You cannot authenticate hosts on Layer 2 interfaces with static ARP cache assignment.
          These hosts are not detected by the web-based authentication feature because they do
          not send ARP messages.
          You must enable SISF-Based device tracking to use web-based authentication. By
          default, SISF-Based device tracking is disabled on a switch.
          You must configure at least one IP address to run the switch HTTP server. You must
          also configure routes to reach each host IP address. The HTTP server sends the HTTP
          login page to the host.
          Hosts that are more than one hop away might experience traffic disruption if an STP
          topology change results in the host traffic arriving on a different port. This occurs
          because the ARP and DHCP updates might not be sent after a Layer 2 (STP) topology
          change.
          Web-based authentication does not support VLAN assignment as a downloadable-host
          policy.
          Web-based authentication and Network Edge Access Topology (NEAT) are mutually
          exclusive. You cannot use web-based authentication when NEAT is enabled on an
          interface, and you cannot use NEAT when web-based authentication is running on an
          interface.
          Identify the following RADIUS security server settings that will be used while configuring
          switch-to-RADIUS-server communication:
          Host name
          Host IP address
          Host name and specific UDP port numbers
          IP address and specific UDP port numbers
          Page 105
        impact: null
        level: Level 2
        rationale: |-
          The combination of the IP address and UDP port number creates a unique identifier,
          that enables RADIUS requests to be sent to multiple UDP ports on a server at the same
          IP address. If two different host entries on the same RADIUS server are configured for
          the same service (for example, authentication) the second host entry that is configured
          functions as the failover backup to the first one. The RADIUS host entries are chosen in
          the order that they were configured.
        remediation: |-
          (config)ip admission name {Name} proxy http
          (config)interface {type slot/port}
          (config)ip access-group {Name}
          (config)ip admission name
          (config)ip admission max-login-attempts {number}
        titre: 1.6.4
        titre_texte: Configure Web interface
      2.1.1.1.1:
        audit: sh run | incl hostname
        automated_or_manual: Automated
        commande: hostname
        default_value: null
        description: The hostname is used in prompts and default configuration filenames.
        impact: |-
          Organizations should plan the enterprise network and identify an appropriate host name
          for each router.
        level: Level 1
        rationale: The domain name is prerequisite for setting up SSH.
        remediation: hostname {router_name}
        titre: 2.1.1.1.1
        titre_texte: Set the 'hostname'
      2.1.1.1.2:
        audit: |-
          sh run | incl domain-name
          sh crypto key mypubkey rsa
          sh ip ssh
          sh ip ssh
        automated_or_manual: Automated
        commande: ip domain-name
        default_value: null
        description: |-
          Define a default domain name that the Cisco IOS software uses to complete unqualified
          hostnames
          Use this command to generate RSA key pairs for your Cisco device.
          RSA keys are generated in pairs--one public RSA key and one private RSA key.
          The time interval that the router waits for the SSH client to respond before
          disconnecting an uncompleted login attempt.
          The number of retries before the SSH login session disconnects.
        impact: |-
          Organizations should plan the enterprise network and identify an appropriate domain
          name for the router.
          Organizations should plan and implement enterprise network cryptography and
          generate an appropriate RSA key pairs, such as 'modulus', greater than or equal to
          2048.
          Organizations should implement a security policy requiring minimum timeout settings for
          all network administrators and enforce the policy through the 'ip ssh timeout' command.
          Organizations should implement a security policy limiting the number of authentication
          attempts for network administrators and enforce the policy through the 'ip ssh
          authentication-retries' command.
        level: Level 1
        rationale: |-
          The domain name is a prerequisite for setting up SSH.
          An RSA key pair is a prerequisite for setting up SSH and should be at least 2048 bits.
          NOTE: IOS does NOT display the modulus bit value in the Audit Procedure.
          This reduces the risk of an administrator leaving an authenticated session logged in for
          an extended period of time.
          This limits the number of times an unauthorized user can attempt a password without
          having to establish a new SSH login attempt. This reduces the potential for success
          during online brute force attacks by limiting the number of login attempts per SSH
          connection.
        remediation: |-
          ip domain-name {domain-name}
          crypto key generate rsa general-keys modulus 2048
          ip ssh time-out [60]
          ip ssh authentication-retries [3]
        titre: 2.1.1.1.2
        titre_texte: Set the 'ip domain-name'
      2.1.1.2:
        audit: sh ip ssh
        automated_or_manual: Automated
        commande: ip ssh version
        default_value: null
        description: Specify the version of Secure Shell (SSH) to be run on a router
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy to review their current protocols to ensure the most secure protocol versions are
          in use.
        level: Level 1
        rationale: |-
          SSH Version 1 has been subject to a number of serious vulnerabilities and is no longer
          considered to be a secure protocol, resulting in the adoption of SSH Version 2 as an
          Internet Standard in 2006.
          Cisco routers support both versions, but due to the weakness of SSH Version 1 only the
          later standard should be used.
        remediation: ip ssh version 2
        titre: 2.1.1.2
        titre_texte: Set version 2 for 'ip ssh version'
      2.1.2:
        audit: show cdp
        automated_or_manual: Automated
        commande: no cdp run
        default_value: null
        description: Disable Cisco Discovery Protocol (CDP) service at device level.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting network protocols and explicitly require disabling all insecure or
          unnecessary protocols.
        level: Level 1
        rationale: |-
          The Cisco Discovery Protocol is a proprietary protocol that Cisco devices use to identify
          each other on a LAN segment. It is useful only in network monitoring and
          troubleshooting situations but is considered a security risk because of the amount of
          information provided from queries. In addition, there have been published denial-of-
          service (DoS) attacks that use CDP. CDP should be completely disabled unless
          necessary.
        remediation: no cdp run
        titre: 2.1.2
        titre_texte: Set 'no cdp run'
      2.1.3:
        audit: show run | incl bootp
        automated_or_manual: Automated
        commande: no ip bootp server
        default_value: null
        description: Disable the Bootstrap Protocol (BOOTP) service on your routing device.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting network protocols and explicitly require disabling all insecure or
          unnecessary protocols such as 'ip bootp server'.
        level: Level 1
        rationale: |-
          BootP allows a router to issue IP addresses. This should be disabled unless there is a
          specific requirement.
        remediation: ip dhcp bootp ignore
        titre: 2.1.3
        titre_texte: Set 'no ip bootp server'
      2.1.4:
        audit: show run | incl dhcp
        automated_or_manual: Automated
        commande: no service dhcp
        default_value: null
        description: |-
          Disable the Dynamic Host Configuration Protocol (DHCP) server and relay agent
          features on your router.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting network protocols and explicitly require disabling all insecure or
          unnecessary protocols such as the Dynamic Host Configuration Protocol (DHCP).
        level: Level 1
        rationale: |-
          The DHCP server supplies automatic configuration parameters, such as dynamic IP
          address, to requesting systems. A dedicated server located in a secured management
          zone should be used to provide DHCP services instead. Attackers can potentially be
          used for denial-of-service (DoS) attacks.
        remediation: <strong>no service dhcp</strong>
        titre: 2.1.4
        titre_texte: Set 'no service dhcp'
      2.1.5:
        audit: show run | incl identd
        automated_or_manual: Automated
        commande: no ip identd
        default_value: null
        description: Disable the identification (identd) server.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting network protocols and explicitly require disabling all insecure or
          unnecessary protocols such as the identification protocol (identd).
        level: Level 1
        rationale: |-
          Identification protocol enables identifying a user's transmission control protocol (TCP)
          session. This information disclosure could potentially provide an attacker with
          information about users.
        remediation: no ip identd
        titre: 2.1.5
        titre_texte: Set 'no ip identd'
      2.1.6:
        audit: show run | incl service tcp
        automated_or_manual: Automated
        commande: service tcp-keepalives-in
        default_value: null
        description: Generate keepalive packets on idle incoming network connections.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting how long to allow terminated sessions and enforce this policy through
          the use of 'tcp-keepalives-in' command.
        level: Level 1
        rationale: |-
          Stale connections use resources and could potentially be hijacked to gain illegitimate
          access. The TCP keepalives-in service generates keepalive packets on idle incoming
          network connections (initiated by remote host). This service allows the device to detect
          when the remote host fails and drop the session. If enabled, keepalives are sent once
          per minute on idle connections. The connection is closed within five minutes if no
          keepalives are received or immediately if the host replies with a reset packet.
        remediation: service tcp-keepalives-in
        titre: 2.1.6
        titre_texte: Set 'service tcp-keepalives-in'
      2.1.7:
        audit: show run | incl service tcp
        automated_or_manual: Automated
        commande: service tcp-keepalives-out
        default_value: null
        description: Generate keepalive packets on idle outgoing network connections.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting how long to allow terminated sessions and enforce this policy through
          the use of 'tcp-keepalives-out' command.
        level: Level 1
        rationale: |-
          Stale connections use resources and could potentially be hijacked to gain illegitimate
          access. The TCP keepalives-in service generates keepalive packets on idle incoming
          network connections (initiated by remote host). This service allows the device to detect
          when the remote host fails and drop the session. If enabled, keepalives are sent once
          per minute on idle connections. The closes connection is closed within five minutes if no
          keepalives are received or immediately if the host replies with a reset packet.
        remediation: service tcp-keepalives-out
        titre: 2.1.7
        titre_texte: Set 'service tcp-keepalives-out'
      2.1.8:
        audit: show run | incl service pad
        automated_or_manual: Automated
        commande: no service pad
        default_value: null
        description: Disable X.25 Packet Assembler/Disassembler (PAD) service.
        impact: |-
          To reduce the risk of unauthorized access, organizations should implement a security
          policy restricting unnecessary services such as the 'PAD' service.
        level: Level 1
        rationale: |-
          If the PAD service is not necessary, disable the service to prevent intruders from
          accessing the X.25 PAD command set on the router.
        remediation: no service pad
        titre: 2.1.8
        titre_texte: Set 'no service pad'
      2.2.1:
        audit: show run | i logging host
        automated_or_manual: Automated
        commande: logging enable
        default_value: null
        description: Enable logging of system messages.
        impact: |-
          Enabling the Cisco IOS 'logging enable' command enforces the monitoring of
          technology risks for the organizations' network devices.
        level: Level 1
        rationale: |-
          Logging provides a chronological record of activities on the Cisco device and allows
          monitoring of both operational and security related events.
        remediation: |-
          archive
          log config
          logging enable
          end
        titre: 2.2.1
        titre_texte: Set 'logging enable'
      2.2.2:
        audit: show run | incl logging buffered
        automated_or_manual: Automated
        commande: buffer size
        default_value: null
        description: Enable system message logging to a local buffer.
        impact: |-
          Data forensics is effective for managing technology risks and an organization can
          enforce such policies by enabling the 'logging buffered' command.
        level: Level 1
        rationale: |-
          The device can copy and store log messages to an internal memory buffer. The
          buffered data is available only from a router exec or enabled exec session. This form of
          logging is useful for debugging and monitoring when logged in to a router.
        remediation: logging buffered [log_buffer_size]
        titre: 2.2.2
        titre_texte: Set 'buffer size' for 'logging buffered'
      2.2.3:
        audit: show run | incl logging console
        automated_or_manual: Automated
        commande: logging console critical
        default_value: null
        description: |-
          Verify logging to device console is enabled and limited to a rational severity level to
          avoid impacting system performance and management.
        impact: |-
          Logging critical messages at the console is important for an organization managing
          technology risk. The 'logging console' command should capture appropriate severity
          messages to be effective.
        level: Level 1
        rationale: |-
          This configuration determines the severity of messages that will generate console
          messages. Logging to console should be limited only to those messages required for
          immediate troubleshooting while logged into the device. This form of logging is not
          persistent; messages printed to the console are not stored by the router. Console
          logging is handy for operators when they use the console.
        remediation: logging console critical
        titre: 2.2.3
        titre_texte: Set 'logging console critical'
      2.2.4:
        audit: sh log | incl logging host
        automated_or_manual: Automated
        commande: logging host
        default_value: null
        description: Log system messages and debug output to a remote host.
        impact: |-
          Logging is an important process for an organization managing technology risk. The
          'logging host' command sets the IP address of the logging host and enforces the logging
          process.
        level: Level 1
        rationale: |-
          Cisco routers can send their log messages to a Unix-style Syslog service. A syslog
          service simply accepts messages and stores them in files or prints them according to a
          simple configuration file. This form of logging is best because it can provide protected
          long-term storage for logs (the devices internal logging buffer has limited capacity to
          store events.) In addition, logging to an external system is highly recommended or
          required by most security standards. If desired or required by policy, law and/or
          regulation, enable a second syslog server for redundancy.
        remediation: logging host {syslog_server}
        titre: 2.2.4
        titre_texte: Set IP address for 'logging host'
      2.2.5:
        audit: sh log | incl trap logging
        automated_or_manual: Automated
        commande: logging trap informational
        default_value: null
        description: Limit messages logged to the syslog servers based on severity level informational.
        impact: |-
          Logging is an important process for an organization managing technology risk. The
          'logging trap' command sets the severity of messages and enforces the logging
          process.
        level: Level 1
        rationale: |-
          This determines the severity of messages that will generate simple network
          management protocol (SNMP) trap and or syslog messages. This setting should be set
          to either "debugging" (7) or "informational" (6), but no lower.
        remediation: logging trap informational
        titre: 2.2.5
        titre_texte: Set 'logging trap informational'
      2.2.6:
        audit: sh run | incl service timestamps
        automated_or_manual: Automated
        commande: service timestamps debug datetime
        default_value: null
        description: |-
          Configure the system to apply a time stamp to debugging messages or system logging
          messages
        impact: |-
          Logging is an important process for an organization managing technology risk and
          establishing a timeline of events is critical. The 'service timestamps' command sets the
          date and time on entries sent to the logging host and enforces the logging process.
        level: Level 1
        rationale: |-
          Including timestamps in log messages allows correlating events and tracing network
          attacks across multiple devices. Enabling service timestamp to mark the time log
          messages were generated simplifies obtaining a holistic view of events enabling faster
          troubleshooting of issues or attacks.
        remediation: service timestamps debug datetime {msec} show-
        titre: 2.2.6
        titre_texte: Set 'service timestamps debug datetime'
      2.2.7:
        audit: sh run | incl logging source
        automated_or_manual: Automated
        commande: logging source interface
        default_value: null
        description: Specify the source IPv4 or IPv6 address of system logging packets
        impact: |-
          Logging is an important process for an organization managing technology risk and
          establishing a consistent source of messages for the logging host is critical. The 'logging
          source interface loopback' command sets a consistent IP address to send messages to
          the logging host and enforces the logging process.
        level: Level 1
        rationale: |-
          This is required so that the router sends log messages to the logging server from a
          consistent IP address.
        remediation: logging source-interface loopback
        titre: 2.2.7
        titre_texte: Set 'logging source interface'
      2.2.8:
        audit: sho running-config | inc login on-
        automated_or_manual: Automated
        commande: login success/failure logging
        default_value: null
        description: |-
          Without generating audit records that are specific to the security and mission needs of
          the organization, it would be difficult to establish, correlate, and investigate the events
          relating to an incident or identify those responsible for one.
        impact: null
        level: Level 2
        rationale: |-
          Audit records can be generated from various components within the information system
          (e.g., module or policy filter).
        remediation: |-
          login on-failure log
          login on-success log
          end
        titre: 2.2.8
        titre_texte: Set 'login success/failure logging'
      2.3.1.1:
        audit: show run | include ntp
        automated_or_manual: Automated
        commande: ntp authenticate
        default_value: null
        description: Enable NTP authentication.
        impact: |-
          Organizations should establish three Network Time Protocol (NTP) hosts to set
          consistent time across the enterprise. Enabling the 'ntp authenticate' command enforces
          authentication between NTP hosts.
        level: Level 2
        rationale: |-
          Using authenticated NTP ensures the Cisco device only permits time updates from
          authorized NTP servers.
        remediation: ntp authenticate
        titre: 2.3.1.1
        titre_texte: Set 'ntp authenticate'
      2.3.1.2:
        audit: show run | include ntp authentication-key
        automated_or_manual: Automated
        commande: ntp authentication-key
        default_value: null
        description: Define an authentication key for Network Time Protocol (NTP).
        impact: |-
          Organizations should establish three Network Time Protocol (NTP) hosts to set
          consistent time across the enterprise. Enabling the 'ntp authentication-key' command
          enforces encrypted authentication between NTP hosts.
        level: Level 2
        rationale: |-
          Using an authentication key provides a higher degree of security as only authenticated
          NTP servers will be able to update time for the Cisco device.
        remediation: ntp authentication-key {ntp_key_id} md5 {ntp_key_hash}
        titre: 2.3.1.2
        titre_texte: Set 'ntp authentication-key'
      2.3.1.3:
        audit: show run | include ntp trusted-key
        automated_or_manual: Automated
        commande: ntp trusted-key
        default_value: null
        description: |-
          Ensure you authenticate the identity of a system to which Network Time Protocol (NTP)
          will synchronize
        impact: |-
          Organizations should establish three Network Time Protocol (NTP) hosts to set
          consistent time across the enterprise. Enabling the 'ntp trusted-key' command enforces
          encrypted authentication between NTP hosts.
        level: Level 2
        rationale: |-
          This authentication function provides protection against accidentally synchronizing the
          system to another system that is not trusted, because the other system must know the
          correct authentication key.
        remediation: ntp trusted-key {ntp_key_id}
        titre: 2.3.1.3
        titre_texte: Set the 'ntp trusted-key'
      2.3.1.4:
        audit: show run | include ntp server
        automated_or_manual: Automated
        commande: key
        default_value: null
        description: Specifies the authentication key for NTP.
        impact: |-
          Organizations should establish three Network Time Protocol (NTP) hosts to set
          consistent time across the enterprise. Enabling the 'ntp server key' command enforces
          encrypted authentication between NTP hosts.
        level: Level 2
        rationale: |-
          This authentication feature provides protection against accidentally synchronizing the
          ntp system to another system that is not trusted, because the other system must know
          the correct authentication key.
        remediation: ntp server {ntp-server_ip_address}{key
        titre: 2.3.1.4
        titre_texte: Set 'key' for each 'ntp server'
      2.3.2:
        audit: sh ntp associations
        automated_or_manual: Automated
        commande: ip address
        default_value: null
        description: |-
          Use this command if you want to allow the system to synchronize the system software
          clock with the specified NTP server.
        impact: |-
          Organizations should establish multiple Network Time Protocol (NTP) hosts to set
          consistent time across the enterprise. Enabling the 'ntp server ip address' enforces
          encrypted authentication between NTP hosts.
        level: Level 1
        rationale: |-
          To ensure that the time on your Cisco router is consistent with other devices in your
          network, at least two (and preferably at least three) NTP Server/s external to the router
          should be configured.
          Ensure you also configure consistent timezone and daylight savings time setting for all
          devices. For simplicity, the default of Coordinated Universal Time (UTC).
        remediation: |-
          ntp server {ntp-server_ip_address}
          ntp server {ntp server vrf [vrf name] ip address}
        titre: 2.3.2
        titre_texte: Set 'ip address' for 'ntp server'
      2.4.1:
        audit: sh ip int brief | incl Loopback
        automated_or_manual: Automated
        commande: interface loopback
        default_value: null
        description: Configure a single loopback interface.
        impact: |-
          Organizations should plan and establish 'loopback interfaces' for the enterprise network.
          Loopback interfaces enable critical network information such as OSPF Router IDs and
          provide termination points for routing protocol sessions.
        level: Level 2
        rationale: |-
          Software-only loopback interface that emulates an interface that is always up. It is a
          virtual interface supported on all platforms.
          Alternate loopback addresses create a potential for abuse, mis-configuration, and
          inconsistencies. Additional loopback interfaces must be documented and approved prior
          to use by local security personnel.
        remediation: |-
          interface loopback <number>
          ip address <loopback_ip_address>
        titre: 2.4.1
        titre_texte: Create a single 'interface loopback'
      2.4.2:
        audit: sh run | incl tacacs source | radius source
        automated_or_manual: Automated
        commande: source-interface
        default_value: null
        description: Force AAA to use the IP address of a specified interface for all outgoing AAA packets
        impact: |-
          Organizations should design and implement authentication, authorization, and
          accounting (AAA) services for effective monitoring of enterprise network devices.
          Binding AAA services to the source-interface loopback enables these services.
        level: Level 2
        rationale: |-
          This is required so that the AAA server (RADIUS or TACACS+) can easily identify
          routers and authenticate requests by their IP address.
        remediation: |-
          ip radius source-interface loopback
          aaa group server tacacs+ {group_name} hostname(config-sg-
          ip tacacs source-interface {loopback_interface_number}
        titre: 2.4.2
        titre_texte: Set AAA 'source-interface'
      2.4.3:
        audit: |-
          sh run | incl ntp source
          sh run | incl tftp source-interface
        automated_or_manual: Automated
        commande: ntp source
        default_value: null
        description: |-
          Use a particular source address in Network Time Protocol (NTP) packets.
          Specify the IP address of an interface as the source address for TFTP connections.
        impact: |-
          Organizations should plan and implement network time protocol (NTP) services to
          establish official time for all enterprise network devices. Setting 'ntp source loopback'
          enforces the proper IP address for NTP services.
          Organizations should plan and implement trivial file transfer protocol (TFTP) services in
          the enterprise by setting 'tftp source-interface loopback', which enables the TFTP
          servers to identify routers and authenticate requests by IP address.
        level: Level 2
        rationale: |-
          Set the source address to be used when sending NTP traffic. This may be required if
          the NTP servers you peer with filter based on IP address.
          This is required so that the TFTP servers can easily identify routers and authenticate
          requests by their IP address.
        remediation: |-
          ntp source loopback {loopback_interface_number}
          ip tftp source-interface loopback
        titre: 2.4.3
        titre_texte: Set 'ntp source' to Loopback Interface
      3.1.1:
        audit: sh run | incl ip source-route
        automated_or_manual: Automated
        commande: no ip source-route
        default_value: null
        description: Disable the handling of IP datagrams with source routing header options.
        impact: |-
          Organizations should plan and implement network policies to ensure unnecessary
          services are explicitly disabled. The 'ip source-route' feature has been used in several
          attacks and should be disabled.
        level: Level 1
        rationale: |-
          Source routing is a feature of IP whereby individual packets can specify routes. This
          feature is used in several kinds of attacks. Cisco routers normally accept and process
          source routes. Unless a network depends on source routing, it should be disabled.
        remediation: no ip source-route
        titre: 3.1.1
        titre_texte: Set 'no ip source-route'
      3.1.2:
        audit: sh ip int {interface} | incl proxy-arp
        automated_or_manual: Automated
        commande: no ip proxy-arp
        default_value: null
        description: Disable proxy ARP on all interfaces.
        impact: |-
          Organizations should plan and implement network policies to ensure unnecessary
          services are explicitly disabled. The 'ip proxy-arp' feature effectively breaks the LAN
          security perimeter and should be disabled.
        level: Level 2
        rationale: |-
          Address Resolution Protocol (ARP) provides resolution between IP and MAC
          Addresses (or other Network and Link Layer addresses on none IP networks) within a
          Layer 2 network.
          Proxy ARP is a service where a device connected to one network (in this case the Cisco
          router) answers ARP Requests which are addressed to a host on another network,
          replying with its own MAC Address and forwarding the traffic on to the intended host.
          Sometimes used for extending broadcast domains across WAN links, in most cases
          Proxy ARP on enterprise networks is used to enable communication for hosts with mis-
          configured subnet masks, a situation which should no longer be a common problem.
          Proxy ARP effectively breaks the LAN Security Perimeter, extending a network across
          multiple Layer 2 segments. Using Proxy ARP can also allow other security controls such
          as PVLAN to be bypassed.
        remediation: |-
          interface {interface}
          no ip proxy-arp
        titre: 3.1.2
        titre_texte: Set 'no ip proxy-arp'
      3.1.3:
        audit: sh ip int brief | incl tunnel
        automated_or_manual: Automated
        commande: no interface tunnel
        default_value: null
        description: Verify no tunnel interfaces are defined.
        impact: |-
          Organizations should plan and implement enterprise network security policies that
          disable insecure and unnecessary features that increase attack surfaces such as 'tunnel
          interfaces'.
        level: Level 1
        rationale: |-
          Tunnel interfaces should not exist in general. They can be used for malicious purposes.
          If they are necessary, the network admin's should be well aware of them and their
          purpose.
        remediation: no interface tunnel {instance}
        titre: 3.1.3
        titre_texte: Set 'no interface tunnel'
      3.1.4:
        audit: |-
          sh ip int {interface} | incl verify source
          sh ip access-list {name | number}
          sh run | sec interface {external_interface}
        automated_or_manual: Automated
        commande: ip verify unicast source reachable-via
        default_value: null
        description: |-
          Examines incoming packets to determine whether the source address is in the
          Forwarding Information Base (FIB) and permits the packet only if the source is
          reachable through the interface on which the packet was received (sometimes referred
          to as strict mode).
          This command places the router in access-list configuration mode, where you must
          define the denied or permitted access conditions by using the deny and permit
          commands.
          This command places the router in access-list configuration mode, where you must
          define the denied or permitted access conditions by using the deny and permit
          commands.
        impact: |-
          Organizations should plan and implement enterprise security policies that protect the
          confidentiality, integrity, and availability of network devices. The 'unicast Reverse-Path
          Forwarding' (uRPF) feature dynamically uses the router table to either accept or drop
          packets when arriving on an interface.
          Organizations should plan and implement enterprise security policies that explicitly
          separate internal from external networks. Adding 'ip access-list' explicitly permitting and
          denying internal and external networks enforces these policies.
          Organizations should plan and implement enterprise security policies explicitly
          permitting and denying access based upon access lists. Using the 'ip access-group'
          command enforces these policies by explicitly identifying groups permitted access.
        level: Level 1
        rationale: |-
          Enabled uRPF helps mitigate IP spoofing by ensuring only packet source IP addresses
          only originate from expected interfaces. Configure unicast reverse-path forwarding
          (uRPF) on all external or high risk interfaces.
          Configuring access controls can help prevent spoofing attacks. To reduce the
          effectiveness of IP spoofing, configure access control to deny any traffic from the
          external network that has a source address that should reside on the internal network.
          Include local host address or any reserved private addresses (RFC 1918).
          Ensure the permit rule(s) above the final deny rule only allow traffic according to your
          organization's least privilege policy.
          Configuring access controls can help prevent spoofing attacks. To reduce the
          effectiveness of IP spoofing, configure access control to deny any traffic from the
          external network that has a source address that should reside on the internal network.
          Include local host address or any reserved private addresses (RFC 1918).
          Ensure the permit rule(s) above the final deny rule only allow traffic according to your
          organization's least privilege policy.
        remediation: |-
          interface {interface_name}
          ip verify unicast source reachable-via rx allow-default
          ip access-list extended {<span>name | number}
          deny ip
          deny ip 127.0.0.0 0.255.255.255 any log
          deny ip 10.0.0.0 0.255.255.255 any log
          deny ip 0.0.0.0 0.255.255.255 any log
          deny ip 172.16.0.0 0.15.255.255 any log
          deny ip 192.168.0.0 0.0.255.255 any log
          deny ip 192.0.2.0 0.0.0.255 any log
          deny ip 169.254.0.0 0.0.255.255 any log
          deny ip 224.0.0.0 31.255.255.255 any log
          deny ip host 255.255.255.255 any log
          permit {protocol} {source_ip}
          deny any any log
          interface <external_interface>
          access-group <access-list> in
          interface {external_interface}
          ip access-group {name | number} in
        titre: 3.1.4
        titre_texte: Set 'ip verify unicast source reachable-via'
      3.3.1.1:
        audit: sh run | sec key chain
        automated_or_manual: Automated
        commande: key chain
        default_value: null
        description: |-
          Define an authentication key chain to enable authentication for routing protocols. A key
          chain must have at least one key and can have up to 2,147,483,647 keys.
          NOTE: Only DRP Agent, EIGRP, and RIPv2 use key chains.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Using 'key chains' for routing
          protocols enforces these policies.
        level: Level 2
        rationale: |-
          Routing protocols such as DRP Agent, EIGRP, and RIPv2 use key chains for
          authentication.
        remediation: key chain {key-chain_name}
        titre: 3.3.1.1
        titre_texte: Set 'key chain'
      3.3.1.2:
        audit: sh run | sec key chain
        automated_or_manual: Automated
        commande: key
        default_value: null
        description: Configure an authentication key on a key chain.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Using 'key numbers' for key
          chains for routing protocols enforces these policies.
        level: Level 2
        rationale: This is part of the routing authentication setup
        remediation: key {key-number}
        titre: 3.3.1.2
        titre_texte: Set 'key'
      3.3.1.3:
        audit: sh run | sec key chain
        automated_or_manual: Automated
        commande: key-string
        default_value: null
        description: Configure the authentication string for a key.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Using 'key strings' for key chains
          for routing protocols enforces these policies.
        level: Level 2
        rationale: This is part of the routing authentication setup
        remediation: key-string <key-string>
        titre: 3.3.1.3
        titre_texte: Set 'key-string'
      3.3.1.4:
        audit: sh run | sec router eigrp
        automated_or_manual: Automated
        commande: address-family ipv4 autonomous-system
        default_value: null
        description: Configure the EIGRP address family.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Using 'address-family' for EIGRP
          enforces these policies by restricting the exchanges between predefined network
          devices.
        level: Level 2
        rationale: |-
          Rationale: EIGRP is a true multi-protocol routing protocol and the 'address-family'
          feature enables restriction of exchanges with specific neighbors
        remediation: |-
          router eigrp <virtual-instance-name>
          address-family ipv4 autonomous-system {eigrp_as-
        titre: 3.3.1.4
        titre_texte: Set 'address-family ipv4 autonomous-system'
      3.3.1.5:
        audit: sh run | sec router eigrp
        automated_or_manual: Automated
        commande: af-interface default
        default_value: null
        description: Defines user defaults to apply to EIGRP interfaces that belong to an address-family.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Using 'af-interface default' for
          EIGRP interfaces enforces these policies by restricting the exchanges between
          predefined network devices.
        level: Level 2
        rationale: Part of the EIGRP address-family setup
        remediation: |-
          router eigrp <virtual-instance-name>
          address-family ipv4 autonomous-system {eigrp_as-
          af-interface default
        titre: 3.3.1.5
        titre_texte: Set 'af-interface default'
      3.3.1.6:
        audit: sh run | sec router eigrp
        automated_or_manual: Automated
        commande: authentication key-chain
        default_value: null
        description: Configure the EIGRP address family key chain.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Using the address-family 'key
          chain' for EIGRP enforces these policies by restricting the exchanges between
          predefined network devices.
        level: Level 2
        rationale: This is part of the EIGRP authentication configuration
        remediation: |-
          router eigrp <virtual-instance-name>
          address-family ipv4 autonomous-system {eigrp_as-
          af-interface {interface-name}
          authentication key-chain {eigrp_key-
        titre: 3.3.1.6
        titre_texte: Set 'authentication key-chain'
      3.3.1.7:
        audit: sh run | sec router eigrp
        automated_or_manual: Automated
        commande: authentication mode md5
        default_value: null
        description: |-
          Configure authentication to prevent unapproved sources from introducing unauthorized
          or false service messages.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Using the 'authentication mode'
          for EIGRP address-family or service-family packets enforces these policies by
          restricting the type of authentication between network devices.
        level: Level 1
        rationale: This is part of the EIGRP authentication configuration
        remediation: |-
          router eigrp <virtual-instance-name>
          address-family ipv4 autonomous-system {eigrp_as-
          af-interface {interface-name}
          authentication mode md5
        titre: 3.3.1.7
        titre_texte: Set 'authentication mode md5'
      3.3.1.8:
        audit: |-
          sh ip eigrp int
          sh run int {interface_name} | incl key-chain
        automated_or_manual: Automated
        commande: ip authentication key-chain eigrp
        default_value: null
        description: |-
          Specify the type of authentication used in Enhanced Interior Gateway Routing Protocol
          (EIGRP) packets per interface.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Configuring the interface with 'ip
          authentication key chain' for EIGRP by name and number enforces these policies by
          restricting the exchanges between network devices.
        level: Level 2
        rationale: |-
          Configuring EIGRP authentication key-chain number and name to restrict packet
          exchanges between network devices.
        remediation: |-
          interface {interface_name}
          ip authentication key-chain eigrp {eigrp_as-
        titre: 3.3.1.8
        titre_texte: Set 'ip authentication key-chain eigrp'
      3.3.1.9:
        audit: |-
          sh ip eigrp int
          sh run int {interface_name} | incl authentication mode
          sh run | sec router ospf
        automated_or_manual: Automated
        commande: ip authentication mode eigrp
        default_value: null
        description: |-
          Configure authentication to prevent unapproved sources from introducing unauthorized
          or false routing messages.
          Enable MD5 authentication for OSPF.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Configuring the interface with 'ip
          authentication mode' for EIGRP by number and mode enforces these policies by
          restricting the exchanges between network devices.
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Configuring the area
          'authentication message-digest' for OSPF enforces these policies by restricting
          exchanges between network devices.
        level: Level 2
        rationale: |-
          This is part of the EIGRP authentication configuration
          This is part of the OSPF authentication setup.
        remediation: |-
          interface {interface_name}
          ip authentication mode eigrp {<span>eigrp_as-
          router ospf <ospf_process-id>
          area <ospf_area-id> authentication message-
        titre: 3.3.1.9
        titre_texte: Set 'ip authentication mode eigrp'
      3.3.2.2:
        audit: sh run int {interface}
        automated_or_manual: Automated
        commande: ip ospf message-digest-key md5
        default_value: null
        description: Enable Open Shortest Path First (OSPF) Message Digest 5 (MD5) authentication.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Configuring the proper
          interface(s) for 'ip ospf message-digest-key md5' enforces these policies by restricting
          exchanges between network devices.
        level: Level 2
        rationale: This is part of the OSPF authentication setup
        remediation: |-
          interface {interface_name}
          ip ospf message-digest-key {ospf_md5_key-id} md5
        titre: 3.3.2.2
        titre_texte: Set 'ip ospf message-digest-key md5'
      3.3.3.1:
        audit: sh run | sec key chain
        automated_or_manual: Automated
        commande: key chain
        default_value: null
        description: Define an authentication key chain to enable authentication for RIPv2 routing protocols.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Configuring the proper
          authentication 'key-chain (name)' for RIPv2 protocols enforces these policies by
          restricting acceptable authentication between network devices.
        level: Level 2
        rationale: This is part of the routing authentication process.
        remediation: key chain {rip_key-chain_name}
        titre: 3.3.3.1
        titre_texte: Set 'key chain'
      3.3.3.2:
        audit: sh run | sec key chain
        automated_or_manual: Automated
        commande: key
        default_value: null
        description: Configure an authentication key on a key chain.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Configuring the proper
          authentication 'key' for RIPv2 protocols enforces these policies by restricting acceptable
          authentication between network devices.
        level: Level 2
        rationale: This is part of the routing authentication setup
        remediation: key {key-number}
        titre: 3.3.3.2
        titre_texte: Set 'key'
      3.3.3.3:
        audit: sh run | sec key chain
        automated_or_manual: Automated
        commande: key-string
        default_value: null
        description: Configure the authentication string for a key.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Using 'key-string' for key chains
          for routing protocols enforces these policies.
        level: Level 2
        rationale: This is part of the routing authentication setup
        remediation: key-string <key-string>
        titre: 3.3.3.3
        titre_texte: Set 'key-string'
      3.3.3.4:
        audit: sh run int {interface_name}
        automated_or_manual: Automated
        commande: ip rip authentication key-chain
        default_value: null
        description: |-
          Enable authentication for Routing Information Protocol (RIP) Version 2 packets and to
          specify the set of keys that can be used on an interface.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Configuring the interface with 'ip
          rip authentication key-chain' by name enforces these policies by restricting the
          exchanges between network devices.
        level: Level 2
        rationale: This is part of the RIPv2 authentication setup
        remediation: |-
          interface {interface_name}
          ip rip authentication key-chain {rip_key-
        titre: 3.3.3.4
        titre_texte: Set 'ip rip authentication key-chain'
      3.3.3.5:
        audit: sh run int <interface>
        automated_or_manual: Automated
        commande: ip rip authentication mode
        default_value: null
        description: Configure the Interface with the RIPv2 key chain.
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Using the 'ip rip authentication
          mode md5' enforces these policies by restricting the type of authentication between
          network devices.
        level: Level 2
        rationale: This is part of the RIPv2 authentication setup
        remediation: |-
          interface <interface_name>
          ip rip authentication mode md5
        titre: 3.3.3.5
        titre_texte: Set 'ip rip authentication mode' to 'md5'
      3.3.4.1:
        audit: sh run | sec router bgp
        automated_or_manual: Automated
        commande: neighbor password
        default_value: null
        description: |-
          Enable message digest5 (MD5) authentication on a TCP connection between two BGP
          peers
        impact: |-
          Organizations should plan and implement enterprise security policies that require
          rigorous authentication methods for routing protocols. Using the 'neighbor password' for
          BGP enforces these policies by restricting the type of authentication between network
          devices.
        level: Level 2
        rationale: |-
          Enforcing routing authentication reduces the likelihood of routing poisoning and
          unauthorized routers from joining BGP routing.
        remediation: |-
          router bgp <bgp_as-number>
          neighbor <bgp_neighbor-ip | peer-group-
        titre: 3.3.4.1
        titre_texte: Set 'neighbor password'
2025-06-12 21:05:44,081 p=10908 u=user n=ansible | TASK [cisco : verbose ?] ***************************************************************************************************************************
2025-06-12 21:05:44,087 p=11006 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:05:44,094 p=11006 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:44,096 p=11006 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:05:44,099 p=11006 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:05:44,372 p=11006 u=user n=ansible | [cisco : verbose ?]
Voulez-vous afficher la version vebose ? (y/n):
2025-06-12 21:06:14,344 p=10915 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 21:06:14,446 p=10915 u=user n=ansible | shutdown complete
2025-06-12 21:07:49,322 p=10908 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  delta: 124
  echo: true
  rc: 0
  start: '2025-06-12 21:05:44.372235'
  stderr: ''
  stdout: Paused for 2.08 minutes
  stop: '2025-06-12 21:07:49.319873'
  user_input: n
2025-06-12 21:07:49,325 p=10908 u=user n=ansible | TASK [cisco : rapport no verbose] ******************************************************************************************************************
2025-06-12 21:07:49,346 p=11024 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:07:49,350 p=11024 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:07:49,352 p=11024 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:07:49,355 p=11024 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:07:49,641 p=11029 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:07:49,657 p=11029 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:07:49,661 p=11029 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:07:49,709 p=11024 u=user n=ansible | network_os is set to ios
2025-06-12 21:07:49,711 p=11024 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 21:07:49,711 p=11024 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755269.710944-11024-217721634389436 `" && echo ansible-tmp-1749755269.710944-11024-217721634389436="` echo /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755269.710944-11024-217721634389436 `" ) && sleep 0'
2025-06-12 21:07:49,753 p=11024 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/stat.py
2025-06-12 21:07:49,753 p=11024 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/tmp39anl3f1 TO /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755269.710944-11024-217721634389436/AnsiballZ_stat.py
2025-06-12 21:07:49,755 p=11024 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755269.710944-11024-217721634389436/ /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755269.710944-11024-217721634389436/AnsiballZ_stat.py && sleep 0'
2025-06-12 21:07:49,769 p=11024 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755269.710944-11024-217721634389436/AnsiballZ_stat.py && sleep 0'
2025-06-12 21:07:49,992 p=11024 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/file.py
2025-06-12 21:07:49,992 p=11024 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/tmpigtfj8dg TO /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755269.710944-11024-217721634389436/AnsiballZ_file.py
2025-06-12 21:07:49,993 p=11024 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755269.710944-11024-217721634389436/ /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755269.710944-11024-217721634389436/AnsiballZ_file.py && sleep 0'
2025-06-12 21:07:49,995 p=11024 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755269.710944-11024-217721634389436/AnsiballZ_file.py && sleep 0'
2025-06-12 21:07:50,099 p=11024 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755269.710944-11024-217721634389436/ > /dev/null 2>&1 && sleep 0'
2025-06-12 21:07:50,106 p=10908 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  checksum: b45b4aa49cbb666476b60b6d19a6faecd5558350
  dest: /home/user/TFE_automation_compliance_CIS/rapport/192.168.122.237_rapport.txt
  diff:
    after:
      path: /home/user/TFE_automation_compliance_CIS/rapport/192.168.122.237_rapport.txt
    before:
      path: /home/user/TFE_automation_compliance_CIS/rapport/192.168.122.237_rapport.txt
  gid: 1000
  group: user
  invocation:
    module_args:
      _diff_peek: null
      _original_basename: template_rapport.jinja
      access_time: null
      access_time_format: '%Y%m%d%H%M.%S'
      attributes: null
      dest: /home/user/TFE_automation_compliance_CIS/rapport/192.168.122.237_rapport.txt
      follow: true
      force: false
      group: null
      mode: null
      modification_time: null
      modification_time_format: '%Y%m%d%H%M.%S'
      owner: null
      path: /home/user/TFE_automation_compliance_CIS/rapport/192.168.122.237_rapport.txt
      recurse: false
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: null
      state: file
      unsafe_writes: false
  mode: '0664'
  owner: user
  path: /home/user/TFE_automation_compliance_CIS/rapport/192.168.122.237_rapport.txt
  size: 8551
  state: file
  uid: 1000
2025-06-12 21:07:50,108 p=10908 u=user n=ansible | TASK [cisco : rapport verbose] *********************************************************************************************************************
2025-06-12 21:07:50,128 p=10908 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:07:50,131 p=10908 u=user n=ansible | TASK [cisco : commandes manquantes only] ***********************************************************************************************************
2025-06-12 21:07:50,149 p=11064 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:07:50,154 p=11064 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:07:50,156 p=11064 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:07:50,159 p=11064 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:07:50,446 p=11064 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 21:07:50,447 p=11064 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023 `" && echo ansible-tmp-1749755270.4461255-11064-256450889165023="` echo /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023 `" ) && sleep 0'
2025-06-12 21:07:50,461 p=11064 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/stat.py
2025-06-12 21:07:50,461 p=11064 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/tmpnt6uje01 TO /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/AnsiballZ_stat.py
2025-06-12 21:07:50,462 p=11064 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/ /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/AnsiballZ_stat.py && sleep 0'
2025-06-12 21:07:50,464 p=11064 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/AnsiballZ_stat.py && sleep 0'
2025-06-12 21:07:50,573 p=11064 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/tmpo2fmplup/liste_commandes_nok.jinja TO /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/source
2025-06-12 21:07:50,573 p=11064 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/ /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/source && sleep 0'
2025-06-12 21:07:50,576 p=11064 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/copy.py
2025-06-12 21:07:50,576 p=11064 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/tmp5zg1j8f7 TO /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/AnsiballZ_copy.py
2025-06-12 21:07:50,576 p=11064 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/ /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/AnsiballZ_copy.py && sleep 0'
2025-06-12 21:07:50,578 p=11064 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/AnsiballZ_copy.py && sleep 0'
2025-06-12 21:07:50,679 p=11064 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/ > /dev/null 2>&1 && sleep 0'
2025-06-12 21:07:50,686 p=10908 u=user n=ansible | changed: [192.168.122.237] => changed=true 
  checksum: fed8b87e712ea5c0788669d36df8de3187dcdcc5
  dest: /home/user/TFE_automation_compliance_CIS/correctif/192.168.122.237_nok.txt
  diff: []
  gid: 1000
  group: user
  invocation:
    module_args:
      _original_basename: liste_commandes_nok.jinja
      attributes: null
      backup: false
      checksum: fed8b87e712ea5c0788669d36df8de3187dcdcc5
      content: null
      dest: /home/user/TFE_automation_compliance_CIS/correctif/192.168.122.237_nok.txt
      directory_mode: null
      follow: false
      force: true
      group: null
      local_follow: null
      mode: null
      owner: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/source
      unsafe_writes: false
      validate: null
  md5sum: 6abcb8031646673da0914d692388eb2c
  mode: '0664'
  owner: user
  size: 6195
  src: /home/user/.ansible/tmp/ansible-local-10908zkmuqu2u/ansible-tmp-1749755270.4461255-11064-256450889165023/source
  state: file
  uid: 1000
2025-06-12 21:07:50,688 p=10908 u=user n=ansible | TASK [cisco : affichage no verbose] ****************************************************************************************************************
2025-06-12 21:07:50,708 p=11102 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:07:50,713 p=11102 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:07:50,715 p=11102 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:07:50,718 p=11102 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:07:51,000 p=10908 u=user n=ansible | ok: [192.168.122.237] => 
  lookup('file', (ansible_config_file | dirname) + '/rapport/' + inventory_hostname + '_rapport.txt'): |-
    Rapport de conformité CIS pour l'appareil Cisco : 192.168.122.237
  
  
  
        La ligne : (1.1.1:aaa new-model) de niveau Level 1 est présente dans la config de l'appareil.✅
  
  
  
  
        La ligne : (1.1.2:aaa authentication login) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.1.3:aaa authentication enable default) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.1.4:login authentication for) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.1.5:login authentication for) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.1.7:aaa accounting connection) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.1.8:aaa accounting exec) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.1.9:aaa accounting network) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.1.10:aaa accounting system) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.2.1:privilege 1) de niveau Level 1 est présente dans la config de l'appareil.✅
  
  
  
  
        La ligne : (1.2.3:no exec) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.2.4:access-list) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.2.5:access-class) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.2.9:transport input none) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.2.10:http Secure-server) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.3.1:banner-text) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.3.2:banner-text) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.3.3:banner-text) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.3.4:banner-text) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.4.1:password) de niveau Level 1 est présente dans la config de l'appareil.✅
  
  
  
  
        La ligne : (1.4.2:service password-encryption) de niveau Level 1 est présente dans la config de l'appareil.✅
  
  
  
  
        La ligne : (1.4.3:username secret) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.5.2:private) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.5.3:public) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.5.5:snmp-server community) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.5.6:access-list) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.5.7:snmp-server host) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.5.8:snmp-server enable traps snmp) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.6.1:) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.6.2:) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.6.3:) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (1.6.4:) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.1.1.1.1:hostname) de niveau Level 1 est présente dans la config de l'appareil.✅
  
  
  
  
        La ligne : (2.1.1.1.2:ip domain-name) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.1.1.2:ip ssh version) de niveau Level 1 est présente dans la config de l'appareil.✅
  
  
  
  
        La ligne : (2.1.2:no cdp run) de niveau Level 1 est présente dans la config de l'appareil.✅
  
  
  
  
        La ligne : (2.1.3:no ip bootp server) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.1.4:no service dhcp) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.1.5:no ip identd) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.1.6:service tcp-keepalives-in) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.1.7:service tcp-keepalives-out) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.1.8:no service pad) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.2.1:logging enable) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.2.2:buffer size) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.2.3:logging console critical) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.2.4:logging host) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.2.5:logging trap informational) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.2.6:service timestamps debug datetime) de niveau Level 1 est présente dans la config de l'appareil.✅
  
  
  
  
        La ligne : (2.2.7:logging source interface) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.2.8:login success/failure logging) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.3.1.1:ntp authenticate) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.3.1.2:ntp authentication-key) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.3.1.3:ntp trusted-key) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.3.1.4:key) de niveau Level 2 est présente dans la config de l'appareil.✅
  
  
  
  
        La ligne : (2.3.2:ip address) de niveau Level 1 est présente dans la config de l'appareil.✅
  
  
  
  
        La ligne : (2.4.1:interface loopback) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.4.2:source-interface) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (2.4.3:ntp source) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.1.1:no ip source-route) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.1.2:no ip proxy-arp) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.1.3:no interface tunnel) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.1.4:ip verify unicast source reachable-via) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.1.1:key chain) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.1.2:key) de niveau Level 2 est présente dans la config de l'appareil.✅
  
  
  
  
        La ligne : (3.3.1.3:key-string) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.1.4:address-family ipv4 autonomous-system) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.1.5:af-interface default) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.1.6:authentication key-chain) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.1.7:authentication mode md5) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.1.8:ip authentication key-chain eigrp) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.1.9:ip authentication mode eigrp) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.2.2:ip ospf message-digest-key md5) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.3.1:key chain) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.3.2:key) de niveau Level 2 est présente dans la config de l'appareil.✅
  
  
  
  
        La ligne : (3.3.3.3:key-string) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.3.4:ip rip authentication key-chain) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.3.5:ip rip authentication mode) n'est pas présente dans la config de l'appareil ❌
  
  
  
        La ligne : (3.3.4.1:neighbor password) n'est pas présente dans la config de l'appareil ❌
  
  
  
    ✅ 12 règles présentes sur 78
    ❌ 66 règles absentes sur 78
    Il y'a 9 règles de niveau 1
    Il y'a 3 règles de niveau 2
2025-06-12 21:07:51,002 p=10908 u=user n=ansible | TASK [cisco : affichage verbose] *******************************************************************************************************************
2025-06-12 21:07:51,023 p=10908 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:07:51,026 p=10908 u=user n=ansible | TASK [cisco : Correction de toute la configuration] ************************************************************************************************
2025-06-12 21:07:51,046 p=10908 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:07:51,049 p=10908 u=user n=ansible | TASK [cisco : cherry-pick fzf] *********************************************************************************************************************
2025-06-12 21:07:51,071 p=10908 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:07:51,074 p=10908 u=user n=ansible | TASK [Appareils Pfsense] ***************************************************************************************************************************
2025-06-12 21:07:51,095 p=10908 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:07:51,098 p=10908 u=user n=ansible | META: ran handlers
2025-06-12 21:07:51,100 p=10908 u=user n=ansible | META: ran handlers
2025-06-12 21:07:51,101 p=10908 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:07:51,101 p=10908 u=user n=ansible | 192.168.122.237            : ok=11   changed=2    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2025-06-12 21:07:51,201 p=11029 u=user n=ansible | shutdown complete
2025-06-12 21:09:50,195 p=11137 u=user n=ansible | [WARNING]: Unable to parse /home/user/TFE_automation_compliance_CIS/inventory.yml as an inventory source

2025-06-12 21:09:50,195 p=11137 u=user n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2025-06-12 21:09:50,198 p=11137 u=user n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2025-06-12 21:09:50,198 p=11137 u=user n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: R1

2025-06-12 21:09:50,201 p=11137 u=user n=ansible | ERROR! this task 'ansible.netcommon.cli_command' has extra params, which is only allowed in the following modules: ansible.legacy.set_fact, group_by, ansible.builtin.import_role, win_shell, ansible.windows.win_shell, ansible.builtin.group_by, ansible.builtin.import_tasks, ansible.builtin.include_role, include_role, ansible.windows.win_command, ansible.legacy.include_role, ansible.legacy.meta, ansible.builtin.add_host, ansible.builtin.include_tasks, ansible.legacy.include_tasks, ansible.legacy.add_host, set_fact, ansible.legacy.win_command, ansible.builtin.command, ansible.builtin.meta, ansible.builtin.script, ansible.legacy.win_shell, ansible.legacy.raw, ansible.builtin.win_command, include, meta, ansible.builtin.include, ansible.legacy.command, raw, ansible.legacy.shell, include_vars, ansible.legacy.group_by, add_host, import_role, ansible.builtin.win_shell, ansible.builtin.shell, import_tasks, ansible.builtin.raw, ansible.builtin.include_vars, ansible.legacy.script, command, win_command, ansible.legacy.include, script, ansible.builtin.set_fact, ansible.legacy.include_vars, ansible.legacy.import_tasks, include_tasks, ansible.legacy.import_role, shell
2025-06-12 21:10:06,233 p=11138 u=user n=ansible | [WARNING]: Unable to parse /home/user/TFE_automation_compliance_CIS/inventory.yml as an inventory source

2025-06-12 21:10:06,233 p=11138 u=user n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2025-06-12 21:10:06,236 p=11138 u=user n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2025-06-12 21:10:06,239 p=11138 u=user n=ansible | ERROR! this task 'ansible.netcommon.cli_command' has extra params, which is only allowed in the following modules: ansible.builtin.import_tasks, ansible.builtin.command, set_fact, ansible.legacy.include_role, ansible.legacy.shell, ansible.builtin.meta, ansible.builtin.include_tasks, ansible.builtin.win_shell, import_tasks, ansible.builtin.win_command, raw, ansible.windows.win_command, ansible.legacy.win_command, ansible.legacy.group_by, import_role, ansible.builtin.group_by, include_role, group_by, add_host, script, meta, ansible.legacy.meta, include_tasks, ansible.legacy.command, include_vars, ansible.builtin.shell, ansible.windows.win_shell, ansible.legacy.win_shell, ansible.legacy.script, ansible.legacy.raw, ansible.builtin.raw, shell, ansible.legacy.import_tasks, ansible.builtin.script, ansible.legacy.add_host, include, ansible.builtin.add_host, ansible.legacy.include, ansible.legacy.include_tasks, ansible.builtin.include, win_command, ansible.builtin.import_role, ansible.legacy.include_vars, ansible.legacy.set_fact, command, win_shell, ansible.builtin.include_role, ansible.builtin.include_vars, ansible.legacy.import_role, ansible.builtin.set_fact
2025-06-12 21:10:25,107 p=11145 u=user n=ansible | [WARNING]: Unable to parse /home/user/TFE_automation_compliance_CIS/inventory/hosts..yml as an inventory source

2025-06-12 21:10:25,107 p=11145 u=user n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2025-06-12 21:10:25,110 p=11145 u=user n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2025-06-12 21:10:25,113 p=11145 u=user n=ansible | ERROR! this task 'ansible.netcommon.cli_command' has extra params, which is only allowed in the following modules: import_role, ansible.builtin.win_command, add_host, ansible.legacy.shell, shell, raw, ansible.builtin.import_role, ansible.builtin.import_tasks, group_by, ansible.legacy.import_tasks, ansible.legacy.include_tasks, include, include_role, meta, set_fact, ansible.builtin.add_host, ansible.legacy.import_role, win_shell, ansible.builtin.win_shell, ansible.windows.win_shell, import_tasks, ansible.legacy.win_command, ansible.legacy.include, ansible.builtin.group_by, ansible.builtin.shell, ansible.windows.win_command, ansible.legacy.command, ansible.builtin.command, ansible.builtin.include_tasks, ansible.legacy.set_fact, ansible.legacy.include_vars, ansible.legacy.win_shell, script, ansible.builtin.script, ansible.builtin.raw, win_command, ansible.legacy.script, command, ansible.legacy.include_role, ansible.builtin.include, include_tasks, ansible.legacy.group_by, ansible.builtin.include_vars, ansible.legacy.raw, ansible.legacy.add_host, ansible.builtin.set_fact, include_vars, ansible.builtin.include_role, ansible.builtin.meta, ansible.legacy.meta
2025-06-12 21:10:29,617 p=11147 u=user n=ansible | ERROR! this task 'ansible.netcommon.cli_command' has extra params, which is only allowed in the following modules: import_role, ansible.builtin.include_tasks, ansible.builtin.set_fact, import_tasks, include_role, include_tasks, ansible.legacy.win_shell, raw, include, ansible.legacy.group_by, ansible.builtin.win_shell, ansible.builtin.win_command, ansible.legacy.shell, script, ansible.builtin.import_tasks, ansible.builtin.include_role, ansible.legacy.import_tasks, ansible.legacy.include_vars, ansible.builtin.group_by, ansible.legacy.set_fact, ansible.legacy.include_tasks, ansible.builtin.add_host, set_fact, command, ansible.legacy.add_host, ansible.legacy.include, ansible.legacy.include_role, ansible.builtin.import_role, include_vars, ansible.builtin.script, ansible.windows.win_command, ansible.windows.win_shell, shell, win_shell, ansible.legacy.script, ansible.builtin.include_vars, ansible.legacy.win_command, ansible.legacy.import_role, add_host, ansible.builtin.shell, win_command, group_by, ansible.builtin.meta, ansible.builtin.command, ansible.legacy.meta, ansible.builtin.include, meta, ansible.legacy.raw, ansible.builtin.raw, ansible.legacy.command
2025-06-12 21:15:12,735 p=11180 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:15:12,735 p=11180 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:15:12,739 p=11180 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:15:12,739 p=11180 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:15:12,741 p=11180 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:15:12,741 p=11180 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:15:12,830 p=11180 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:15:12,837 p=11180 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:15:12,841 p=11180 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:15:12,841 p=11180 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:15:12,841 p=11180 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:15:12,841 p=11180 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 21:15:12,841 p=11180 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:15:12,842 p=11180 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:15:12,848 p=11180 u=user n=ansible | META: ran handlers
2025-06-12 21:15:12,849 p=11180 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:15:12,869 p=11183 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:15:12,879 p=11183 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:12,883 p=11183 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:12,886 p=11183 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:15:13,138 p=11187 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:15:13,152 p=11187 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:13,156 p=11187 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:13,199 p=11183 u=user n=ansible | network_os is set to ios
2025-06-12 21:15:13,203 p=11180 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:15:13,205 p=11180 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:15:13,223 p=11189 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:15:13,232 p=11189 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:13,236 p=11189 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:13,239 p=11189 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:15:13,527 p=11180 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:15:13,529 p=11180 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:15:13,548 p=11180 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:15:13,551 p=11180 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:15:13,579 p=11180 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:15:13,584 p=11196 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:15:13,598 p=11196 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:13,602 p=11196 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:13,605 p=11196 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:15:13,884 p=11196 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:15:22,456 p=11180 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  delta: 8
  echo: true
  rc: 0
  start: '2025-06-12 21:15:13.884868'
  stderr: ''
  stdout: Paused for 0.14 minutes
  stop: '2025-06-12 21:15:22.451558'
  user_input: exit
2025-06-12 21:15:22,459 p=11180 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:15:22,478 p=11180 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:15:22,482 p=11180 u=user n=ansible | TASK [cisco : Correction de toute la configuration] ************************************************************************************************
2025-06-12 21:15:22,504 p=11180 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:15:22,507 p=11180 u=user n=ansible | TASK [cisco : cherry-pick fzf] *********************************************************************************************************************
2025-06-12 21:15:22,528 p=11180 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:15:22,531 p=11180 u=user n=ansible | TASK [Appareils Pfsense] ***************************************************************************************************************************
2025-06-12 21:15:22,550 p=11180 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:15:22,553 p=11180 u=user n=ansible | META: ran handlers
2025-06-12 21:15:22,555 p=11180 u=user n=ansible | META: ran handlers
2025-06-12 21:15:22,556 p=11180 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:15:22,556 p=11180 u=user n=ansible | 192.168.122.237            : ok=3    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2025-06-12 21:15:43,854 p=11187 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 21:15:43,955 p=11187 u=user n=ansible | shutdown complete
2025-06-12 21:15:46,407 p=11214 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:15:46,407 p=11214 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:15:46,412 p=11214 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:15:46,412 p=11214 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:15:46,414 p=11214 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:15:46,414 p=11214 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:15:46,501 p=11214 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:15:46,507 p=11214 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:15:46,511 p=11214 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:15:46,511 p=11214 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:15:46,511 p=11214 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:15:46,512 p=11214 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml *******************************************************************************************************************
2025-06-12 21:15:46,512 p=11214 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:15:46,513 p=11214 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:15:46,519 p=11214 u=user n=ansible | META: ran handlers
2025-06-12 21:15:46,520 p=11214 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:15:46,540 p=11217 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:15:46,550 p=11217 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:46,555 p=11217 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:46,558 p=11217 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:15:46,806 p=11221 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:15:46,820 p=11221 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:46,824 p=11221 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:46,866 p=11217 u=user n=ansible | network_os is set to ios
2025-06-12 21:15:46,869 p=11214 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:15:46,871 p=11214 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:15:46,890 p=11223 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:15:46,900 p=11223 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:46,904 p=11223 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:46,906 p=11223 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:15:47,191 p=11214 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:15:47,193 p=11214 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:15:47,211 p=11214 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:15:47,214 p=11214 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:15:47,241 p=11214 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:15:47,247 p=11230 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:15:47,258 p=11230 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:47,263 p=11230 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:47,266 p=11230 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:15:47,539 p=11230 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:15:50,587 p=11214 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  delta: 3
  echo: true
  rc: 0
  start: '2025-06-12 21:15:47.539616'
  stderr: ''
  stdout: Paused for 0.05 minutes
  stop: '2025-06-12 21:15:50.585686'
  user_input: '1'
2025-06-12 21:15:50,589 p=11214 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:15:50,617 p=11214 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:15:50,618 p=11214 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 21:15:50,621 p=11214 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:15:50,628 p=11214 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 21:15:50,634 p=11235 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:15:50,639 p=11235 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:50,641 p=11235 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:15:50,645 p=11235 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:15:50,921 p=11235 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:15:50,921 p=11235 u=user n=ansible | redirecting (type: action) cisco.ios.ios_command to cisco.ios.ios
2025-06-12 21:15:50,922 p=11235 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 21:15:50,922 p=11235 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-11214vwtbbg1x `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-11214vwtbbg1x/ansible-tmp-1749755750.92187-11235-136564267450470 `" && echo ansible-tmp-1749755750.92187-11235-136564267450470="` echo /home/user/.ansible/tmp/ansible-local-11214vwtbbg1x/ansible-tmp-1749755750.92187-11235-136564267450470 `" ) && sleep 0'
2025-06-12 21:15:51,023 p=11235 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 21:15:51,023 p=11235 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 21:15:51,027 p=11235 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 21:15:51,052 p=11235 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_command.py
2025-06-12 21:15:51,053 p=11235 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-11214vwtbbg1x/tmpybfdk5_n TO /home/user/.ansible/tmp/ansible-local-11214vwtbbg1x/ansible-tmp-1749755750.92187-11235-136564267450470/AnsiballZ_ios_command.py
2025-06-12 21:15:51,053 p=11235 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-11214vwtbbg1x/ansible-tmp-1749755750.92187-11235-136564267450470/ /home/user/.ansible/tmp/ansible-local-11214vwtbbg1x/ansible-tmp-1749755750.92187-11235-136564267450470/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 21:15:51,055 p=11235 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-11214vwtbbg1x/ansible-tmp-1749755750.92187-11235-136564267450470/AnsiballZ_ios_command.py && sleep 0'
2025-06-12 21:15:51,184 p=11221 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 21:15:51,194 p=11221 u=user n=p=11221 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:15:53,462 p=11221 u=user n=p=11221 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 21:15:53,465 p=11221 u=user n=p=11221 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 21:15:53,574 p=11221 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 485, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 818, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 794, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1699, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 21:15:53,587 p=11235 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-11214vwtbbg1x/ansible-tmp-1749755750.92187-11235-136564267450470/ > /dev/null 2>&1 && sleep 0'
2025-06-12 21:15:53,592 p=11214 u=user n=ansible | The full traceback is:
  File "/tmp/ansible_cisco.ios.ios_command_payload_k8_v1vb5/ansible_cisco.ios.ios_command_payload.zip/ansible_collections/cisco/ios/plugins/module_utils/network/ios/ios.py", line 94, in get_capabilities
    capabilities = Connection(module._socket_path).get_capabilities()
  File "/tmp/ansible_cisco.ios.ios_command_payload_k8_v1vb5/ansible_cisco.ios.ios_command_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
    raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)

2025-06-12 21:15:53,595 p=11214 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  invocation:
    module_args:
      commands:
      - show running-config
      interval: 1
      match: all
      provider: null
      retries: 10
      wait_for: null
  msg: No existing session
2025-06-12 21:15:53,597 p=11214 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:15:53,597 p=11214 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:15:53,697 p=11221 u=user n=ansible | shutdown complete
2025-06-12 21:21:34,828 p=11308 u=user n=ansible | [WARNING]: Unable to parse /home/user/TFE_automation_compliance_CIS/hosts.yml as an inventory source

2025-06-12 21:21:34,828 p=11308 u=user n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2025-06-12 21:21:34,830 p=11308 u=user n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2025-06-12 21:21:34,831 p=11308 u=user n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: R1

2025-06-12 21:21:45,895 p=11316 u=user n=ansible | network_os is set to ios
2025-06-12 21:21:46,096 p=11314 u=user n=ansible | 192.168.122.237 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-06-12 21:21:46,201 p=11321 u=user n=ansible | shutdown complete
2025-06-12 21:21:53,496 p=11355 u=user n=ansible | network_os is set to ios
2025-06-12 21:21:53,697 p=11353 u=user n=ansible | 192.168.122.237 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
2025-06-12 21:21:53,802 p=11359 u=user n=ansible | shutdown complete
2025-06-12 21:22:21,093 p=11398 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:22:21,100 p=11398 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:22:21,441 p=11401 u=user n=ansible | network_os is set to ios
2025-06-12 21:22:21,446 p=11398 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:22:21,448 p=11398 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:22:21,754 p=11398 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:22:21,756 p=11398 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:22:21,775 p=11398 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 21:22:21,778 p=11398 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:22:21,805 p=11398 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:22:22,107 p=11414 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:22:24,753 p=11398 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 21:22:24,755 p=11398 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:22:24,782 p=11398 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 21:22:24,791 p=11398 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 21:22:25,358 p=11405 u=user n=p=11405 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:22:27,624 p=11405 u=user n=p=11405 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 21:22:27,627 p=11405 u=user n=p=11405 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 21:22:27,748 p=11398 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 21:22:27,751 p=11398 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:22:27,751 p=11398 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:22:27,850 p=11405 u=user n=ansible | shutdown complete
2025-06-12 21:24:37,232 p=11468 u=user n=ansible | ansible 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:24:37,232 p=11468 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:24:37,236 p=11468 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:24:37,236 p=11468 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:24:37,238 p=11468 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:24:37,238 p=11468 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:24:37,247 p=11468 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:24:37,248 p=11468 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:24:37,248 p=11468 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:24:37,271 p=11468 u=user n=ansible | META: ran handlers
2025-06-12 21:24:37,278 p=11470 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:24:37,298 p=11470 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:24:37,302 p=11470 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:24:37,305 p=11470 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:24:37,556 p=11474 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:24:37,570 p=11474 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:24:37,574 p=11474 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:24:37,616 p=11470 u=user n=ansible | network_os is set to ios
2025-06-12 21:24:37,618 p=11470 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 21:24:37,618 p=11470 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-11468df81mbba `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-11468df81mbba/ansible-tmp-1749756277.6179736-11470-838823796282 `" && echo ansible-tmp-1749756277.6179736-11470-838823796282="` echo /home/user/.ansible/tmp/ansible-local-11468df81mbba/ansible-tmp-1749756277.6179736-11470-838823796282 `" ) && sleep 0'
2025-06-12 21:24:37,696 p=11470 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 21:24:37,696 p=11470 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 21:24:37,699 p=11470 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 21:24:37,725 p=11470 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/ping.py
2025-06-12 21:24:37,726 p=11470 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-11468df81mbba/tmphv2a_9g_ TO /home/user/.ansible/tmp/ansible-local-11468df81mbba/ansible-tmp-1749756277.6179736-11470-838823796282/AnsiballZ_ping.py
2025-06-12 21:24:37,726 p=11470 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-11468df81mbba/ansible-tmp-1749756277.6179736-11470-838823796282/ /home/user/.ansible/tmp/ansible-local-11468df81mbba/ansible-tmp-1749756277.6179736-11470-838823796282/AnsiballZ_ping.py && sleep 0'
2025-06-12 21:24:37,728 p=11470 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-11468df81mbba/ansible-tmp-1749756277.6179736-11470-838823796282/AnsiballZ_ping.py && sleep 0'
2025-06-12 21:24:37,827 p=11470 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-11468df81mbba/ansible-tmp-1749756277.6179736-11470-838823796282/ > /dev/null 2>&1 && sleep 0'
2025-06-12 21:24:37,833 p=11468 u=user n=ansible | 192.168.122.237 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "invocation": {
        "module_args": {
            "data": "pong"
        }
    },
    "ping": "pong"
}
2025-06-12 21:24:37,836 p=11468 u=user n=ansible | META: ran handlers
2025-06-12 21:24:37,837 p=11468 u=user n=ansible | META: ran handlers
2025-06-12 21:24:37,938 p=11474 u=user n=ansible | shutdown complete
2025-06-12 21:25:28,019 p=11511 u=user n=ansible | ansible 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:25:28,019 p=11511 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:25:28,023 p=11511 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:25:28,023 p=11511 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:25:28,025 p=11511 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:25:28,025 p=11511 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:25:28,034 p=11511 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:25:28,034 p=11511 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:25:28,034 p=11511 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:25:28,057 p=11511 u=user n=ansible | META: ran handlers
2025-06-12 21:25:28,063 p=11514 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:25:28,082 p=11514 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:25:28,086 p=11514 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:25:28,089 p=11514 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:25:28,332 p=11518 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:25:28,346 p=11518 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:25:28,349 p=11518 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:25:28,393 p=11514 u=user n=ansible | network_os is set to ios
2025-06-12 21:25:28,394 p=11514 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 21:25:28,394 p=11514 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-11511b_tjpdic `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-11511b_tjpdic/ansible-tmp-1749756328.394715-11514-184620422259721 `" && echo ansible-tmp-1749756328.394715-11514-184620422259721="` echo /home/user/.ansible/tmp/ansible-local-11511b_tjpdic/ansible-tmp-1749756328.394715-11514-184620422259721 `" ) && sleep 0'
2025-06-12 21:25:28,475 p=11514 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 21:25:28,475 p=11514 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 21:25:28,478 p=11514 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 21:25:28,499 p=11514 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/ping.py
2025-06-12 21:25:28,500 p=11514 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-11511b_tjpdic/tmpc9ujic4k TO /home/user/.ansible/tmp/ansible-local-11511b_tjpdic/ansible-tmp-1749756328.394715-11514-184620422259721/AnsiballZ_ping.py
2025-06-12 21:25:28,500 p=11514 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-11511b_tjpdic/ansible-tmp-1749756328.394715-11514-184620422259721/ /home/user/.ansible/tmp/ansible-local-11511b_tjpdic/ansible-tmp-1749756328.394715-11514-184620422259721/AnsiballZ_ping.py && sleep 0'
2025-06-12 21:25:28,502 p=11514 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-11511b_tjpdic/ansible-tmp-1749756328.394715-11514-184620422259721/AnsiballZ_ping.py && sleep 0'
2025-06-12 21:25:28,595 p=11514 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-11511b_tjpdic/ansible-tmp-1749756328.394715-11514-184620422259721/ > /dev/null 2>&1 && sleep 0'
2025-06-12 21:25:28,601 p=11511 u=user n=ansible | 192.168.122.237 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "invocation": {
        "module_args": {
            "data": "pong"
        }
    },
    "ping": "pong"
}
2025-06-12 21:25:28,603 p=11511 u=user n=ansible | META: ran handlers
2025-06-12 21:25:28,605 p=11511 u=user n=ansible | META: ran handlers
2025-06-12 21:25:28,706 p=11518 u=user n=ansible | shutdown complete
2025-06-12 21:25:52,585 p=11553 u=user n=ansible | ansible 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:25:52,585 p=11553 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:25:52,588 p=11553 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:25:52,588 p=11553 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:25:52,590 p=11553 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:25:52,590 p=11553 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:25:52,600 p=11553 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:25:52,600 p=11553 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:25:52,600 p=11553 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:25:52,624 p=11553 u=user n=ansible | META: ran handlers
2025-06-12 21:25:52,630 p=11556 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:25:52,647 p=11556 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:25:52,650 p=11556 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:25:52,653 p=11556 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:25:52,895 p=11560 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:25:52,910 p=11560 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:25:52,914 p=11560 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:25:52,957 p=11556 u=user n=ansible | network_os is set to ios
2025-06-12 21:25:52,958 p=11556 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 21:25:52,958 p=11556 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-11553bvddbevj `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-11553bvddbevj/ansible-tmp-1749756352.9586663-11556-231376167525714 `" && echo ansible-tmp-1749756352.9586663-11556-231376167525714="` echo /home/user/.ansible/tmp/ansible-local-11553bvddbevj/ansible-tmp-1749756352.9586663-11556-231376167525714 `" ) && sleep 0'
2025-06-12 21:25:53,040 p=11556 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 21:25:53,040 p=11556 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 21:25:53,042 p=11556 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 21:25:53,064 p=11556 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/ping.py
2025-06-12 21:25:53,064 p=11556 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-11553bvddbevj/tmpxwj08sc5 TO /home/user/.ansible/tmp/ansible-local-11553bvddbevj/ansible-tmp-1749756352.9586663-11556-231376167525714/AnsiballZ_ping.py
2025-06-12 21:25:53,065 p=11556 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-11553bvddbevj/ansible-tmp-1749756352.9586663-11556-231376167525714/ /home/user/.ansible/tmp/ansible-local-11553bvddbevj/ansible-tmp-1749756352.9586663-11556-231376167525714/AnsiballZ_ping.py && sleep 0'
2025-06-12 21:25:53,067 p=11556 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-11553bvddbevj/ansible-tmp-1749756352.9586663-11556-231376167525714/AnsiballZ_ping.py && sleep 0'
2025-06-12 21:25:53,160 p=11556 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-11553bvddbevj/ansible-tmp-1749756352.9586663-11556-231376167525714/ > /dev/null 2>&1 && sleep 0'
2025-06-12 21:25:53,164 p=11553 u=user n=ansible | 192.168.122.237 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "invocation": {
        "module_args": {
            "data": "pong"
        }
    },
    "ping": "pong"
}
2025-06-12 21:25:53,166 p=11553 u=user n=ansible | META: ran handlers
2025-06-12 21:25:53,168 p=11553 u=user n=ansible | META: ran handlers
2025-06-12 21:25:53,269 p=11560 u=user n=ansible | shutdown complete
2025-06-12 21:25:57,777 p=11595 u=user n=ansible | ansible 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:25:57,778 p=11595 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:25:57,781 p=11595 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:25:57,781 p=11595 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:25:57,783 p=11595 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:25:57,783 p=11595 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:25:57,792 p=11595 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:25:57,792 p=11595 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:25:57,792 p=11595 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:25:57,814 p=11595 u=user n=ansible | META: ran handlers
2025-06-12 21:25:57,821 p=11598 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:25:57,838 p=11598 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:25:57,841 p=11598 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:25:57,844 p=11598 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:25:58,093 p=11602 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:25:58,107 p=11602 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:25:58,112 p=11602 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:25:58,155 p=11598 u=user n=ansible | network_os is set to ios
2025-06-12 21:25:58,156 p=11598 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 21:25:58,156 p=11598 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-11595ep40axn0 `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-11595ep40axn0/ansible-tmp-1749756358.1563978-11598-23269091620186 `" && echo ansible-tmp-1749756358.1563978-11598-23269091620186="` echo /home/user/.ansible/tmp/ansible-local-11595ep40axn0/ansible-tmp-1749756358.1563978-11598-23269091620186 `" ) && sleep 0'
2025-06-12 21:25:58,232 p=11598 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 21:25:58,232 p=11598 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 21:25:58,235 p=11598 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 21:25:58,257 p=11598 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/ping.py
2025-06-12 21:25:58,258 p=11598 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-11595ep40axn0/tmpogzyxwg6 TO /home/user/.ansible/tmp/ansible-local-11595ep40axn0/ansible-tmp-1749756358.1563978-11598-23269091620186/AnsiballZ_ping.py
2025-06-12 21:25:58,258 p=11598 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-11595ep40axn0/ansible-tmp-1749756358.1563978-11598-23269091620186/ /home/user/.ansible/tmp/ansible-local-11595ep40axn0/ansible-tmp-1749756358.1563978-11598-23269091620186/AnsiballZ_ping.py && sleep 0'
2025-06-12 21:25:58,260 p=11598 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-11595ep40axn0/ansible-tmp-1749756358.1563978-11598-23269091620186/AnsiballZ_ping.py && sleep 0'
2025-06-12 21:25:58,351 p=11598 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-11595ep40axn0/ansible-tmp-1749756358.1563978-11598-23269091620186/ > /dev/null 2>&1 && sleep 0'
2025-06-12 21:25:58,356 p=11595 u=user n=ansible | 192.168.122.237 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "invocation": {
        "module_args": {
            "data": "pong"
        }
    },
    "ping": "pong"
}
2025-06-12 21:25:58,358 p=11595 u=user n=ansible | META: ran handlers
2025-06-12 21:25:58,360 p=11595 u=user n=ansible | META: ran handlers
2025-06-12 21:25:58,461 p=11602 u=user n=ansible | shutdown complete
2025-06-12 21:26:04,989 p=11634 u=user n=ansible | ansible 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:26:04,989 p=11634 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:26:04,992 p=11634 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:26:04,993 p=11634 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:26:04,994 p=11634 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:26:04,994 p=11634 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:26:05,005 p=11634 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:26:05,005 p=11634 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:26:05,005 p=11634 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:26:05,028 p=11634 u=user n=ansible | META: ran handlers
2025-06-12 21:26:05,034 p=11637 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:26:05,053 p=11637 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:26:05,057 p=11637 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:26:05,060 p=11637 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:26:05,308 p=11641 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:26:05,322 p=11641 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:26:05,326 p=11641 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:26:05,370 p=11637 u=user n=ansible | network_os is set to ios
2025-06-12 21:26:05,371 p=11637 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 21:26:05,372 p=11637 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-1163479ug3y_9 `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-1163479ug3y_9/ansible-tmp-1749756365.371795-11637-178468949549301 `" && echo ansible-tmp-1749756365.371795-11637-178468949549301="` echo /home/user/.ansible/tmp/ansible-local-1163479ug3y_9/ansible-tmp-1749756365.371795-11637-178468949549301 `" ) && sleep 0'
2025-06-12 21:26:05,454 p=11637 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 21:26:05,454 p=11637 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 21:26:05,456 p=11637 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 21:26:05,481 p=11637 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible/modules/ping.py
2025-06-12 21:26:05,481 p=11637 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-1163479ug3y_9/tmpuvg7sft0 TO /home/user/.ansible/tmp/ansible-local-1163479ug3y_9/ansible-tmp-1749756365.371795-11637-178468949549301/AnsiballZ_ping.py
2025-06-12 21:26:05,482 p=11637 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-1163479ug3y_9/ansible-tmp-1749756365.371795-11637-178468949549301/ /home/user/.ansible/tmp/ansible-local-1163479ug3y_9/ansible-tmp-1749756365.371795-11637-178468949549301/AnsiballZ_ping.py && sleep 0'
2025-06-12 21:26:05,484 p=11637 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-1163479ug3y_9/ansible-tmp-1749756365.371795-11637-178468949549301/AnsiballZ_ping.py && sleep 0'
2025-06-12 21:26:05,582 p=11637 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-1163479ug3y_9/ansible-tmp-1749756365.371795-11637-178468949549301/ > /dev/null 2>&1 && sleep 0'
2025-06-12 21:26:05,587 p=11634 u=user n=ansible | 192.168.122.237 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "invocation": {
        "module_args": {
            "data": "pong"
        }
    },
    "ping": "pong"
}
2025-06-12 21:26:05,590 p=11634 u=user n=ansible | META: ran handlers
2025-06-12 21:26:05,592 p=11634 u=user n=ansible | META: ran handlers
2025-06-12 21:26:05,693 p=11641 u=user n=ansible | shutdown complete
2025-06-12 21:31:42,086 p=11706 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:31:42,096 p=11706 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:31:42,444 p=11709 u=user n=ansible | network_os is set to ios
2025-06-12 21:31:42,447 p=11706 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:31:42,449 p=11706 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:31:42,769 p=11706 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:31:42,773 p=11706 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:31:42,792 p=11706 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 21:31:42,795 p=11706 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:31:42,825 p=11706 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:31:43,132 p=11722 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:31:44,977 p=11706 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 21:31:44,979 p=11706 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:31:45,005 p=11706 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 21:31:45,016 p=11706 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 21:31:45,578 p=11713 u=user n=p=11713 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:31:47,852 p=11713 u=user n=p=11713 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 21:31:47,856 p=11713 u=user n=p=11713 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 21:31:47,974 p=11706 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 21:31:47,977 p=11706 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:31:47,977 p=11706 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:31:48,077 p=11713 u=user n=ansible | shutdown complete
2025-06-12 21:40:25,020 p=11815 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:40:25,028 p=11815 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:40:25,375 p=11818 u=user n=ansible | network_os is set to ios
2025-06-12 21:40:25,378 p=11815 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:40:25,381 p=11815 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:40:25,684 p=11815 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:40:25,686 p=11815 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:40:25,706 p=11815 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 21:40:25,709 p=11815 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:40:25,738 p=11815 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:40:26,035 p=11831 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:40:27,474 p=11815 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 21:40:27,476 p=11815 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:40:27,503 p=11815 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 21:40:27,513 p=11815 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 21:40:28,053 p=11822 u=user n=p=11822 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:40:30,321 p=11822 u=user n=p=11822 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 21:40:30,324 p=11822 u=user n=p=11822 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 21:40:30,443 p=11815 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 21:40:30,444 p=11815 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:40:30,444 p=11815 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:40:30,544 p=11822 u=user n=ansible | shutdown complete
2025-06-12 21:41:49,686 p=11882 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:41:49,686 p=11882 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:41:49,690 p=11882 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:41:49,690 p=11882 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:41:49,691 p=11882 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:41:49,692 p=11882 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:41:49,777 p=11882 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:41:49,783 p=11882 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:41:49,787 p=11882 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:41:49,787 p=11882 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:41:49,787 p=11882 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:41:49,787 p=11882 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml ***********************************************
2025-06-12 21:41:49,787 p=11882 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:41:49,789 p=11882 u=user n=ansible | PLAY [Détection de la technologie] *********************************************
2025-06-12 21:41:49,794 p=11882 u=user n=ansible | META: ran handlers
2025-06-12 21:41:49,796 p=11882 u=user n=ansible | TASK [Affichage de la technologie] *********************************************
2025-06-12 21:41:49,811 p=11886 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:41:49,822 p=11886 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:49,826 p=11886 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:49,828 p=11886 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:41:50,074 p=11890 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:41:50,087 p=11890 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:50,091 p=11890 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:50,138 p=11886 u=user n=ansible | network_os is set to ios
2025-06-12 21:41:50,141 p=11882 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:41:50,143 p=11882 u=user n=ansible | TASK [trouvé cisco] ************************************************************
2025-06-12 21:41:50,159 p=11892 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:41:50,167 p=11892 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:50,171 p=11892 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:50,174 p=11892 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:41:50,456 p=11882 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:41:50,458 p=11882 u=user n=ansible | TASK [trouvé pfsense] **********************************************************
2025-06-12 21:41:50,476 p=11882 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:41:50,478 p=11882 u=user n=ansible | TASK [Appareils Cisco] *********************************************************
2025-06-12 21:41:50,505 p=11882 u=user n=ansible | TASK [cisco : options taches utilisateur] **************************************
2025-06-12 21:41:50,509 p=11899 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:41:50,520 p=11899 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:50,525 p=11899 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:50,528 p=11899 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:41:50,803 p=11899 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:41:50,900 p=11882 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  delta: 0
  echo: true
  rc: 0
  start: '2025-06-12 21:41:50.803242'
  stderr: ''
  stdout: Paused for 0.0 minutes
  stop: '2025-06-12 21:41:50.898085'
  user_input: ''
2025-06-12 21:41:50,902 p=11882 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ************************
2025-06-12 21:41:50,921 p=11882 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:41:50,924 p=11882 u=user n=ansible | TASK [cisco : Correction de toute la configuration] ****************************
2025-06-12 21:41:50,941 p=11882 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:41:50,943 p=11882 u=user n=ansible | TASK [cisco : cherry-pick fzf] *************************************************
2025-06-12 21:41:50,961 p=11882 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:41:50,964 p=11882 u=user n=ansible | TASK [Appareils Pfsense] *******************************************************
2025-06-12 21:41:50,983 p=11882 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:41:50,985 p=11882 u=user n=ansible | META: ran handlers
2025-06-12 21:41:50,987 p=11882 u=user n=ansible | META: ran handlers
2025-06-12 21:41:50,987 p=11882 u=user n=ansible | PLAY RECAP *********************************************************************
2025-06-12 21:41:50,987 p=11882 u=user n=ansible | 192.168.122.237            : ok=3    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2025-06-12 21:41:56,480 p=11914 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:41:56,480 p=11914 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:41:56,483 p=11914 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:41:56,484 p=11914 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:41:56,485 p=11914 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:41:56,486 p=11914 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:41:56,570 p=11914 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:41:56,576 p=11914 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:41:56,580 p=11914 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:41:56,580 p=11914 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:41:56,580 p=11914 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:41:56,580 p=11914 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml ***********************************************
2025-06-12 21:41:56,580 p=11914 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:41:56,581 p=11914 u=user n=ansible | PLAY [Détection de la technologie] *********************************************
2025-06-12 21:41:56,587 p=11914 u=user n=ansible | META: ran handlers
2025-06-12 21:41:56,588 p=11914 u=user n=ansible | TASK [Affichage de la technologie] *********************************************
2025-06-12 21:41:56,604 p=11918 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:41:56,614 p=11918 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:56,618 p=11918 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:56,621 p=11918 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:41:56,881 p=11922 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:41:56,895 p=11922 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:56,899 p=11922 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:56,944 p=11918 u=user n=ansible | network_os is set to ios
2025-06-12 21:41:56,947 p=11914 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:41:56,949 p=11914 u=user n=ansible | TASK [trouvé cisco] ************************************************************
2025-06-12 21:41:56,964 p=11924 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:41:56,972 p=11924 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:56,976 p=11924 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:56,979 p=11924 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:41:57,248 p=11914 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:41:57,250 p=11914 u=user n=ansible | TASK [trouvé pfsense] **********************************************************
2025-06-12 21:41:57,268 p=11914 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:41:57,270 p=11914 u=user n=ansible | TASK [Appareils Cisco] *********************************************************
2025-06-12 21:41:57,297 p=11914 u=user n=ansible | TASK [cisco : options taches utilisateur] **************************************
2025-06-12 21:41:57,303 p=11931 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:41:57,313 p=11931 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:57,317 p=11931 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:41:57,320 p=11931 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:41:57,590 p=11931 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:41:57,634 p=11914 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  delta: 0
  echo: true
  rc: 0
  start: '2025-06-12 21:41:57.590832'
  stderr: ''
  stdout: Paused for 0.0 minutes
  stop: '2025-06-12 21:41:57.630998'
  user_input: ''
2025-06-12 21:41:57,636 p=11914 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ************************
2025-06-12 21:41:57,654 p=11914 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:41:57,656 p=11914 u=user n=ansible | TASK [cisco : Correction de toute la configuration] ****************************
2025-06-12 21:41:57,673 p=11914 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:41:57,675 p=11914 u=user n=ansible | TASK [cisco : cherry-pick fzf] *************************************************
2025-06-12 21:41:57,693 p=11914 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:41:57,696 p=11914 u=user n=ansible | TASK [Appareils Pfsense] *******************************************************
2025-06-12 21:41:57,713 p=11914 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:41:57,715 p=11914 u=user n=ansible | META: ran handlers
2025-06-12 21:41:57,717 p=11914 u=user n=ansible | META: ran handlers
2025-06-12 21:41:57,717 p=11914 u=user n=ansible | PLAY RECAP *********************************************************************
2025-06-12 21:41:57,717 p=11914 u=user n=ansible | 192.168.122.237            : ok=3    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2025-06-12 21:42:05,677 p=11943 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:42:05,677 p=11943 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:42:05,681 p=11943 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:42:05,681 p=11943 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:42:05,683 p=11943 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:42:05,683 p=11943 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:42:05,769 p=11943 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:42:05,775 p=11943 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:42:05,779 p=11943 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:42:05,779 p=11943 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:42:05,779 p=11943 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:42:05,779 p=11943 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml ***********************************************
2025-06-12 21:42:05,779 p=11943 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:42:05,781 p=11943 u=user n=ansible | PLAY [Détection de la technologie] *********************************************
2025-06-12 21:42:05,786 p=11943 u=user n=ansible | META: ran handlers
2025-06-12 21:42:05,788 p=11943 u=user n=ansible | TASK [Affichage de la technologie] *********************************************
2025-06-12 21:42:05,803 p=11947 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:42:05,812 p=11947 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:42:05,815 p=11947 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:42:05,818 p=11947 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:42:06,062 p=11951 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:42:06,075 p=11951 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:42:06,079 p=11951 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:42:06,125 p=11947 u=user n=ansible | network_os is set to ios
2025-06-12 21:42:06,128 p=11943 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:42:06,130 p=11943 u=user n=ansible | TASK [trouvé cisco] ************************************************************
2025-06-12 21:42:06,146 p=11953 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:42:06,155 p=11953 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:42:06,159 p=11953 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:42:06,161 p=11953 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:42:06,434 p=11943 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:42:06,437 p=11943 u=user n=ansible | TASK [trouvé pfsense] **********************************************************
2025-06-12 21:42:06,456 p=11943 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:42:06,458 p=11943 u=user n=ansible | TASK [Appareils Cisco] *********************************************************
2025-06-12 21:42:06,485 p=11943 u=user n=ansible | TASK [cisco : options taches utilisateur] **************************************
2025-06-12 21:42:06,490 p=11960 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:42:06,500 p=11960 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:42:06,504 p=11960 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:42:06,507 p=11960 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:42:06,792 p=11960 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:42:08,218 p=11943 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  delta: 1
  echo: true
  rc: 0
  start: '2025-06-12 21:42:06.792809'
  stderr: ''
  stdout: Paused for 0.02 minutes
  stop: '2025-06-12 21:42:08.215400'
  user_input: ''
2025-06-12 21:42:08,221 p=11943 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ************************
2025-06-12 21:42:08,240 p=11943 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:42:08,242 p=11943 u=user n=ansible | TASK [cisco : Correction de toute la configuration] ****************************
2025-06-12 21:42:08,259 p=11943 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:42:08,261 p=11943 u=user n=ansible | TASK [cisco : cherry-pick fzf] *************************************************
2025-06-12 21:42:08,281 p=11943 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:42:08,283 p=11943 u=user n=ansible | TASK [Appareils Pfsense] *******************************************************
2025-06-12 21:42:08,300 p=11943 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:42:08,302 p=11943 u=user n=ansible | META: ran handlers
2025-06-12 21:42:08,303 p=11943 u=user n=ansible | META: ran handlers
2025-06-12 21:42:08,304 p=11943 u=user n=ansible | PLAY RECAP *********************************************************************
2025-06-12 21:42:08,304 p=11943 u=user n=ansible | 192.168.122.237            : ok=3    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2025-06-12 21:42:20,775 p=11890 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 21:42:20,876 p=11890 u=user n=ansible | shutdown complete
2025-06-12 21:42:27,563 p=11922 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 21:42:27,664 p=11922 u=user n=ansible | shutdown complete
2025-06-12 21:42:35,442 p=11972 u=user n=ansible | {
    "R1": {
        "hosts": [
            "192.168.122.237"
        ]
    },
    "_meta": {
        "hostvars": {
            "192.168.122.237": {
                "ansible_connection": "network_cli",
                "ansible_network_os": "ios",
                "ansible_ssh_common_args": "-o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o PreferredAuthentications=publickey -o IdentitiesOnly=yes",
                "ansible_ssh_private_key_file": "/home/user/.ssh/id_rsa",
                "ansible_user": "ansible"
            }
        }
    },
    "all": {
        "children": [
            "routers",
            "switchs",
            "ungrouped"
        ]
    },
    "routers": {
        "children": [
            "R1"
        ]
    },
    "switchs": {
        "children": [
            "cisco_catalyst_9000"
        ]
    }
}
2025-06-12 21:42:36,765 p=11951 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 21:42:36,866 p=11951 u=user n=ansible | shutdown complete
2025-06-12 21:44:29,991 p=11985 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:44:29,991 p=11985 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:44:29,992 p=11985 u=user n=ansible | setting up inventory plugins
2025-06-12 21:44:29,995 p=11985 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:44:29,995 p=11985 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:44:29,997 p=11985 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:44:29,997 p=11985 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:44:30,084 p=11985 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:44:30,090 p=11985 u=user n=ansible | Loading collection community.general from /usr/lib/python3/dist-packages/ansible_collections/community/general
2025-06-12 21:44:30,090 p=11985 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:44:30,092 p=11985 u=user n=ansible | Loading callback plugin community.general.yaml of type stdout, v2.0 from /usr/lib/python3/dist-packages/ansible_collections/community/general/plugins/callback/yaml.py
2025-06-12 21:44:30,095 p=11985 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:44:30,095 p=11985 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:44:30,095 p=11985 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:44:30,095 p=11985 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml ***********************************************
2025-06-12 21:44:30,095 p=11985 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:44:30,096 p=11985 u=user n=ansible | PLAY [Détection de la technologie] *********************************************
2025-06-12 21:44:30,102 p=11985 u=user n=ansible | META: ran handlers
2025-06-12 21:44:30,103 p=11985 u=user n=ansible | TASK [Affichage de la technologie] *********************************************
2025-06-12 21:44:30,120 p=11989 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:30,121 p=11989 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:30,130 p=11989 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:30,132 p=11989 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:30,134 p=11989 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:30,137 p=11989 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:44:30,138 p=11989 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:44:30,138 p=11989 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:44:30,138 p=11989 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:44:30,388 p=11993 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:30,389 p=11993 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:30,403 p=11993 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:30,405 p=11993 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:30,407 p=11993 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:30,452 p=11989 u=user n=ansible | <192.168.122.237> local domain socket does not exist, starting it
2025-06-12 21:44:30,452 p=11989 u=user n=ansible | <192.168.122.237> control socket path is /home/user/.ansible/pc/ee4ad06bc5
2025-06-12 21:44:30,452 p=11989 u=user n=ansible | <192.168.122.237> redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:30,452 p=11989 u=user n=ansible | <192.168.122.237> Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:30,452 p=11989 u=user n=ansible | <192.168.122.237> redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:30,452 p=11989 u=user n=ansible | <192.168.122.237> Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:30,452 p=11989 u=user n=ansible | <192.168.122.237> redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:30,453 p=11989 u=user n=ansible | <192.168.122.237> local domain socket listeners started successfully
2025-06-12 21:44:30,453 p=11989 u=user n=ansible | <192.168.122.237> loaded cliconf plugin ansible_collections.cisco.ios.plugins.cliconf.ios from path /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py for network_os ios
2025-06-12 21:44:30,453 p=11989 u=user n=ansible | network_os is set to ios
2025-06-12 21:44:30,453 p=11989 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:44:30,453 p=11989 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/ee4ad06bc5
2025-06-12 21:44:30,455 p=11985 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:44:30,457 p=11985 u=user n=ansible | TASK [trouvé cisco] ************************************************************
2025-06-12 21:44:30,474 p=11995 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:30,475 p=11995 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:30,485 p=11995 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:30,487 p=11995 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:30,489 p=11995 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:30,492 p=11995 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:44:30,492 p=11995 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:44:30,492 p=11995 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:44:30,493 p=11995 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:44:30,770 p=11995 u=user n=ansible | <192.168.122.237> found existing local domain socket, using it!
2025-06-12 21:44:30,771 p=11995 u=user n=ansible | <192.168.122.237> updating play_context for connection
2025-06-12 21:44:30,771 p=11995 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:44:30,771 p=11995 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/ee4ad06bc5
2025-06-12 21:44:30,774 p=11985 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:44:30,776 p=11985 u=user n=ansible | TASK [trouvé pfsense] **********************************************************
2025-06-12 21:44:30,792 p=11985 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:44:30,795 p=11985 u=user n=ansible | TASK [Appareils Cisco] *********************************************************
2025-06-12 21:44:30,822 p=11985 u=user n=ansible | TASK [cisco : options taches utilisateur] **************************************
2025-06-12 21:44:30,827 p=12002 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:30,828 p=12002 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:30,836 p=12002 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:30,838 p=12002 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:30,840 p=12002 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:30,843 p=12002 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:44:30,843 p=12002 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:44:30,844 p=12002 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:44:30,844 p=12002 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:44:31,118 p=12002 u=user n=ansible | <192.168.122.237> found existing local domain socket, using it!
2025-06-12 21:44:31,118 p=12002 u=user n=ansible | <192.168.122.237> updating play_context for connection
2025-06-12 21:44:31,118 p=12002 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:44:31,118 p=12002 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/ee4ad06bc5
2025-06-12 21:44:31,120 p=12002 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:44:31,356 p=11985 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  delta: 0
  echo: true
  rc: 0
  start: '2025-06-12 21:44:31.120015'
  stderr: ''
  stdout: Paused for 0.0 minutes
  stop: '2025-06-12 21:44:31.352940'
  user_input: ''
2025-06-12 21:44:31,359 p=11985 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ************************
2025-06-12 21:44:31,378 p=11985 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:44:31,380 p=11985 u=user n=ansible | TASK [cisco : Correction de toute la configuration] ****************************
2025-06-12 21:44:31,400 p=11985 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:44:31,403 p=11985 u=user n=ansible | TASK [cisco : cherry-pick fzf] *************************************************
2025-06-12 21:44:31,439 p=11985 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:44:31,441 p=11985 u=user n=ansible | TASK [Appareils Pfsense] *******************************************************
2025-06-12 21:44:31,477 p=11985 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:44:31,479 p=11985 u=user n=ansible | META: ran handlers
2025-06-12 21:44:31,495 p=11985 u=user n=ansible | META: ran handlers
2025-06-12 21:44:31,496 p=11985 u=user n=ansible | PLAY RECAP *********************************************************************
2025-06-12 21:44:31,496 p=11985 u=user n=ansible | 192.168.122.237            : ok=3    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2025-06-12 21:44:34,900 p=12014 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:44:34,900 p=12014 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:44:34,900 p=12014 u=user n=ansible | setting up inventory plugins
2025-06-12 21:44:34,904 p=12014 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:44:34,904 p=12014 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:44:34,905 p=12014 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:44:34,906 p=12014 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:44:34,990 p=12014 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:44:34,996 p=12014 u=user n=ansible | Loading collection community.general from /usr/lib/python3/dist-packages/ansible_collections/community/general
2025-06-12 21:44:34,996 p=12014 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:44:34,998 p=12014 u=user n=ansible | Loading callback plugin community.general.yaml of type stdout, v2.0 from /usr/lib/python3/dist-packages/ansible_collections/community/general/plugins/callback/yaml.py
2025-06-12 21:44:35,000 p=12014 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:44:35,000 p=12014 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:44:35,000 p=12014 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:44:35,000 p=12014 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml ***********************************************
2025-06-12 21:44:35,001 p=12014 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:44:35,002 p=12014 u=user n=ansible | PLAY [Détection de la technologie] *********************************************
2025-06-12 21:44:35,007 p=12014 u=user n=ansible | META: ran handlers
2025-06-12 21:44:35,009 p=12014 u=user n=ansible | TASK [Affichage de la technologie] *********************************************
2025-06-12 21:44:35,025 p=12018 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:35,026 p=12018 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:35,036 p=12018 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:35,038 p=12018 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:35,040 p=12018 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:35,043 p=12018 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:44:35,044 p=12018 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:44:35,044 p=12018 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:44:35,044 p=12018 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:44:35,305 p=12022 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:35,307 p=12022 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:35,320 p=12022 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:35,321 p=12022 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:35,324 p=12022 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:35,364 p=12018 u=user n=ansible | <192.168.122.237> local domain socket does not exist, starting it
2025-06-12 21:44:35,364 p=12018 u=user n=ansible | <192.168.122.237> control socket path is /home/user/.ansible/pc/d2c7b41078
2025-06-12 21:44:35,364 p=12018 u=user n=ansible | <192.168.122.237> redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:35,364 p=12018 u=user n=ansible | <192.168.122.237> Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:35,364 p=12018 u=user n=ansible | <192.168.122.237> redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:35,364 p=12018 u=user n=ansible | <192.168.122.237> Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:35,364 p=12018 u=user n=ansible | <192.168.122.237> redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:35,364 p=12018 u=user n=ansible | <192.168.122.237> local domain socket listeners started successfully
2025-06-12 21:44:35,364 p=12018 u=user n=ansible | <192.168.122.237> loaded cliconf plugin ansible_collections.cisco.ios.plugins.cliconf.ios from path /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py for network_os ios
2025-06-12 21:44:35,364 p=12018 u=user n=ansible | network_os is set to ios
2025-06-12 21:44:35,364 p=12018 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:44:35,364 p=12018 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/d2c7b41078
2025-06-12 21:44:35,367 p=12014 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:44:35,369 p=12014 u=user n=ansible | TASK [trouvé cisco] ************************************************************
2025-06-12 21:44:35,385 p=12024 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:35,386 p=12024 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:35,395 p=12024 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:35,397 p=12024 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:35,400 p=12024 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:35,403 p=12024 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:44:35,404 p=12024 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:44:35,404 p=12024 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:44:35,404 p=12024 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:44:35,681 p=12024 u=user n=ansible | <192.168.122.237> found existing local domain socket, using it!
2025-06-12 21:44:35,681 p=12024 u=user n=ansible | <192.168.122.237> updating play_context for connection
2025-06-12 21:44:35,681 p=12024 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:44:35,681 p=12024 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/d2c7b41078
2025-06-12 21:44:35,684 p=12014 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:44:35,686 p=12014 u=user n=ansible | TASK [trouvé pfsense] **********************************************************
2025-06-12 21:44:35,703 p=12014 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:44:35,705 p=12014 u=user n=ansible | TASK [Appareils Cisco] *********************************************************
2025-06-12 21:44:35,732 p=12014 u=user n=ansible | TASK [cisco : options taches utilisateur] **************************************
2025-06-12 21:44:35,737 p=12031 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:35,738 p=12031 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:35,748 p=12031 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:35,750 p=12031 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:35,752 p=12031 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:35,755 p=12031 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:44:35,755 p=12031 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:44:35,756 p=12031 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:44:35,756 p=12031 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:44:36,030 p=12031 u=user n=ansible | <192.168.122.237> found existing local domain socket, using it!
2025-06-12 21:44:36,031 p=12031 u=user n=ansible | <192.168.122.237> updating play_context for connection
2025-06-12 21:44:36,031 p=12031 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:44:36,031 p=12031 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/d2c7b41078
2025-06-12 21:44:36,032 p=12031 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:44:36,620 p=12014 u=user n=ansible | ok: [192.168.122.237] => changed=false 
  delta: 0
  echo: true
  rc: 0
  start: '2025-06-12 21:44:36.032183'
  stderr: ''
  stdout: Paused for 0.01 minutes
  stop: '2025-06-12 21:44:36.617806'
  user_input: ''
2025-06-12 21:44:36,623 p=12014 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ************************
2025-06-12 21:44:36,642 p=12014 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:44:36,645 p=12014 u=user n=ansible | TASK [cisco : Correction de toute la configuration] ****************************
2025-06-12 21:44:36,663 p=12014 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:44:36,666 p=12014 u=user n=ansible | TASK [cisco : cherry-pick fzf] *************************************************
2025-06-12 21:44:36,684 p=12014 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:44:36,686 p=12014 u=user n=ansible | TASK [Appareils Pfsense] *******************************************************
2025-06-12 21:44:36,704 p=12014 u=user n=ansible | skipping: [192.168.122.237] => changed=false 
  skip_reason: Conditional result was False
2025-06-12 21:44:36,706 p=12014 u=user n=ansible | META: ran handlers
2025-06-12 21:44:36,708 p=12014 u=user n=ansible | META: ran handlers
2025-06-12 21:44:36,709 p=12014 u=user n=ansible | PLAY RECAP *********************************************************************
2025-06-12 21:44:36,709 p=12014 u=user n=ansible | 192.168.122.237            : ok=3    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2025-06-12 21:44:40,130 p=12043 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:44:40,130 p=12043 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:44:40,131 p=12043 u=user n=ansible | setting up inventory plugins
2025-06-12 21:44:40,134 p=12043 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:44:40,134 p=12043 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:44:40,136 p=12043 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:44:40,136 p=12043 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:44:40,221 p=12043 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:44:40,226 p=12043 u=user n=ansible | Loading collection community.general from /usr/lib/python3/dist-packages/ansible_collections/community/general
2025-06-12 21:44:40,227 p=12043 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:44:40,228 p=12043 u=user n=ansible | Loading callback plugin community.general.yaml of type stdout, v2.0 from /usr/lib/python3/dist-packages/ansible_collections/community/general/plugins/callback/yaml.py
2025-06-12 21:44:40,231 p=12043 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:44:40,231 p=12043 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:44:40,231 p=12043 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:44:40,231 p=12043 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml ***********************************************
2025-06-12 21:44:40,231 p=12043 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:44:40,232 p=12043 u=user n=ansible | PLAY [Détection de la technologie] *********************************************
2025-06-12 21:44:40,238 p=12043 u=user n=ansible | META: ran handlers
2025-06-12 21:44:40,239 p=12043 u=user n=ansible | TASK [Affichage de la technologie] *********************************************
2025-06-12 21:44:40,254 p=12047 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:40,255 p=12047 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:40,263 p=12047 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:40,265 p=12047 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:40,266 p=12047 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:40,269 p=12047 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:44:40,270 p=12047 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:44:40,270 p=12047 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:44:40,270 p=12047 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:44:40,517 p=12051 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:40,519 p=12051 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:40,532 p=12051 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:40,534 p=12051 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:40,536 p=12051 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:40,579 p=12047 u=user n=ansible | <192.168.122.237> local domain socket does not exist, starting it
2025-06-12 21:44:40,579 p=12047 u=user n=ansible | <192.168.122.237> control socket path is /home/user/.ansible/pc/b5a876bbe4
2025-06-12 21:44:40,579 p=12047 u=user n=ansible | <192.168.122.237> redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:40,580 p=12047 u=user n=ansible | <192.168.122.237> Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:40,580 p=12047 u=user n=ansible | <192.168.122.237> redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:40,580 p=12047 u=user n=ansible | <192.168.122.237> Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:40,580 p=12047 u=user n=ansible | <192.168.122.237> redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:40,580 p=12047 u=user n=ansible | <192.168.122.237> local domain socket listeners started successfully
2025-06-12 21:44:40,580 p=12047 u=user n=ansible | <192.168.122.237> loaded cliconf plugin ansible_collections.cisco.ios.plugins.cliconf.ios from path /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py for network_os ios
2025-06-12 21:44:40,580 p=12047 u=user n=ansible | network_os is set to ios
2025-06-12 21:44:40,580 p=12047 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:44:40,580 p=12047 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/b5a876bbe4
2025-06-12 21:44:40,583 p=12043 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:44:40,585 p=12043 u=user n=ansible | TASK [trouvé cisco] ************************************************************
2025-06-12 21:44:40,601 p=12053 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:40,602 p=12053 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:40,612 p=12053 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:40,615 p=12053 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:40,617 p=12053 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:40,620 p=12053 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:44:40,620 p=12053 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:44:40,621 p=12053 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:44:40,621 p=12053 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:44:40,905 p=12053 u=user n=ansible | <192.168.122.237> found existing local domain socket, using it!
2025-06-12 21:44:40,905 p=12053 u=user n=ansible | <192.168.122.237> updating play_context for connection
2025-06-12 21:44:40,905 p=12053 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:44:40,905 p=12053 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/b5a876bbe4
2025-06-12 21:44:40,909 p=12043 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:44:40,912 p=12043 u=user n=ansible | TASK [trouvé pfsense] **********************************************************
2025-06-12 21:44:40,930 p=12043 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:44:40,932 p=12043 u=user n=ansible | TASK [Appareils Cisco] *********************************************************
2025-06-12 21:44:40,959 p=12043 u=user n=ansible | TASK [cisco : options taches utilisateur] **************************************
2025-06-12 21:44:40,964 p=12060 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:40,965 p=12060 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:40,974 p=12060 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:40,976 p=12060 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:40,978 p=12060 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:40,980 p=12060 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:44:40,981 p=12060 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:44:40,981 p=12060 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:44:40,981 p=12060 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:44:41,253 p=12060 u=user n=ansible | <192.168.122.237> found existing local domain socket, using it!
2025-06-12 21:44:41,253 p=12060 u=user n=ansible | <192.168.122.237> updating play_context for connection
2025-06-12 21:44:41,253 p=12060 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:44:41,253 p=12060 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/b5a876bbe4
2025-06-12 21:44:41,254 p=12060 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:44:49,807 p=12060 u=user n=ansible | Press 'C' to continue the play or 'A' to abort 
2025-06-12 21:44:53,499 p=12043 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => 
  msg: user requested abort!
2025-06-12 21:44:53,500 p=12043 u=user n=ansible | NO MORE HOSTS LEFT *************************************************************
2025-06-12 21:44:53,501 p=12043 u=user n=ansible | PLAY RECAP *********************************************************************
2025-06-12 21:44:53,501 p=12043 u=user n=ansible | 192.168.122.237            : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:44:57,849 p=12069 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:44:57,849 p=12069 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:44:57,849 p=12069 u=user n=ansible | setting up inventory plugins
2025-06-12 21:44:57,853 p=12069 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:44:57,853 p=12069 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:44:57,854 p=12069 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:44:57,855 p=12069 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:44:57,938 p=12069 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:44:57,944 p=12069 u=user n=ansible | Loading collection community.general from /usr/lib/python3/dist-packages/ansible_collections/community/general
2025-06-12 21:44:57,944 p=12069 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:44:57,946 p=12069 u=user n=ansible | Loading callback plugin community.general.yaml of type stdout, v2.0 from /usr/lib/python3/dist-packages/ansible_collections/community/general/plugins/callback/yaml.py
2025-06-12 21:44:57,948 p=12069 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:44:57,948 p=12069 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:44:57,948 p=12069 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:44:57,949 p=12069 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml ***********************************************
2025-06-12 21:44:57,949 p=12069 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:44:57,950 p=12069 u=user n=ansible | PLAY [Détection de la technologie] *********************************************
2025-06-12 21:44:57,955 p=12069 u=user n=ansible | META: ran handlers
2025-06-12 21:44:57,957 p=12069 u=user n=ansible | TASK [Affichage de la technologie] *********************************************
2025-06-12 21:44:57,972 p=12073 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:57,973 p=12073 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:57,981 p=12073 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:57,982 p=12073 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:57,984 p=12073 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:57,987 p=12073 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:44:57,988 p=12073 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:44:57,988 p=12073 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:44:57,988 p=12073 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:44:58,232 p=12077 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:58,234 p=12077 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:58,245 p=12077 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:58,247 p=12077 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:58,249 p=12077 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:58,292 p=12073 u=user n=ansible | <192.168.122.237> local domain socket does not exist, starting it
2025-06-12 21:44:58,293 p=12073 u=user n=ansible | <192.168.122.237> control socket path is /home/user/.ansible/pc/fe9580ddff
2025-06-12 21:44:58,293 p=12073 u=user n=ansible | <192.168.122.237> redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:58,293 p=12073 u=user n=ansible | <192.168.122.237> Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:58,293 p=12073 u=user n=ansible | <192.168.122.237> redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:58,293 p=12073 u=user n=ansible | <192.168.122.237> Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:58,293 p=12073 u=user n=ansible | <192.168.122.237> redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:58,293 p=12073 u=user n=ansible | <192.168.122.237> local domain socket listeners started successfully
2025-06-12 21:44:58,293 p=12073 u=user n=ansible | <192.168.122.237> loaded cliconf plugin ansible_collections.cisco.ios.plugins.cliconf.ios from path /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py for network_os ios
2025-06-12 21:44:58,293 p=12073 u=user n=ansible | network_os is set to ios
2025-06-12 21:44:58,293 p=12073 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:44:58,293 p=12073 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/fe9580ddff
2025-06-12 21:44:58,297 p=12069 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:44:58,299 p=12069 u=user n=ansible | TASK [trouvé cisco] ************************************************************
2025-06-12 21:44:58,315 p=12079 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:58,317 p=12079 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:58,325 p=12079 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:58,327 p=12079 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:58,329 p=12079 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:58,331 p=12079 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:44:58,332 p=12079 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:44:58,332 p=12079 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:44:58,332 p=12079 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:44:58,615 p=12079 u=user n=ansible | <192.168.122.237> found existing local domain socket, using it!
2025-06-12 21:44:58,615 p=12079 u=user n=ansible | <192.168.122.237> updating play_context for connection
2025-06-12 21:44:58,615 p=12079 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:44:58,615 p=12079 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/fe9580ddff
2025-06-12 21:44:58,618 p=12069 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:44:58,620 p=12069 u=user n=ansible | TASK [trouvé pfsense] **********************************************************
2025-06-12 21:44:58,638 p=12069 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:44:58,640 p=12069 u=user n=ansible | TASK [Appareils Cisco] *********************************************************
2025-06-12 21:44:58,667 p=12069 u=user n=ansible | TASK [cisco : options taches utilisateur] **************************************
2025-06-12 21:44:58,672 p=12086 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:44:58,673 p=12086 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:44:58,681 p=12086 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:58,684 p=12086 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:44:58,686 p=12086 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:44:58,689 p=12086 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:44:58,689 p=12086 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:44:58,690 p=12086 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:44:58,690 p=12086 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:44:58,957 p=12086 u=user n=ansible | <192.168.122.237> found existing local domain socket, using it!
2025-06-12 21:44:58,957 p=12086 u=user n=ansible | <192.168.122.237> updating play_context for connection
2025-06-12 21:44:58,957 p=12086 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:44:58,957 p=12086 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/fe9580ddff
2025-06-12 21:44:58,958 p=12086 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:45:01,090 p=11993 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 21:45:01,191 p=11993 u=user n=ansible | shutdown complete
2025-06-12 21:45:05,997 p=12022 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 21:45:06,098 p=12022 u=user n=ansible | shutdown complete
2025-06-12 21:45:11,226 p=12051 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 21:45:11,327 p=12051 u=user n=ansible | shutdown complete
2025-06-12 21:45:28,930 p=12077 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 21:45:29,032 p=12077 u=user n=ansible | shutdown complete
2025-06-12 21:46:12,746 p=12086 u=user n=ansible | Press 'C' to continue the play or 'A' to abort 
2025-06-12 21:46:36,809 p=12069 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => 
  msg: user requested abort!
2025-06-12 21:46:36,809 p=12069 u=user n=ansible | NO MORE HOSTS LEFT *************************************************************
2025-06-12 21:46:36,810 p=12069 u=user n=ansible | PLAY RECAP *********************************************************************
2025-06-12 21:46:36,810 p=12069 u=user n=ansible | 192.168.122.237            : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:46:43,129 p=12097 u=user n=ansible | {
    "R1": {
        "hosts": [
            "192.168.122.237"
        ]
    },
    "_meta": {
        "hostvars": {
            "192.168.122.237": {
                "ansible_connection": "network_cli",
                "ansible_network_os": "ios",
                "ansible_ssh_common_args": "-o KexAlgorithms=+diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o PreferredAuthentications=publickey -o IdentitiesOnly=yes",
                "ansible_ssh_private_key_file": "/home/user/.ssh/id_rsa",
                "ansible_user": "ansible"
            }
        }
    },
    "all": {
        "children": [
            "routers",
            "switchs",
            "ungrouped"
        ]
    },
    "routers": {
        "children": [
            "R1"
        ]
    },
    "switchs": {
        "children": [
            "cisco_catalyst_9000"
        ]
    }
}
2025-06-12 21:54:11,316 p=12150 u=user n=ansible | ansible-playbook 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 21:54:11,316 p=12150 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 21:54:11,317 p=12150 u=user n=ansible | setting up inventory plugins
2025-06-12 21:54:11,320 p=12150 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:54:11,320 p=12150 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 21:54:11,322 p=12150 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 21:54:11,322 p=12150 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 21:54:11,411 p=12150 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:54:11,417 p=12150 u=user n=ansible | Loading collection community.general from /usr/lib/python3/dist-packages/ansible_collections/community/general
2025-06-12 21:54:11,417 p=12150 u=user n=ansible | redirecting (type: callback) ansible.builtin.yaml to community.general.yaml
2025-06-12 21:54:11,419 p=12150 u=user n=ansible | Loading callback plugin community.general.yaml of type stdout, v2.0 from /usr/lib/python3/dist-packages/ansible_collections/community/general/plugins/callback/yaml.py
2025-06-12 21:54:11,421 p=12150 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 21:54:11,421 p=12150 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 21:54:11,422 p=12150 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 21:54:11,422 p=12150 u=user n=ansible | PLAYBOOK: playbook_detect_OS.yml ***********************************************
2025-06-12 21:54:11,422 p=12150 u=user n=ansible | 1 plays in playbook_detect_OS.yml
2025-06-12 21:54:11,423 p=12150 u=user n=ansible | PLAY [Détection de la technologie] *********************************************
2025-06-12 21:54:11,429 p=12150 u=user n=ansible | META: ran handlers
2025-06-12 21:54:11,431 p=12150 u=user n=ansible | TASK [Affichage de la technologie] *********************************************
2025-06-12 21:54:11,447 p=12155 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:54:11,448 p=12155 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:54:11,457 p=12155 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:54:11,459 p=12155 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:54:11,461 p=12155 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:54:11,463 p=12155 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:54:11,464 p=12155 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:54:11,464 p=12155 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:54:11,464 p=12155 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:54:11,706 p=12159 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:54:11,708 p=12159 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:54:11,721 p=12159 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:54:11,723 p=12159 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:54:11,725 p=12159 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:54:11,766 p=12155 u=user n=ansible | <192.168.122.237> local domain socket does not exist, starting it
2025-06-12 21:54:11,766 p=12155 u=user n=ansible | <192.168.122.237> control socket path is /home/user/.ansible/pc/6e8b31dbbd
2025-06-12 21:54:11,766 p=12155 u=user n=ansible | <192.168.122.237> redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:54:11,766 p=12155 u=user n=ansible | <192.168.122.237> Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:54:11,766 p=12155 u=user n=ansible | <192.168.122.237> redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:54:11,766 p=12155 u=user n=ansible | <192.168.122.237> Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:54:11,766 p=12155 u=user n=ansible | <192.168.122.237> redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:54:11,767 p=12155 u=user n=ansible | <192.168.122.237> local domain socket listeners started successfully
2025-06-12 21:54:11,767 p=12155 u=user n=ansible | <192.168.122.237> loaded cliconf plugin ansible_collections.cisco.ios.plugins.cliconf.ios from path /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py for network_os ios
2025-06-12 21:54:11,767 p=12155 u=user n=ansible | network_os is set to ios
2025-06-12 21:54:11,767 p=12155 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:54:11,767 p=12155 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/6e8b31dbbd
2025-06-12 21:54:11,771 p=12150 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:54:11,773 p=12150 u=user n=ansible | TASK [trouvé cisco] ************************************************************
2025-06-12 21:54:11,789 p=12161 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:54:11,790 p=12161 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:54:11,799 p=12161 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:54:11,801 p=12161 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:54:11,803 p=12161 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:54:11,806 p=12161 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:54:11,806 p=12161 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:54:11,806 p=12161 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:54:11,807 p=12161 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:54:12,090 p=12161 u=user n=ansible | <192.168.122.237> found existing local domain socket, using it!
2025-06-12 21:54:12,090 p=12161 u=user n=ansible | <192.168.122.237> updating play_context for connection
2025-06-12 21:54:12,090 p=12161 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:54:12,091 p=12161 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/6e8b31dbbd
2025-06-12 21:54:12,094 p=12150 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:54:12,096 p=12150 u=user n=ansible | TASK [trouvé pfsense] **********************************************************
2025-06-12 21:54:12,113 p=12150 u=user n=ansible | skipping: [192.168.122.237] => 
2025-06-12 21:54:12,116 p=12150 u=user n=ansible | TASK [Appareils Cisco] *********************************************************
2025-06-12 21:54:12,143 p=12150 u=user n=ansible | TASK [cisco : options taches utilisateur] **************************************
2025-06-12 21:54:12,149 p=12168 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 21:54:12,150 p=12168 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 21:54:12,159 p=12168 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:54:12,162 p=12168 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 21:54:12,164 p=12168 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 21:54:12,167 p=12168 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 21:54:12,167 p=12168 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 21:54:12,167 p=12168 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 21:54:12,168 p=12168 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 21:54:12,431 p=12168 u=user n=ansible | <192.168.122.237> found existing local domain socket, using it!
2025-06-12 21:54:12,431 p=12168 u=user n=ansible | <192.168.122.237> updating play_context for connection
2025-06-12 21:54:12,431 p=12168 u=user n=ansible | <192.168.122.237> 
2025-06-12 21:54:12,431 p=12168 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/6e8b31dbbd
2025-06-12 21:54:12,432 p=12168 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:54:16,590 p=12168 u=user n=ansible | Press 'C' to continue the play or 'A' to abort 
2025-06-12 21:54:42,403 p=12159 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 21:54:42,504 p=12159 u=user n=ansible | shutdown complete
2025-06-12 21:54:48,886 p=12150 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => 
  msg: user requested abort!
2025-06-12 21:54:48,886 p=12150 u=user n=ansible | NO MORE HOSTS LEFT *************************************************************
2025-06-12 21:54:48,887 p=12150 u=user n=ansible | PLAY RECAP *********************************************************************
2025-06-12 21:54:48,887 p=12150 u=user n=ansible | 192.168.122.237            : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:54:52,775 p=12174 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:54:52,781 p=12174 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:54:53,124 p=12178 u=user n=ansible | network_os is set to ios
2025-06-12 21:54:53,129 p=12174 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:54:53,131 p=12174 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:54:53,455 p=12174 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:54:53,457 p=12174 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:54:53,473 p=12174 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 21:54:53,476 p=12174 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:54:53,503 p=12174 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:54:53,793 p=12191 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:54:55,681 p=12174 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 21:54:55,683 p=12174 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:54:55,710 p=12174 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 21:54:55,720 p=12174 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 21:54:56,259 p=12182 u=user n=p=12182 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:54:58,526 p=12182 u=user n=p=12182 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 21:54:58,529 p=12182 u=user n=p=12182 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 21:54:58,645 p=12174 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 21:54:58,647 p=12174 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:54:58,647 p=12174 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:54:58,747 p=12182 u=user n=ansible | shutdown complete
2025-06-12 21:55:37,097 p=12233 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:55:37,105 p=12233 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:55:37,437 p=12237 u=user n=ansible | network_os is set to ios
2025-06-12 21:55:37,440 p=12233 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:55:37,442 p=12233 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:55:37,746 p=12233 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:55:37,748 p=12233 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:55:37,766 p=12233 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 21:55:37,768 p=12233 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:55:37,793 p=12233 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:55:38,098 p=12250 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:55:39,855 p=12233 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 21:55:39,857 p=12233 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:55:39,883 p=12233 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 21:55:39,892 p=12233 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 21:55:40,435 p=12241 u=user n=p=12241 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:55:42,704 p=12241 u=user n=p=12241 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 21:55:42,707 p=12241 u=user n=p=12241 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 21:55:42,827 p=12233 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 21:55:42,829 p=12233 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:55:42,829 p=12233 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:55:42,929 p=12241 u=user n=ansible | shutdown complete
2025-06-12 21:57:34,694 p=12302 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:57:34,701 p=12302 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:57:35,032 p=12306 u=user n=ansible | network_os is set to ios
2025-06-12 21:57:35,035 p=12302 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:57:35,038 p=12302 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:57:35,336 p=12302 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:57:35,338 p=12302 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:57:35,357 p=12302 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 21:57:35,359 p=12302 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:57:35,385 p=12302 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:57:35,687 p=12319 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:57:36,942 p=12302 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 21:57:36,944 p=12302 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:57:36,970 p=12302 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 21:57:36,980 p=12302 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 21:57:37,499 p=12310 u=user n=p=12310 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:57:39,769 p=12310 u=user n=p=12310 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 21:57:39,772 p=12310 u=user n=p=12310 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 21:57:39,889 p=12302 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 21:57:39,891 p=12302 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:57:39,891 p=12302 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:57:39,991 p=12310 u=user n=ansible | shutdown complete
2025-06-12 21:59:05,345 p=12372 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:59:05,352 p=12372 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:59:05,685 p=12376 u=user n=ansible | network_os is set to ios
2025-06-12 21:59:05,688 p=12372 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:59:05,691 p=12372 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:59:05,995 p=12372 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:59:05,997 p=12372 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:59:06,016 p=12372 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 21:59:06,018 p=12372 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:59:06,045 p=12372 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:59:06,353 p=12389 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:59:07,563 p=12372 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 21:59:07,565 p=12372 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:59:07,584 p=12372 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 21:59:07,587 p=12372 u=user n=ansible | TASK [cisco : Correction de toute la configuration] ************************************************************************************************
2025-06-12 21:59:07,605 p=12372 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 21:59:07,608 p=12372 u=user n=ansible | TASK [cisco : cherry-pick fzf] *********************************************************************************************************************
2025-06-12 21:59:07,628 p=12372 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 21:59:07,631 p=12372 u=user n=ansible | TASK [Appareils Pfsense] ***************************************************************************************************************************
2025-06-12 21:59:07,649 p=12372 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 21:59:07,654 p=12372 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:59:07,654 p=12372 u=user n=ansible | 192.168.122.237            : ok=3    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2025-06-12 21:59:10,210 p=12401 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 21:59:10,217 p=12401 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 21:59:10,549 p=12405 u=user n=ansible | network_os is set to ios
2025-06-12 21:59:10,553 p=12401 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 21:59:10,554 p=12401 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 21:59:10,859 p=12401 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 21:59:10,861 p=12401 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 21:59:10,879 p=12401 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 21:59:10,882 p=12401 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 21:59:10,909 p=12401 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 21:59:11,204 p=12418 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 21:59:12,499 p=12401 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 21:59:12,502 p=12401 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 21:59:12,526 p=12401 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 21:59:12,536 p=12401 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 21:59:13,050 p=12409 u=user n=p=12409 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 21:59:15,564 p=12409 u=user n=p=12409 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 21:59:15,568 p=12409 u=user n=p=12409 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 21:59:15,721 p=12401 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 21:59:15,727 p=12401 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 21:59:15,727 p=12401 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 21:59:15,823 p=12409 u=user n=ansible | shutdown complete
2025-06-12 21:59:36,325 p=12380 u=user n=ansible | persistent connection idle timeout triggered, timeout value is 30 secs.
See the timeout setting options in the Network Debug and Troubleshooting Guide.
2025-06-12 21:59:36,426 p=12380 u=user n=ansible | shutdown complete
2025-06-12 22:01:12,170 p=12521 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 22:01:12,177 p=12521 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 22:01:12,503 p=12525 u=user n=ansible | network_os is set to ios
2025-06-12 22:01:12,506 p=12521 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 22:01:12,508 p=12521 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 22:01:12,826 p=12521 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 22:01:12,828 p=12521 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 22:01:12,847 p=12521 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 22:01:12,850 p=12521 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 22:01:12,876 p=12521 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 22:01:13,167 p=12538 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 22:01:14,470 p=12521 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 22:01:14,473 p=12521 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 22:01:14,497 p=12521 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 22:01:14,507 p=12521 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 22:01:15,020 p=12529 u=user n=p=12529 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 22:01:17,519 p=12529 u=user n=p=12529 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 22:01:17,524 p=12529 u=user n=p=12529 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 22:01:17,810 p=12521 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 22:01:17,820 p=12521 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 22:01:17,821 p=12521 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 22:01:17,912 p=12529 u=user n=ansible | shutdown complete
2025-06-12 22:04:10,074 p=12595 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 22:04:10,081 p=12595 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 22:04:10,417 p=12598 u=user n=ansible | network_os is set to ios
2025-06-12 22:04:10,421 p=12595 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 22:04:10,423 p=12595 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 22:04:10,748 p=12595 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 22:04:10,750 p=12595 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 22:04:10,768 p=12595 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 22:04:10,770 p=12595 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 22:04:10,797 p=12595 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 22:04:11,094 p=12611 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 22:04:13,154 p=12595 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 22:04:13,156 p=12595 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 22:04:13,182 p=12595 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 22:04:13,191 p=12595 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 22:04:13,741 p=12602 u=user n=p=12602 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 22:04:16,095 p=12602 u=user n=p=12602 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 22:04:16,099 p=12602 u=user n=p=12602 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 22:04:16,228 p=12595 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 22:04:16,229 p=12595 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 22:04:16,230 p=12595 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 22:04:16,330 p=12602 u=user n=ansible | shutdown complete
2025-06-12 22:06:55,670 p=12674 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 22:06:55,677 p=12674 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 22:06:56,007 p=12676 u=user n=ansible | network_os is set to ios
2025-06-12 22:06:56,011 p=12674 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 22:06:56,013 p=12674 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 22:06:56,330 p=12674 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 22:06:56,332 p=12674 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 22:06:56,349 p=12674 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 22:06:56,351 p=12674 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 22:06:56,378 p=12674 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 22:06:56,668 p=12689 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 22:07:00,111 p=12674 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 22:07:00,113 p=12674 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 22:07:00,139 p=12674 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 22:07:00,149 p=12674 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 22:07:00,708 p=12680 u=user n=p=12680 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 22:07:02,992 p=12680 u=user n=p=12680 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 22:07:02,997 p=12680 u=user n=p=12680 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 22:07:03,118 p=12674 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 22:07:03,119 p=12674 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 22:07:03,119 p=12674 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 22:07:03,219 p=12680 u=user n=ansible | shutdown complete
2025-06-12 22:09:12,958 p=12749 u=user n=ansible | PLAY [Détection de la technologie] *****************************************************************************************************************
2025-06-12 22:09:12,966 p=12749 u=user n=ansible | TASK [Affichage de la technologie] *****************************************************************************************************************
2025-06-12 22:09:13,298 p=12751 u=user n=ansible | network_os is set to ios
2025-06-12 22:09:13,301 p=12749 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 22:09:13,303 p=12749 u=user n=ansible | TASK [trouvé cisco] ********************************************************************************************************************************
2025-06-12 22:09:13,603 p=12749 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 22:09:13,605 p=12749 u=user n=ansible | TASK [trouvé pfsense] ******************************************************************************************************************************
2025-06-12 22:09:13,624 p=12749 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 22:09:13,626 p=12749 u=user n=ansible | TASK [Appareils Cisco] *****************************************************************************************************************************
2025-06-12 22:09:13,652 p=12749 u=user n=ansible | TASK [cisco : options taches utilisateur] **********************************************************************************************************
2025-06-12 22:09:13,956 p=12764 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 22:09:15,307 p=12749 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 22:09:15,309 p=12749 u=user n=ansible | TASK [cisco : récupération de la configuration machine] ********************************************************************************************
2025-06-12 22:09:15,336 p=12749 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 22:09:15,346 p=12749 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] *************************************************************************************
2025-06-12 22:09:15,872 p=12755 u=user n=p=12755 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 22:09:18,166 p=12755 u=user n=p=12755 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 22:09:18,170 p=12755 u=user n=p=12755 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 22:09:18,288 p=12749 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 22:09:18,289 p=12749 u=user n=ansible | PLAY RECAP *****************************************************************************************************************************************
2025-06-12 22:09:18,289 p=12749 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 22:09:18,389 p=12755 u=user n=ansible | shutdown complete
2025-06-12 22:29:44,112 p=13117 u=user n=ansible | PLAY [Détection de la technologie] **********************************************
2025-06-12 22:29:44,119 p=13117 u=user n=ansible | TASK [Affichage de la technologie] **********************************************
2025-06-12 22:29:44,452 p=13119 u=user n=ansible | network_os is set to ios
2025-06-12 22:29:44,456 p=13117 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 22:29:44,458 p=13117 u=user n=ansible | TASK [trouvé cisco] *************************************************************
2025-06-12 22:29:44,775 p=13117 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 22:29:44,777 p=13117 u=user n=ansible | TASK [trouvé pfsense] ***********************************************************
2025-06-12 22:29:44,796 p=13117 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 22:29:44,798 p=13117 u=user n=ansible | TASK [Appareils Cisco] **********************************************************
2025-06-12 22:29:44,826 p=13117 u=user n=ansible | TASK [cisco : options taches utilisateur] ***************************************
2025-06-12 22:29:45,114 p=13132 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 22:29:46,151 p=13117 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 22:29:46,153 p=13117 u=user n=ansible | TASK [cisco : récupération de la configuration machine] *************************
2025-06-12 22:29:46,179 p=13117 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 22:29:46,188 p=13117 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] ******************
2025-06-12 22:29:46,711 p=13123 u=user n=p=13123 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 22:29:48,995 p=13123 u=user n=p=13123 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 22:29:48,999 p=13123 u=user n=p=13123 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 22:29:49,114 p=13117 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 22:29:49,116 p=13117 u=user n=ansible | PLAY RECAP **********************************************************************
2025-06-12 22:29:49,116 p=13117 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 22:29:49,216 p=13123 u=user n=ansible | shutdown complete
2025-06-12 23:14:36,033 p=13504 u=user n=ansible | PLAY [Détection de la technologie] **********************************************
2025-06-12 23:14:36,040 p=13504 u=user n=ansible | TASK [Affichage de la technologie] **********************************************
2025-06-12 23:14:36,387 p=13506 u=user n=ansible | network_os is set to ios
2025-06-12 23:14:36,390 p=13504 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 23:14:36,392 p=13504 u=user n=ansible | TASK [trouvé cisco] *************************************************************
2025-06-12 23:14:36,712 p=13504 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 23:14:36,715 p=13504 u=user n=ansible | TASK [trouvé pfsense] ***********************************************************
2025-06-12 23:14:36,733 p=13504 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 23:14:36,736 p=13504 u=user n=ansible | TASK [Appareils Cisco] **********************************************************
2025-06-12 23:14:36,763 p=13504 u=user n=ansible | TASK [cisco : options taches utilisateur] ***************************************
2025-06-12 23:14:37,074 p=13519 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 23:14:38,041 p=13504 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 23:14:38,044 p=13504 u=user n=ansible | TASK [cisco : récupération de la configuration machine] *************************
2025-06-12 23:14:38,071 p=13504 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 23:14:38,080 p=13504 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] ******************
2025-06-12 23:14:38,613 p=13510 u=user n=p=13510 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 23:14:41,051 p=13510 u=user n=p=13510 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 23:14:41,057 p=13510 u=user n=p=13510 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 23:14:41,084 p=13504 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 23:14:41,085 p=13504 u=user n=ansible | PLAY RECAP **********************************************************************
2025-06-12 23:14:41,085 p=13504 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 23:14:41,185 p=13510 u=user n=ansible | shutdown complete
2025-06-12 23:18:44,932 p=13894 u=user n=ansible | PLAY [Détection de la technologie] **********************************************
2025-06-12 23:18:44,941 p=13894 u=user n=ansible | TASK [Affichage de la technologie] **********************************************
2025-06-12 23:18:45,315 p=13896 u=user n=ansible | network_os is set to ios
2025-06-12 23:18:45,319 p=13894 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : ios'
2025-06-12 23:18:45,321 p=13894 u=user n=ansible | TASK [trouvé cisco] *************************************************************
2025-06-12 23:18:45,668 p=13894 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 23:18:45,671 p=13894 u=user n=ansible | TASK [trouvé pfsense] ***********************************************************
2025-06-12 23:18:45,690 p=13894 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 23:18:45,693 p=13894 u=user n=ansible | TASK [Appareils Cisco] **********************************************************
2025-06-12 23:18:45,722 p=13894 u=user n=ansible | TASK [cisco : options taches utilisateur] ***************************************
2025-06-12 23:18:46,042 p=13909 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 23:18:47,683 p=13894 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 23:18:47,685 p=13894 u=user n=ansible | TASK [cisco : récupération de la configuration machine] *************************
2025-06-12 23:18:47,712 p=13894 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 23:18:47,724 p=13894 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] ******************
2025-06-12 23:18:48,295 p=13900 u=user n=p=13900 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 23:18:50,640 p=13900 u=user n=p=13900 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 23:18:50,645 p=13900 u=user n=p=13900 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 23:18:50,676 p=13894 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 23:18:50,677 p=13894 u=user n=ansible | PLAY RECAP **********************************************************************
2025-06-12 23:18:50,678 p=13894 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 23:18:50,778 p=13900 u=user n=ansible | shutdown complete
2025-06-12 23:26:00,539 p=14450 u=user n=ansible | ansible 2.10.8
  config file = /home/user/TFE_automation_compliance_CIS/ansible.cfg
  configured module search path = ['/home/user/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-06-12 23:26:00,539 p=14450 u=user n=ansible | Using /home/user/TFE_automation_compliance_CIS/ansible.cfg as config file
2025-06-12 23:26:00,539 p=14450 u=user n=ansible | setting up inventory plugins
2025-06-12 23:26:00,543 p=14450 u=user n=ansible | host_list declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 23:26:00,543 p=14450 u=user n=ansible | script declined parsing /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml as it did not pass its verify_file() method
2025-06-12 23:26:00,545 p=14450 u=user n=ansible | Skipping empty key (hosts) in group (cisco_catalyst_9000)
2025-06-12 23:26:00,545 p=14450 u=user n=ansible | Parsed /home/user/TFE_automation_compliance_CIS/inventory/hosts.yml inventory source with yaml plugin
2025-06-12 23:26:00,554 p=14450 u=user n=ansible | Loading callback plugin minimal of type stdout, v2.0 from /usr/lib/python3/dist-packages/ansible/plugins/callback/minimal.py
2025-06-12 23:26:00,557 p=14450 u=user n=ansible | Skipping callback 'default', as we already have a stdout callback.
2025-06-12 23:26:00,557 p=14450 u=user n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2025-06-12 23:26:00,557 p=14450 u=user n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2025-06-12 23:26:00,589 p=14450 u=user n=ansible | META: ran handlers
2025-06-12 23:26:00,597 p=14452 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 23:26:00,599 p=14452 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 23:26:00,620 p=14452 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 23:26:00,622 p=14452 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 23:26:00,625 p=14452 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 23:26:00,629 p=14452 u=user n=ansible | redirecting (type: become) ansible.builtin.enable to ansible.netcommon.enable
2025-06-12 23:26:00,630 p=14452 u=user n=ansible | <192.168.122.237> attempting to start connection
2025-06-12 23:26:00,630 p=14452 u=user n=ansible | <192.168.122.237> using connection plugin ansible.netcommon.network_cli
2025-06-12 23:26:00,630 p=14452 u=user n=ansible | Found ansible-connection at path /usr/bin/ansible-connection
2025-06-12 23:26:00,940 p=14456 u=user n=ansible | redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 23:26:00,942 p=14456 u=user n=ansible | Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 23:26:00,965 p=14456 u=user n=ansible | redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 23:26:00,967 p=14456 u=user n=ansible | Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 23:26:00,969 p=14456 u=user n=ansible | redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 23:26:01,191 p=14452 u=user n=ansible | <192.168.122.237> local domain socket does not exist, starting it
2025-06-12 23:26:01,191 p=14452 u=user n=ansible | <192.168.122.237> control socket path is /home/user/.ansible/pc/c45d503a64
2025-06-12 23:26:01,191 p=14452 u=user n=ansible | <192.168.122.237> redirecting (type: connection) ansible.builtin.network_cli to ansible.netcommon.network_cli
2025-06-12 23:26:01,191 p=14452 u=user n=ansible | <192.168.122.237> Loading collection ansible.netcommon from /usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon
2025-06-12 23:26:01,191 p=14452 u=user n=ansible | <192.168.122.237> redirecting (type: terminal) ansible.builtin.ios to cisco.ios.ios
2025-06-12 23:26:01,191 p=14452 u=user n=ansible | <192.168.122.237> Loading collection cisco.ios from /usr/lib/python3/dist-packages/ansible_collections/cisco/ios
2025-06-12 23:26:01,192 p=14452 u=user n=ansible | <192.168.122.237> redirecting (type: cliconf) ansible.builtin.ios to cisco.ios.ios
2025-06-12 23:26:01,192 p=14452 u=user n=ansible | <192.168.122.237> local domain socket listeners started successfully
2025-06-12 23:26:01,192 p=14452 u=user n=ansible | <192.168.122.237> loaded cliconf plugin ansible_collections.cisco.ios.plugins.cliconf.ios from path /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py for network_os ios
2025-06-12 23:26:01,192 p=14452 u=user n=ansible | network_os is set to ios
2025-06-12 23:26:01,192 p=14452 u=user n=ansible | <192.168.122.237> 
2025-06-12 23:26:01,192 p=14452 u=user n=ansible | <192.168.122.237> local domain socket path is /home/user/.ansible/pc/c45d503a64
2025-06-12 23:26:01,193 p=14452 u=user n=ansible | redirecting (type: action) ansible.builtin.ios to cisco.ios.ios
2025-06-12 23:26:01,193 p=14452 u=user n=ansible | redirecting (type: action) ansible.builtin.ios to cisco.ios.ios
2025-06-12 23:26:01,196 p=14452 u=user n=ansible | <192.168.122.237> ESTABLISH LOCAL CONNECTION FOR USER: user
2025-06-12 23:26:01,196 p=14452 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /home/user/.ansible/tmp/ansible-local-14450_0wro8sb `"&& mkdir "` echo /home/user/.ansible/tmp/ansible-local-14450_0wro8sb/ansible-tmp-1749763561.1961436-14452-212026888874281 `" && echo ansible-tmp-1749763561.1961436-14452-212026888874281="` echo /home/user/.ansible/tmp/ansible-local-14450_0wro8sb/ansible-tmp-1749763561.1961436-14452-212026888874281 `" ) && sleep 0'
2025-06-12 23:26:01,204 p=14452 u=user n=ansible | redirecting (type: modules) ansible.builtin.ios_facts to cisco.ios.ios_facts
2025-06-12 23:26:01,400 p=14452 u=user n=ansible | <192.168.122.237> Attempting python interpreter discovery
2025-06-12 23:26:01,400 p=14452 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
2025-06-12 23:26:01,404 p=14452 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2025-06-12 23:26:01,432 p=14452 u=user n=ansible | Using module file /usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/modules/ios_facts.py
2025-06-12 23:26:01,432 p=14452 u=user n=ansible | <192.168.122.237> PUT /home/user/.ansible/tmp/ansible-local-14450_0wro8sb/tmpxlrejo1c TO /home/user/.ansible/tmp/ansible-local-14450_0wro8sb/ansible-tmp-1749763561.1961436-14452-212026888874281/AnsiballZ_ios_facts.py
2025-06-12 23:26:01,433 p=14452 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'chmod u+x /home/user/.ansible/tmp/ansible-local-14450_0wro8sb/ansible-tmp-1749763561.1961436-14452-212026888874281/ /home/user/.ansible/tmp/ansible-local-14450_0wro8sb/ansible-tmp-1749763561.1961436-14452-212026888874281/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 23:26:01,435 p=14452 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c '/usr/bin/python3 /home/user/.ansible/tmp/ansible-local-14450_0wro8sb/ansible-tmp-1749763561.1961436-14452-212026888874281/AnsiballZ_ios_facts.py && sleep 0'
2025-06-12 23:26:01,870 p=14456 u=user n=ansible | <192.168.122.237> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: ansible on PORT 22 TO 192.168.122.237
2025-06-12 23:26:01,874 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | starting thread (client mode): 0xc41e7b80
2025-06-12 23:26:01,875 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Local version/idstring: SSH-2.0-paramiko_2.12.0
2025-06-12 23:26:01,881 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Remote version/idstring: SSH-2.0-Cisco-1.25
2025-06-12 23:26:01,881 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | === Key exchange possibilities ===
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | kex algos: diffie-hellman-group-exchange-sha1, diffie-hellman-group14-sha1, diffie-hellman-group1-sha1
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | server key: ssh-rsa
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | client encrypt: aes128-ctr, aes192-ctr, aes256-ctr, aes128-cbc, 3des-cbc, aes192-cbc, aes256-cbc
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | server encrypt: aes128-ctr, aes192-ctr, aes256-ctr, aes128-cbc, 3des-cbc, aes192-cbc, aes256-cbc
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | client mac: hmac-sha1, hmac-sha1-96
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | server mac: hmac-sha1, hmac-sha1-96
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | client compress: none
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | server compress: none
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | client lang: <none>
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | server lang: <none>
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | kex follows: False
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | === Key exchange agreements ===
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Kex: diffie-hellman-group-exchange-sha1
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | HostKey: ssh-rsa
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Cipher: aes128-ctr
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | MAC: hmac-sha1
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Compression: none
2025-06-12 23:26:01,890 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | === End of kex handshake ===
2025-06-12 23:26:01,899 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Got server p (2048 bits)
2025-06-12 23:26:01,972 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | kex engine KexGex specified hash_algo <built-in function openssl_sha1>
2025-06-12 23:26:01,972 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Switch to new keys ...
2025-06-12 23:26:01,976 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Trying discovered key b'c5744b683a32ed147f83f52508f36cd4' in /home/user/.ssh/id_rsa_cisco
2025-06-12 23:26:02,175 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | userauth is OK
2025-06-12 23:26:02,175 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Finalizing pubkey algorithm for key of type 'ssh-rsa'
2025-06-12 23:26:02,175 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Our pubkey algorithm list: ['rsa-sha2-512', 'rsa-sha2-256', 'ssh-rsa']
2025-06-12 23:26:02,175 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Server did not send a server-sig-algs list; defaulting to our first preferred algo ('rsa-sha2-512')
2025-06-12 23:26:02,175 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | NOTE: you may use the 'disabled_algorithms' SSHClient/Transport init kwarg to disable that or other algorithms if your server does not support them!
2025-06-12 23:26:04,232 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 23:26:04,233 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Trying SSH agent key b'7ce48ff48d648995625c30a668919a5b'
2025-06-12 23:26:04,237 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 23:26:04,247 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Trying discovered key b'7ce48ff48d648995625c30a668919a5b' in /home/user/.ssh/id_rsa
2025-06-12 23:26:04,248 p=14456 u=user n=p=14456 u=user | paramiko [192.168.122.237] | Trying discovered key b'c27f3b1a96514582efdd02c495a2b67a' in /home/user/.ssh/id_dsa
2025-06-12 23:26:04,250 p=14456 u=user n=ansible | Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 343, in _connect_uncached
    ssh.connect(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 450, in connect
    self._auth(
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 781, in _auth
    raise saved_exception
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/client.py", line 757, in _auth
    self._transport.auth_publickey(username, key)
  File "/home/user/.local/lib/python3.10/site-packages/paramiko/transport.py", line 1625, in auth_publickey
    raise SSHException("No existing session")
paramiko.ssh_exception.SSHException: No existing session

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ansible/utils/jsonrpc.py", line 46, in handle_request
    result = rpc_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 322, in get_capabilities
    result = super(Cliconf, self).get_capabilities()
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 283, in get_capabilities
    result['device_info'] = self.get_device_info()
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 270, in get_device_info
    reply = self.get(command="show version")
  File "/usr/lib/python3/dist-packages/ansible_collections/cisco/ios/plugins/cliconf/ios.py", line 257, in get
    return self.send_command(
  File "/usr/lib/python3/dist-packages/ansible/plugins/cliconf/__init__.py", line 127, in send_command
    resp = self._connection.send(**kwargs)
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 313, in wrapped
    self._connect()
  File "/usr/lib/python3/dist-packages/ansible_collections/ansible/netcommon/plugins/connection/network_cli.py", line 538, in _connect
    ssh = self.ssh_type_conn._connect()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 243, in _connect
    self.ssh = SSH_CONNECTION_CACHE[cache_key] = self._connect_uncached()
  File "/usr/lib/python3/dist-packages/ansible/plugins/connection/paramiko_ssh.py", line 368, in _connect_uncached
    raise AnsibleConnectionFailure(msg)
ansible.errors.AnsibleConnectionFailure: No existing session

2025-06-12 23:26:04,270 p=14452 u=user n=ansible | <192.168.122.237> EXEC /bin/sh -c 'rm -f -r /home/user/.ansible/tmp/ansible-local-14450_0wro8sb/ansible-tmp-1749763561.1961436-14452-212026888874281/ > /dev/null 2>&1 && sleep 0'
2025-06-12 23:26:04,275 p=14450 u=user n=ansible | The full traceback is:
  File "/tmp/ansible_ios_facts_payload_32my7c7m/ansible_ios_facts_payload.zip/ansible_collections/ansible/netcommon/plugins/module_utils/network/common/network.py", line 251, in get_capabilities
    capabilities = Connection(module._socket_path).get_capabilities()
  File "/tmp/ansible_ios_facts_payload_32my7c7m/ansible_ios_facts_payload.zip/ansible/module_utils/connection.py", line 195, in __rpc__
    raise ConnectionError(to_text(msg, errors='surrogate_then_replace'), code=code)

2025-06-12 23:26:04,276 p=14450 u=user n=ansible | 192.168.122.237 | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "invocation": {
        "module_args": {
            "gather_network_resources": null,
            "gather_subset": [
                "!config"
            ],
            "provider": null
        }
    },
    "msg": "No existing session"
}
2025-06-12 23:26:04,377 p=14456 u=user n=ansible | shutdown complete
2025-06-12 23:52:36,349 p=14696 u=user n=ansible | PLAY [Détection de la technologie] **********************************************
2025-06-12 23:52:36,357 p=14696 u=user n=ansible | TASK [Affichage de la technologie] **********************************************
2025-06-12 23:52:36,729 p=14698 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-12 23:52:36,732 p=14696 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : cisco.ios.ios'
2025-06-12 23:52:36,734 p=14696 u=user n=ansible | TASK [trouvé cisco] *************************************************************
2025-06-12 23:52:37,081 p=14696 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-12 23:52:37,083 p=14696 u=user n=ansible | TASK [trouvé pfsense] ***********************************************************
2025-06-12 23:52:37,103 p=14696 u=user n=ansible | skipping: [192.168.122.237]
2025-06-12 23:52:37,105 p=14696 u=user n=ansible | TASK [Appareils Cisco] **********************************************************
2025-06-12 23:52:37,134 p=14696 u=user n=ansible | TASK [cisco : options taches utilisateur] ***************************************
2025-06-12 23:52:37,457 p=14711 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-12 23:52:39,484 p=14696 u=user n=ansible | ok: [192.168.122.237]
2025-06-12 23:52:39,487 p=14696 u=user n=ansible | TASK [cisco : récupération de la configuration machine] *************************
2025-06-12 23:52:39,512 p=14696 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-12 23:52:39,522 p=14696 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] ******************
2025-06-12 23:52:40,093 p=14702 u=user n=p=14702 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-12 23:52:42,380 p=14702 u=user n=p=14702 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-12 23:52:42,385 p=14702 u=user n=p=14702 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-12 23:52:42,413 p=14696 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-12 23:52:42,414 p=14696 u=user n=ansible | PLAY RECAP **********************************************************************
2025-06-12 23:52:42,414 p=14696 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-12 23:52:42,514 p=14702 u=user n=ansible | shutdown complete
2025-06-13 00:08:15,215 p=14882 u=user n=ansible | PLAY [Détection de la technologie] **********************************************
2025-06-13 00:08:15,222 p=14882 u=user n=ansible | TASK [Affichage de la technologie] **********************************************
2025-06-13 00:08:15,601 p=14884 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-13 00:08:15,605 p=14882 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : cisco.ios.ios'
2025-06-13 00:08:15,607 p=14882 u=user n=ansible | TASK [trouvé cisco] *************************************************************
2025-06-13 00:08:15,933 p=14882 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-13 00:08:15,936 p=14882 u=user n=ansible | TASK [trouvé pfsense] ***********************************************************
2025-06-13 00:08:15,955 p=14882 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 00:08:15,957 p=14882 u=user n=ansible | TASK [Appareils Cisco] **********************************************************
2025-06-13 00:08:15,983 p=14882 u=user n=ansible | TASK [cisco : options taches utilisateur] ***************************************
2025-06-13 00:08:16,301 p=14899 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-13 00:08:22,762 p=14882 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 00:08:22,764 p=14882 u=user n=ansible | TASK [cisco : récupération de la configuration machine] *************************
2025-06-13 00:08:22,792 p=14882 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-13 00:08:22,803 p=14882 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] ******************
2025-06-13 00:08:23,372 p=14890 u=user n=p=14890 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-13 00:08:23,649 p=14890 u=user n=p=14890 u=user | paramiko [192.168.122.237] | Authentication (password) successful!
2025-06-13 00:08:25,345 p=14882 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 00:08:25,349 p=14882 u=user n=ansible | TASK [cisco : Sauvegarde de la config] ******************************************
2025-06-13 00:08:26,200 p=14882 u=user n=ansible | changed: [192.168.122.237]
2025-06-13 00:08:26,203 p=14882 u=user n=ansible | TASK [cisco : declaration des variables] ****************************************
2025-06-13 00:08:26,687 p=14882 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 00:08:26,692 p=14882 u=user n=ansible | TASK [cisco : verbose ?] ********************************************************
2025-06-13 00:08:27,101 p=14982 u=user n=ansible | [cisco : verbose ?]
Voulez-vous afficher la version vebose ? (y/n):
2025-06-13 00:08:38,826 p=14882 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 00:08:38,829 p=14882 u=user n=ansible | TASK [cisco : rapport no verbose] ***********************************************
2025-06-13 00:08:38,850 p=14882 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 00:08:38,853 p=14882 u=user n=ansible | TASK [cisco : rapport verbose] **************************************************
2025-06-13 00:08:39,506 p=14882 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 00:08:39,509 p=14882 u=user n=ansible | TASK [cisco : commandes manquantes only] ****************************************
2025-06-13 00:08:40,069 p=14882 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 00:08:40,073 p=14882 u=user n=ansible | TASK [cisco : affichage no verbose] *********************************************
2025-06-13 00:08:40,095 p=14882 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 00:08:40,098 p=14882 u=user n=ansible | TASK [cisco : affichage verbose] ************************************************
2025-06-13 00:08:40,520 p=14882 u=user n=ansible | ok: [192.168.122.237] => 
  lookup('file', (ansible_config_file | dirname) + '/rapport/' + inventory_hostname + '_rapport_verbose.txt'): |-
    Rapport de conformité CIS pour l'appareil Cisco : 192.168.122.237
  
  
  
    ###1.1.1 - Enable 'aaa new-model'
    - Commande : ``aaa new-model``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : This command enables the AAA access control system.
    - Remédiation : aaa new-model
    - Rational : Authentication, authorization and accounting (AAA) services provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices.
    - Impact : Implementing Cisco AAA is significantly disruptive as former access methods are
    immediately disabled. Therefore, before implementing Cisco AAA, the organization
    should carefully review and plan their authentication criteria (logins & passwords,
    challenges & responses, and token technologies), authorization methods, and
    accounting requirements.
    - Audit : show running-config | inc aaa new-model
  
  
    ###1.1.2 - Enable 'aaa authentication login'
    - Commande : ``aaa authentication login {default | aaa_list_name} [passwd-``
    - Niveau : Level 1
        La ligne : (1.1.2:aaa authentication login {default | aaa_list_name} [passwd-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Sets authentication, authorization and accounting (AAA) authentication at login.
    - Remédiation : aaa authentication login {default | aaa_list_name} [passwd-
    - Rational : Using AAA authentication for interactive management access to the device provides
    consistent, centralized control of your network. The default under AAA (local or network)
    is to require users to log in using a valid user name and password. This rule applies for
    both local and network AAA. Fallback mode should also be enabled to allow emergency
    access to the router or switch in the event that the AAA server was unreachable, by
    utilizing the LOCAL keyword after the AAA server-tag.
    - Impact : Implementing Cisco AAA is significantly disruptive as former access methods are
    immediately disabled. Therefore, before implementing Cisco AAA, the organization
    should carefully review and plan their authentication methods such as logins and
    passwords, challenges and responses, and which token technologies will be used.
    - Audit : show running-config | incl aaa authentication login
  
  
    ###1.1.3 - Enable 'aaa authentication enable default'
    - Commande : ``aaa authentication enable default {method1} enable``
    - Niveau : Level 1
        La ligne : (1.1.3:aaa authentication enable default {method1} enable) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Authenticates users who access privileged EXEC mode when they use the enable
    command.
    - Remédiation : aaa authentication enable default {method1} enable
    - Rational : Using AAA authentication for interactive management access to the device provides
    consistent, centralized control of your network. The default under AAA (local or network)
    is to require users to log in using a valid user name and password. This rule applies for
    both local and network AAA.
    - Impact : Enabling Cisco AAA 'authentication enable' mode is significantly disruptive as former
    access methods are immediately disabled. Therefore, before enabling 'aaa
    authentication enable default' mode, the organization should plan and implement
    authentication logins and passwords, challenges and responses, and token
    technologies.
    - Audit : show running-config | incl aaa authentication enable
  
  
    ###1.1.4 - Set 'login authentication for 'line vty'
    - Commande : ``line vty {line-number} [ending-line-number]
    login authentication {default | aaa_list_name}``
    - Niveau : Level 1
        La ligne : (1.1.4:line vty {line-number} [ending-line-number]
    login authentication {default | aaa_list_name}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Authenticates users who access the router or switch remotely through the VTY port.
    - Remédiation : line vty {line-number} [ending-line-number]
    login authentication {default | aaa_list_name}
    - Rational : Using AAA authentication for interactive management access to the device provides
    consistent, centralized control of your network. The default under AAA (local or network)
    is to require users to log in using a valid user name and password. This rule applies for
    both local and network AAA.
    - Impact : Enabling Cisco AAA 'login authentication for line VTY' is significantly disruptive as
    former access methods are immediately disabled. Therefore, before enabling Cisco
    AAA 'login authentication for line VTY', the organization should plan and implement
    authentication logins and passwords, challenges and responses, and token
    technologies.
    - Audit : show running-config | sec line | incl login authentication
  
  
    ###1.1.5 - Set 'login authentication for 'ip http'
    - Commande : ``(config)ip http secure-server
    (config)ip http authentication {default | _aaa\_list\_name_}
    aaa accounting commands 15 {default | list-name | guarantee-``
    - Niveau : Level 1
        La ligne : (1.1.5:(config)ip http secure-server
    (config)ip http authentication {default | _aaa\_list\_name_}
    aaa accounting commands 15 {default | list-name | guarantee-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : If account management functions are not automatically enforced, an attacker could gain
    privileged access to a vital element of the network security architecture
    Runs accounting for all commands at the specified privilege level.
    - Remédiation : (config)ip http secure-server
    (config)ip http authentication {default | _aaa\_list\_name_}
    aaa accounting commands 15 {default | list-name | guarantee-
    - Rational : Using AAA authentication for interactive management access to the device provides
    consistent, centralized control of your network. The default under AAA (local or network)
    is to require users to log in using a valid user name and password. This rule applies for
    both local and network AAA.
    Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    TACACS+.
    - Impact : Enabling Cisco AAA 'line login' is significantly disruptive as former access methods are
    immediately disabled. Therefore, before enabling Cisco AAA 'line login', the
    organization should plan and implement authentication logins and passwords,
    challenges and responses, and token technologies.
    Enabling 'aaa accounting' for privileged commands records and sends activity to the
    accounting servers and enables organizations to monitor and analyze privileged activity.
    - Audit : show running-config | inc ip http authentication
    show running-config | incl aaa accounting commands
  
  
    ###1.1.7 - Set 'aaa accounting connection'
    - Commande : ``aaa accounting connection {default | list-name | guarantee-``
    - Niveau : Level 2
        La ligne : (1.1.7:aaa accounting connection {default | list-name | guarantee-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Provides information about all outbound connections made from the network access
    server.
    - Remédiation : aaa accounting connection {default | list-name | guarantee-
    - Rational : Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    RADIUS and TACACS+.
    - Impact : Implementing aaa accounting connection creates accounting records about connections
    from the network access server. Organizations should regular monitor these connection
    records for exceptions, remediate issues, and report findings regularly.
    - Audit : show running-config | incl aaa accounting connection
  
  
    ###1.1.8 - Set 'aaa accounting exec'
    - Commande : ``aaa accounting exec {default | list-name | guarantee-first}``
    - Niveau : Level 2
        La ligne : (1.1.8:aaa accounting exec {default | list-name | guarantee-first}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Runs accounting for the EXEC shell session.
    - Remédiation : aaa accounting exec {default | list-name | guarantee-first}
    - Rational : Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    RADIUS and TACACS+.
    - Impact : Enabling aaa accounting exec creates accounting records for the EXEC terminal
    sessions on the network access server. These records include start and stop times,
    usernames, and date information. Organizations should regularly monitor these records
    for exceptions, remediate issues, and report findings.
    - Audit : show running-config | incl aaa accounting exec
  
  
    ###1.1.9 - Set 'aaa accounting network'
    - Commande : ``aaa accounting network {default | list-name | guarantee-``
    - Niveau : Level 2
        La ligne : (1.1.9:aaa accounting network {default | list-name | guarantee-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Runs accounting for all network-related service requests.
    - Remédiation : aaa accounting network {default | list-name | guarantee-
    - Rational : Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    RADIUS and TACACS+.
    - Impact : Implementing aaa accounting network creates accounting records for a method list
    including ARA, PPP, SLIP, and NCPs sessions. Organizations should regular monitor
    these records for exceptions, remediate issues, and report findings.
    - Audit : show running-config | incl aaa accounting network
  
  
    ###1.1.10 - Set 'aaa accounting system'
    - Commande : ``aaa accounting system {default | list-name | guarantee-``
    - Niveau : Level 2
        La ligne : (1.1.10:aaa accounting system {default | list-name | guarantee-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Performs accounting for all system-level events not associated with users, such as
    reloads.
    - Remédiation : aaa accounting system {default | list-name | guarantee-
    - Rational : Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    RADIUS and TACACS+.
    - Impact : Enabling aaa accounting system creates accounting records for all system-level events.
    Organizations should regular monitor these records for exceptions, remediate issues,
    and report findings regularly.
    - Audit : show running-config | incl aaa accounting system
  
  
    ###1.2.1 - Set 'privilege 1' for local users
    - Commande : ``username <LOCAL_USERNAME> privilege 1
    line vty <line-number> <ending-line-number>
    transport input ssh``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Sets the privilege level for the user.
    Selects the Secure Shell (SSH) protocol.
    - Remédiation : username <LOCAL_USERNAME> privilege 1
    line vty <line-number> <ending-line-number>
    transport input ssh
    - Rational : Default device configuration does not require strong user authentication potentially
    enabling unfettered access to an attacker that is able to reach the device. Creating a
    local account with privilege level 1 permissions only allows the local user to access the
    device with EXEC-level permissions and will be unable to modify the device without
    using the enable password. In addition, require the use of an encrypted password as
    well (see Section 1.1.4.4 - Require Encrypted User Passwords).
    Configuring VTY access control restricts remote access to only those authorized to
    manage the device and prevents unauthorized users from accessing the system.
    - Impact : Organizations should create policies requiring all local accounts with 'privilege level 1'
    with encrypted passwords to reduce the risk of unauthorized access. Default
    configuration settings do not provide strong user authentication to the device.
    To reduce risk of unauthorized access, organizations should require all VTY
    management line protocols to be limited to ssh.
    - Audit : show running-config | incl privilege
    show running-config | sec vty
  
  
    ###1.2.3 - Set 'no exec' for 'line aux 0'
    - Commande : ``line aux 0
    no exec``
    - Niveau : Level 1
        La ligne : (1.2.3:line aux 0
    no exec) n'est pas présente dans la config de l'appareil ❌
  
    - Description : The 'no exec' command restricts a line to outgoing connections only.
    - Remédiation : line aux 0
    no exec
    - Rational : Unused ports should be disabled, if not required, since they provide a potential access
    path for attackers. Some devices include both an auxiliary and console port that can be
    used to locally connect to and configure the device. The console port is normally the
    primary port used to configure the device; even when remote, backup administration is
    required via console server or Keyboard, Video, Mouse (KVM) hardware. The auxiliary
    port is primarily used for dial-up administration via an external modem; instead, use
    other available methods.
    - Impact : Organizations can reduce the risk of unauthorized access by disabling the 'aux' port
    with the 'no exec' command. Conversely, not restricting access through the 'aux' port
    increases the risk of remote unauthorized access.
    - Audit : show running-config | sec aux
    show line aux 0 | incl exec
  
  
    ###1.2.4 - Create 'access-list' for use with 'line vty'
    - Commande : ``access-list <vty_acl_number> permit tcp
    access-list <vty_acl_number> permit tcp host <vty_acl_host>
    deny ip any any log``
    - Niveau : Level 1
        La ligne : (1.2.4:access-list <vty_acl_number> permit tcp
    access-list <vty_acl_number> permit tcp host <vty_acl_host>
    deny ip any any log) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Access lists control the transmission of packets on an interface, control Virtual Terminal
    Line (VTY) access, and restrict the contents of routing updates. The Cisco IOS software
    stops checking the extended access list after a match occurs.
    - Remédiation : access-list <vty_acl_number> permit tcp
    access-list <vty_acl_number> permit tcp host <vty_acl_host>
    deny ip any any log
    - Rational : VTY ACLs control what addresses may attempt to log in to the router. Configuring VTY
    lines to use an ACL, restricts the sources where a user can manage the device. You
    should limit the specific host(s) and or network(s) authorized to connect to and configure
    the device, via an approved protocol, to those individuals or systems authorized to
    administer the device. For example, you could limit access to specific hosts, so that only
    network managers can configure the devices only by using specific network
    management workstations. Make sure you configure all VTY lines to use the same ACL.
    - Impact : Organizations can reduce the risk of unauthorized access by implementing access-lists
    for all VTY lines. Conversely, using VTY lines without access-lists increases the risk of
    unauthorized access.
    - Audit : sh ip access-list <vty_acl_number>
  
  
    ###1.2.5 - Set 'access-class' for 'line vty'
    - Commande : ``line vty <line-number> <ending-line-number>
    access-class <vty_acl_number> in
    line aux 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line con 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line vty {line_number} [ending_line_number]
    exec-timeout <<span>timeout_in_minutes>``
    - Niveau : Level 1
        La ligne : (1.2.5:line vty <line-number> <ending-line-number>
    access-class <vty_acl_number> in
    line aux 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line con 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line vty {line_number} [ending_line_number]
    exec-timeout <<span>timeout_in_minutes>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : The 'access-class' setting restricts incoming and outgoing connections between a
    particular vty (into a Cisco device) and the networking devices associated with
    addresses in an access list.
    If no input is detected during the interval, the EXEC facility resumes the current
    connection. If no connections exist, the EXEC facility returns the terminal to the idle
    state and disconnects the incoming session.
    If no input is detected during the interval, the EXEC facility resumes the current
    connection. If no connections exist, the EXEC facility returns the terminal to the idle
    state and disconnects the incoming session.
    If no input is detected during the interval, the EXEC facility resumes the current
    connection. If no connections exist, the EXEC facility returns the terminal to the idle
    state and disconnects the incoming session.
    - Remédiation : line vty <line-number> <ending-line-number>
    access-class <vty_acl_number> in
    line aux 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line con 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line vty {line_number} [ending_line_number]
    exec-timeout <<span>timeout_in_minutes>
    - Rational : Restricting the type of network devices, associated with the addresses on the access-
    list, further restricts remote access to those devices authorized to manage the device
    and reduces the risk of unauthorized access.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    - Impact : Applying 'access'class' to line VTY further restricts remote access to only those devices
    authorized to manage the device and reduces the risk of unauthorized access.
    Conversely, using VTY lines with 'access class' restrictions increases the risks of
    unauthorized access.
    Organizations should prevent unauthorized use of unattended or abandoned sessions
    by an automated control. Enabling 'exec-timeout' with an appropriate length of minutes
    or seconds prevents unauthorized access of abandoned sessions.
    Organizations should prevent unauthorized use of unattended or abandoned sessions
    by an automated control. Enabling 'exec-timeout' with an appropriate length reduces the
    risk of unauthorized access of abandoned sessions.
    Organizations should prevent unauthorized use of unattended or abandoned sessions
    by an automated control. Enabling 'exec-timeout' with an appropriate length of minutes
    or seconds prevents unauthorized access of abandoned sessions.
    - Audit : sh run | sec vty <line-number> <ending-line-number>
    sh run | sec line aux 0
    sh run | sec line con 0
    sh line vty <tty_line_number> | begin Timeout
  
  
    ###1.2.9 - Set 'transport input none' for 'line aux 0'
    - Commande : ``line aux 0
    transport input none``
    - Niveau : Level 1
        La ligne : (1.2.9:line aux 0
    transport input none) n'est pas présente dans la config de l'appareil ❌
  
    - Description : When you want to allow only an outgoing connection on a line, use the no exec
    command.
    - Remédiation : line aux 0
    transport input none
    - Rational : Unused ports should be disabled, if not required, since they provide a potential access
    path for attackers. Some devices include both an auxiliary and console port that can be
    used to locally connect to and configure the device. The console port is normally the
    primary port used to configure the device; even when remote, backup administration is
    required via console server or Keyboard, Video, Mouse (KVM) hardware. The auxiliary
    port is primarily used for dial-up administration via an external modem; instead, use
    other available methods.
    - Impact : Organizations should prevent all unauthorized access of auxiliary ports by disabling all
    protocols using the 'transport input none' command.
    - Audit : sh line aux 0 | incl input transports
  
  
    ###1.2.10 - Set 'http Secure-server' limit
    - Commande : ``ip http max-connections 2``
    - Niveau : Level 1
        La ligne : (1.2.10:ip http max-connections 2) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Device management includes the ability to control the number of administrators and
    management sessions that manage a device. Limiting the number of allowed
    administrators and sessions per administrator based on account type, role, or access
    type is helpful in limiting risks related to denial-of-service (DoS) attacks.
    If no input is detected during the interval, the EXEC facility resumes the current
    connection. If no connections exist, the EXEC facility returns the terminal to the idle
    state and disconnects the incoming session.
    - Remédiation : ip http max-connections 2
    - Rational : This requirement addresses concurrent sessions for administrative accounts and does
    not address concurrent sessions by a single administrator via multiple administrative
    accounts. The maximum number of concurrent sessions should be defined based upon
    mission needs and the operational environment for each system. At a minimum, limits
    must be set for SSH, HTTPS, account of last resort, and root account sessions.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    - Impact :
    - Audit : show run | inc ip http secure-server
  
  
    ###1.3.1 - Set the 'banner-text' for 'banner exec'
    - Commande : ``banner exec c``
    - Niveau : Level 1
        La ligne : (1.3.1:banner exec c) n'est pas présente dans la config de l'appareil ❌
  
    - Description : This command specifies a message to be displayed when an EXEC process is created
    (a line is activated, or an incoming connection is made to a vty). Follow this command
    with one or more blank spaces and a delimiting character of your choice. Then enter
    one or more lines of text, terminating the message with the second occurrence of the
    delimiting character.
    When a user connects to a router, the message-of-the-day (MOTD) banner appears
    first, followed by the login banner and prompts. After the user logs in to the router, the
    EXEC banner or incoming banner will be displayed, depending on the type of
    connection. For a reverse Telnet login, the incoming banner will be displayed. For all
    other connections, the router will display the EXEC banner.
    - Remédiation : banner exec c
    - Rational : "Network banners are electronic messages that provide notice of legal rights to users of
    computer networks. From a legal standpoint, banners have four primary functions.
    • First, banners may be used to generate consent to real-time monitoring under
    Title III.
    • Second, banners may be used to generate consent to the retrieval of stored files
    and records pursuant to ECPA.
    • Third, in the case of government networks, banners may eliminate any Fourth
    Amendment "reasonable expectation of privacy" that government employees or
    other users might otherwise retain in their use of the government's network under
    O'Connor v. Ortega, 480 U.S. 709 (1987).
    • Fourth, in the case of a non-government network, banners may establish a
    system administrator's "common authority" to consent to a law enforcement
    search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
    Department of Justice APPENDIX A: Sample Network Banner Language)
    - Impact : Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
    their networks by using a 'banner-text' for the banner exec command.
    - Audit : sh running-config | beg banner exec
  
  
    ###1.3.2 - Set the 'banner-text' for 'banner login'
    - Commande : ``banner login c``
    - Niveau : Level 1
        La ligne : (1.3.2:banner login c) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Follow the banner login command with one or more blank spaces and a delimiting
    character of your choice. Then enter one or more lines of text, terminating the message
    with the second occurrence of the delimiting character.
    When a user connects to the router, the message-of-the-day (MOTD) banner (if
    configured) appears first, followed by the login banner and prompts. After the user
    successfully logs in to the router, the EXEC banner or incoming banner will be
    displayed, depending on the type of connection. For a reverse Telnet login, the
    incoming banner will be displayed. For all other connections, the router will display the
    EXEC banner.
    - Remédiation : banner login c
    - Rational : "Network banners are electronic messages that provide notice of legal rights to users of
    computer networks. From a legal standpoint, banners have four primary functions.
    • First, banners may be used to generate consent to real-time monitoring under
    Title III.
    • Second, banners may be used to generate consent to the retrieval of stored files
    and records pursuant to ECPA.
    • Third, in the case of government networks, banners may eliminate any Fourth
    Amendment "reasonable expectation of privacy" that government employees or
    other users might otherwise retain in their use of the government's network under
    O'Connor v. Ortega, 480 U.S. 709 (1987).
    • Fourth, in the case of a non-government network, banners may establish a
    system administrator's "common authority" to consent to a law enforcement
    search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
    Department of Justice APPENDIX A: Sample Network Banner Language)
    - Impact : Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
    their networks by using a 'banner-text' for the banner login command.
    - Audit : show running-config | beg banner login
  
  
    ###1.3.3 - Set the 'banner-text' for 'banner motd'
    - Commande : ``banner motd c``
    - Niveau : Level 1
        La ligne : (1.3.3:banner motd c) n'est pas présente dans la config de l'appareil ❌
  
    - Description : This MOTD banner is displayed to all terminals connected and is useful for sending
    messages that affect all users (such as impending system shutdowns). Use the no
    exec-banner or no motd-banner command to disable the MOTD banner on a line. The
    no exec-banner command also disables the EXEC banner on the line.
    When a user connects to the router, the MOTD banner appears before the login prompt.
    After the user logs in to the router, the EXEC banner or incoming banner will be
    displayed, depending on the type of connection. For a reverse Telnet login, the
    incoming banner will be displayed. For all other connections, the router will display the
    EXEC banner.
    - Remédiation : banner motd c
    - Rational : "Network banners are electronic messages that provide notice of legal rights to users of
    computer networks. From a legal standpoint, banners have four primary functions.
    • First, banners may be used to generate consent to real-time monitoring under
    Title III.
    • Second, banners may be used to generate consent to the retrieval of stored files
    and records pursuant to ECPA.
    • Third, in the case of government networks, banners may eliminate any Fourth
    Amendment "reasonable expectation of privacy" that government employees or
    other users might otherwise retain in their use of the government's network under
    O'Connor v. Ortega, 480 U.S. 709 (1987).
    • Fourth, in the case of a non-government network, banners may establish a
    system administrator's "common authority" to consent to a law enforcement
    search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
    Department of Justice APPENDIX A: Sample Network Banner Language)
    - Impact : Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
    their networks by using a 'banner-text' for the banner motd command.
    - Audit : sh running-config | beg banner motd
  
  
    ###1.3.4 - Set the 'banner-text' for 'webauth banner'
    - Commande : ``ip admission auth-proxy-banner http {banner-text | filepath}``
    - Niveau : Level 1
        La ligne : (1.3.4:ip admission auth-proxy-banner http {banner-text | filepath}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : This banner is displayed to all terminals connected and is useful for sending messages
    that affect all users (such as impending system shutdowns). Use the no exec-banner or
    no motd-banner command to disable the banner on a line. The no exec-banner
    command also disables the EXEC banner on the line.
    When a user connects to the router, the MOTD banner appears before the login prompt.
    After the user logs in to the router, the EXEC banner or incoming banner will be
    displayed, depending on the type of connection. For a reverse Telnet login, the
    incoming banner will be displayed. For all other connections, the router will display the
    EXEC banner.
    - Remédiation : ip admission auth-proxy-banner http {banner-text | filepath}
    - Rational : "Network banners are electronic messages that provide notice of legal rights to users of
    computer networks. From a legal standpoint, banners have four primary functions.
    • First, banners may be used to generate consent to real-time monitoring under
    Title III.
    • Second, banners may be used to generate consent to the retrieval of stored files
    and records pursuant to ECPA.
    • Third, in the case of government networks, banners may eliminate any Fourth
    Amendment "reasonable expectation of privacy" that government employees or
    other users might otherwise retain in their use of the government's network under
    O'Connor v. Ortega, 480 U.S. 709 (1987).
    • Fourth, in the case of a non-government network, banners may establish a
    system administrator's "common authority" to consent to a law enforcement
    search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
    Department of Justice APPENDIX A: Sample Network Banner Language)
    - Impact : Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
    their networks by using a 'banner-text' for the banner motd command.
    - Audit : show ip admission auth-proxy-banner http
  
  
    ###1.4.1 - Set 'password' for 'enable secret'
    - Commande : ``enable secret 9 {ENABLE_SECRET_PASSWORD}``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Enable secret password type 5 and enable secret password type 5 must be migrated to
    the stronger password type 8 or 9. IF a device is upgraded from IOS XE 16.9 or later
    the type 5 is auto converted to type 9.
    Use the enable secret command to provide an additional layer of security over the
    enable password. The enable secret command provides better security by storing the
    enable secret password using a nonreversible cryptographic function. The added layer
    of security encryption provides is useful in environments where the password crosses
    the network or is stored on a TFTP server.
    - Remédiation : enable secret 9 {ENABLE_SECRET_PASSWORD}
    - Rational : Requiring the enable secret setting protects privileged EXEC mode. By default, a strong
    password is not required, a user can just press the Enter key at the Password prompt to
    start privileged mode. The enable password command causes the device to enforce use
    of a password to access privileged mode. Enable secrets use a one-way cryptographic
    hash (MD5). This is preferred to Level 7 enable passwords that use a weak, well-
    known, and easily reversible encryption algorithm.
    - Impact : Default device configuration does not require strong user authentication potentially
    enabling unfettered access to an attacker that is able to reach the device. Creating a
    local account with an encrypted password enforces login authentication and provides a
    fallback authentication mechanism for configuration in a named method list in a situation
    where centralized authentication, authorization, and accounting services are
    unavailable. The following is the type of encryption the device will allow as of 15.3: Type
    0 this mean the password will not be encrypted when router store it in Run/Start Files
    command: enable password cisco123
    Type 4 this mean the password will be encrypted when router store it in Run/Start Files
    using SHA-256 which apps like Cain can crack but will take long time command :
    enable secret 4 Rv4kArhts7yA2xd8BD2YTVbts (notice above is not the password string
    it self but the hash of the password)
    this type is deprecated starting from IOS 15.3(3)
    Type 5 this mean the password will be encrypted when router store it in Run/Start Files
    using MD5 which apps like Cain can crack but will take long time command: enable
    secret 5 00271A5307542A02D22842 (notice above is not the password string it self but
    the hash of the password) or enable secret cisco123 (notice above is the password
    string it self)
    Page 68
    Type 7 this mean the password will be encrypted when router store it in Run/Start Files
    using Vigenere cipher which any website with type7 reverser can crack it in less than
    one second command : ena password cisco123 service password-encryption
    Type 8
    this mean the password will be encrypted when router store it in Run/Start Files using
    PBKDF2-SHA-256
    starting from IOS 15.3(3).
    Password-Based Key Derivation Function 2 (PBKDF2) with Secure Hash Algorithm, 26-
    bits (SHA-256) as the hashing algorithm
    Example : R1(config)#enable algorithm-type sha256 secret cisco
    R1(config)#do sh run | i enable
    enable secret 8
    $8$mTj4RZG8N9ZDOk$elY/asfm8kD3iDmkBe3hD2r4xcA/0oWS5V3os.O91u.
    Example : R1(config)# username yasser algorithm-type sha256 secret cisco
    R1# show running-config | inc username
    username yasser secret 8
    $8$dsYGNam3K1SIJO$7nv/35M/qr6t.dVc7UY9zrJDWRVqncHub1PE9UlMQFs
    Type 9
    this means the password will be encrypted when router store it in Run/Start Files using
    scrypt as the hashing algorithm.
    starting from IOS 15.3(3)
    Example : R1(config)#ena algorithm-type scrypt secret cisco
    R1(config)#do sh run | i enable
    enable secret 9
    $9$WnArItcQHW/uuE$x5WTLbu7PbzGDuv0fSwGKS/KURsy5a3WCQckmJp0MbE
    Example : R1(config)# username demo9 algorithm-type scrypt secret cisco
    R1# show running-config | inc username
    username demo9 secret 9
    $9$nhEmQVczB7dqsO$X.HsgL6x1il0RxkOSSvyQYwucySCt7qFm4v7pqCxkKM
    Important Notes:
    1-If you configure type 8 or type 9 passwords and then downgrade to a release that
    does not support type 8 and type 9 passwords, you must configure the type 5
    passwords before downgrading. If not, you are locked out of the device and a password
    recovery is required.
    Page 69
    2-Starting from IOS 15.3(3)The 4 keyword was deprecated and support for type 8 and
    type 9 algorithms were added and The warning message for removal of support for the
    type 4 algorithm was added tect privileged EXEC mode through policies requiring the
    'enabling secret' setting, which enforces a one-way cryptographic hash (MD5).
    - Audit : sh run | incl enable secret
  
  
    ###1.4.2 - Enable 'service password-encryption'
    - Commande : ``service password-encryption``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : When password encryption is enabled, the encrypted form of the passwords is
    displayed when a more system:running-config command is entered.
    - Remédiation : service password-encryption
    - Rational : This requires passwords to be encrypted in the configuration file to prevent
    unauthorized users from learning the passwords just by reading the configuration. When
    not enabled, many of the device's passwords will be rendered in plain text in the
    configuration file. This service ensures passwords are rendered as encrypted strings
    preventing an attacker from easily determining the configured value.
    - Impact : Organizations implementing 'service password-encryption' reduce the risk of
    unauthorized users learning clear text passwords to Cisco IOS configuration files.
    However, the algorithm used is not designed to withstand serious analysis and should
    be treated like clear-text.
    - Audit : sh run | incl service password-encryption
  
  
    ###1.4.3 - Set 'username secret' for all local users
    - Commande : ``username {LOCAL_USERNAME} secret
    no snmp-server``
    - Niveau : Level 1
        La ligne : (1.4.3:username {LOCAL_USERNAME} secret
    no snmp-server) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Username secret password type 5 and enable secret password type 5 must be migrated
    to the stronger password type 8 or 9. IF a device is upgraded from IOS XE 16.9 or later
    the type 5 is auto converted to type 9.
    The username secret command provides an additional layer of security over the
    username password.
    If not in use, disable simple network management protocol (SNMP), read and write
    access.
    - Remédiation : username {LOCAL_USERNAME} secret
    no snmp-server
    - Rational : Default device configuration does not require strong user authentication potentially
    enabling unfettered access to an attacker that is able to reach the device. Creating a
    local account with an encrypted password enforces login authentication and provides a
    fallback authentication mechanism for configuration in a named method list in a situation
    where centralized authentication, authorization, and accounting services are
    unavailable. The following is the type of encryption the device will allow as of 15.3: Type
    0 this mean the password will not be encrypted when router store it in Run/Start Files
    command: enable password cisco123
    Type 4 this mean the password will be encrypted when router store it in Run/Start Files
    using SHA-256 which apps like Cain can crack but will take long time command :
    enable secret 4 Rv4kArhts7yA2xd8BD2YTVbts (notice above is not the password string
    it self but the hash of the password)
    this type is deprecated starting from IOS 15.3(3)
    Type 5 this mean the password will be encrypted when router store it in Run/Start Files
    using MD5 which apps like Cain can crack but will take long time command: enable
    secret 5 00271A5307542A02D22842 (notice above is not the password string it self but
    the hash of the password) or enable secret cisco123 (notice above is the password
    string it self)
    Type 7 this mean the password will be encrypted when router store it in Run/Start Files
    using Vigenere cipher which any website with type7 reverser can crack it in less than
    one second command : ena password cisco123 service password-encryption
    Type 8
    this mean the password will be encrypted when router store it in Run/Start Files using
    PBKDF2-SHA-256
    starting from IOS 15.3(3).
    Page 73
    Password-Based Key Derivation Function 2 (PBKDF2) with Secure Hash Algorithm, 26-
    bits (SHA-256) as the hashing algorithm
    Example :
    R1(config)#enable algorithm-type sha256 secret cisco
    R1(config)#do sh run | i enable
    enable secret 8
    $8$mTj4RZG8N9ZDOk$elY/asfm8kD3iDmkBe3hD2r4xcA/0oWS5V3os.O91u.
    Example :
    R1(config)# username yasser algorithm-type sha256 secret cisco
    R1# show running-config | inc username
    username yasser secret 8
    $8$dsYGNam3K1SIJO$7nv/35M/qr6t.dVc7UY9zrJDWRVqncHub1PE9UlMQFs
    Type 9
    this mean the password will be encrypted when router store it in Run/Start Files using
    scrypt as the hashing algorithm.
    starting from IOS 15.3(3)
    Example :
    R1(config)#ena algorithm-type scrypt secret cisco
    R1(config)#do sh run | i enable
    enable secret 9
    $9$WnArItcQHW/uuE$x5WTLbu7PbzGDuv0fSwGKS/KURsy5a3WCQckmJp0MbE
    Example :
    R1(config)# username demo9 algorithm-type scrypt secret cisco
    R1# show running-config | inc username
    username demo9 secret 9
    $9$nhEmQVczB7dqsO$X.HsgL6x1il0RxkOSSvyQYwucySCt7qFm4v7pqCxkKM
    Important Notes:
    1-If you configure type 8 or type 9 passwords and then downgrade to a release that
    does not support type 8 and type 9 passwords, you must configure the type 5
    passwords before downgrading. If not, you are locked out of the device and a password
    recovery is required.
    2-Starting from IOS 15.3(3)The 4 keyword was deprecated and support for type 8 and
    type 9 algorithms were added and The warning message for removal of support for the
    type 4 algorithm was added
    Page 74
    SNMP read access allows remote monitoring and management of the device.
    - Impact : Organizations implementing 'username secret' across their enterprise reduce the risk of
    unauthorized users gaining access to Cisco IOS devices by applying a MD5 hash and
    encrypting user passwords.
    Organizations not using SNMP should require all SNMP services to be disabled by
    running the 'no snmp-server' command.
    - Audit : show run | incl username
    show snmp community
  
  
    ###1.5.2 - Unset 'private' for 'snmp-server community'
    - Commande : ``no snmp-server community {private}``
    - Niveau : Level 1
        La ligne : (1.5.2:no snmp-server community {private}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : An SNMP community string permits read-only access to all objects.
    - Remédiation : no snmp-server community {private}
    - Rational : The default community string "private" is well known. Using easy to guess, well known
    community string poses a threat that an attacker can effortlessly gain unauthorized
    access to the device.
    - Impact : To reduce the risk of unauthorized access, Organizations should disable default, easy
    to guess, settings such as the 'private' setting for snmp-server community.
    - Audit : show snmp community
  
  
    ###1.5.3 - Unset 'public' for 'snmp-server community'
    - Commande : ``no snmp-server community {public}
    no snmp-server community {write_community_string}``
    - Niveau : Level 1
        La ligne : (1.5.3:no snmp-server community {public}
    no snmp-server community {write_community_string}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : An SNMP community string permits read-only access to all objects.
    Specifies read-write access. Authorized management stations can both retrieve and
    modify MIB objects.
    - Remédiation : no snmp-server community {public}
    no snmp-server community {write_community_string}
    - Rational : The default community string "public" is well known. Using easy to guess, well known
    community string poses a threat that an attacker can effortlessly gain unauthorized
    access to the device.
    Enabling SNMP read-write enables remote management of the device. Unless
    absolutely necessary, do not allow simple network management protocol (SNMP) write
    access.
    - Impact : To reduce the risk of unauthorized access, Organizations should disable default, easy
    to guess, settings such as the 'public' setting for snmp-server community.
    To reduce the risk of unauthorized access, Organizations should disable the SNMP
    'write' access for snmp-server community.
    - Audit : show snmp community
    show run | incl snmp-server community
  
  
    ###1.5.5 - Set the ACL for each 'snmp-server community'
    - Commande : ``snmp-server community <community_string> ro``
    - Niveau : Level 1
        La ligne : (1.5.5:snmp-server community <community_string> ro) n'est pas présente dans la config de l'appareil ❌
  
    - Description : This feature specifies a list of IP addresses that are allowed to use the community string
    to gain access to the SNMP agent.
    - Remédiation : snmp-server community <community_string> ro
    - Rational : If ACLs are not applied, then anyone with a valid SNMP community string can
    potentially monitor and manage the router. An ACL should be defined and applied for all
    SNMP access to limit access to a small number of authorized management stations
    segmented in a trusted management zone. If possible, use SNMPv3 which uses
    authentication, authorization, and data privatization (encryption).
    - Impact : To reduce the risk of unauthorized access, Organizations should enable access control
    lists for all snmp-server communities and restrict the access to appropriate trusted
    management zones. If possible, implement SNMPv3 to apply authentication,
    authorization, and data privatization (encryption) for additional benefits to the
    organization.
    - Audit : show run | incl snmp-server community
  
  
    ###1.5.6 - Create an 'access-list' for use with SNMP
    - Commande : ``access-list <snmp_acl_number> permit
    access-list deny any log``
    - Niveau : Level 1
        La ligne : (1.5.6:access-list <snmp_acl_number> permit
    access-list deny any log) n'est pas présente dans la config de l'appareil ❌
  
    - Description : You can use access lists to control the transmission of packets on an interface, control
    Simple Network Management Protocol (SNMP) access, and restrict the contents of
    routing updates. The Cisco IOS software stops checking the extended access list after a
    match occurs.
    - Remédiation : access-list <snmp_acl_number> permit
    access-list deny any log
    - Rational : SNMP ACLs control what addresses are authorized to manage and monitor the device
    via SNMP. If ACLs are not applied, then anyone with a valid SNMP community string
    may monitor and manage the router. An ACL should be defined and applied for all
    SNMP community strings to limit access to a small number of authorized management
    stations segmented in a trusted management zone.
    - Impact :
    - Audit : sh ip access-list <snmp_acl_number>
  
  
    ###1.5.7 - Set 'snmp-server host' when using SNMP
    - Commande : ``snmp-server host {ip_address} {trap_community_string}``
    - Niveau : Level 1
        La ligne : (1.5.7:snmp-server host {ip_address} {trap_community_string}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : SNMP notifications can be sent as traps to authorized management systems.
    - Remédiation : snmp-server host {ip_address} {trap_community_string}
    - Rational : If SNMP is enabled for device management and device alerts are required, then ensure
    the device is configured to submit traps only to authorize management systems.
    - Impact : Organizations using SNMP should restrict sending SNMP messages only to explicitly
    named systems to reduce unauthorized access.
    - Audit : show run | incl snmp-server
  
  
    ###1.5.8 - Set 'snmp-server enable traps snmp'
    - Commande : ``snmp-server enable traps snmp authentication linkup linkdown
    snmp-server group {group_name} v3 priv
    snmp-server user {user_name} {group_name} v3 auth sha``
    - Niveau : Level 1
        La ligne : (1.5.8:snmp-server enable traps snmp authentication linkup linkdown
    snmp-server group {group_name} v3 priv
    snmp-server user {user_name} {group_name} v3 auth sha) n'est pas présente dans la config de l'appareil ❌
  
    - Description : SNMP notifications can be sent as traps to authorized management systems.
    Specifies authentication of a packet with encryption when using SNMPv3
    Specify the use of a minimum of 128-bit AES algorithm for encryption when using
    SNMPv3.
    - Remédiation : snmp-server enable traps snmp authentication linkup linkdown
    snmp-server group {group_name} v3 priv
    snmp-server user {user_name} {group_name} v3 auth sha
    - Rational : SNMP has the ability to submit traps .
    SNMPv3 provides much improved security over previous versions by offering options
    for Authentication and Encryption of messages. When configuring a user for SNMPv3
    you have the option of using a range of encryption schemes, or no encryption at all, to
    protect messages in transit. AES128 is the minimum strength encryption method that
    should be deployed.
    SNMPv3 provides much improved security over previous versions by offering options
    for Authentication and Encryption of messages. When configuring a user for SNMPv3
    you have the option of using a range of encryption schemes, or no encryption at all, to
    protect messages in transit. AES128 is the minimum strength encryption method that
    should be deployed.
    - Impact : Organizations using SNMP should restrict trap types only to explicitly named traps to
    reduce unintended traffic. Enabling SNMP traps without specifying trap type will enable
    all SNMP trap types.
    Organizations using SNMP can significantly reduce the risks of unauthorized access by
    using the 'snmp-server group v3 priv' setting to encrypt messages in transit.
    Organizations using SNMP can significantly reduce the risks of unauthorized access by
    using the 'snmp-server user' setting with appropriate authentication and privacy
    protocols to encrypt messages in transit.
    - Audit : show run | incl snmp-server
    show snmp group
    show snmp user
  
  
    ###1.6.1 - Configure Login Block
    - Commande : ``(config)login block-for {**seconds**} attempts {**tries**} within
    (config)login quiet-mode access class {**acl-name | acl-number**}
    (config)login delay {**seconds**}``
    - Niveau : Level 2
        La ligne : (1.6.1:(config)login block-for {**seconds**} attempts {**tries**} within
    (config)login quiet-mode access class {**acl-name | acl-number**}
    (config)login delay {**seconds**}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : All login parameters are disabled by default. You must issue the login block-for
    command, which enables default login functionality, before using any other login
    commands. After the login block-for command is enabled, the following defaults are
    enforced:
    A default login delay of one second
    All login attempts made via Telnet or SSH are denied during the quiet period; that is, no
    ACLs are exempt from the login period until the login quiet-mode access-class
    command is issued.
    - Remédiation : (config)login block-for {**seconds**} attempts {**tries**} within
    (config)login quiet-mode access class {**acl-name | acl-number**}
    (config)login delay {**seconds**}
    - Rational : If the configured number of connection attempts fail within a specified time period, the
    Cisco device will not accept any additional connections for a “quiet period.” (Hosts that
    are permitted by a predefined access-control list [ACL] are excluded from the quiet
    period.)
    The number of failed connection attempts that trigger the quiet period can be specified
    via the new global configuration mode command login block-for . The predefined ACL
    that is excluded from the quiet period can be specified via the new global configuration
    mode command login quiet-mode access-class .
    - Impact :
    - Audit : show running-config | inc login block
  
  
    ###1.6.2 - AutoSecure
    - Commande : ``(config)auto secure {management | forwarding} {no-interact | full}
    (config)enable password {password | [encryption-type ] encrypted-
    security authentication failure rate {**threshold-rate**} log``
    - Niveau : Level 2
        La ligne : (1.6.2:(config)auto secure {management | forwarding} {no-interact | full}
    (config)enable password {password | [encryption-type ] encrypted-
    security authentication failure rate {**threshold-rate**} log) n'est pas présente dans la config de l'appareil ❌
  
    - Description : The AutoSecure feature secures a router by using a single CLI command to disable
    common IP services that can be exploited for network attacks, enable IP services and
    features that can aid in the defense of a network when under attack, and simplify and
    harden the security configuration of the router.
    - Remédiation : (config)auto secure {management | forwarding} {no-interact | full}
    (config)enable password {password | [encryption-type ] encrypted-
    security authentication failure rate {**threshold-rate**} log
    - Rational : After enabling this feature (through the auto secure command), the following global
    services are disabled on the router without prompting the user:
    Finger--Collects information about the system (reconnaissance) before an attack. If
    enabled, the information can leave your device vulnerable to attacks.
    PAD--Enables all packet assembler and disassembler (PAD) commands and
    connections between PAD devices and access servers. If enabled, it can leave your
    device vulnerable to attacks.
    Small Servers--Causes TCP and User Datagram Protocol (UDP) diagnostic port
    attacks: a sender transmits a volume of fake requests for UDP diagnostic services on
    the router, consuming all CPU resources.
    Bootp Server--Bootp is an insecure protocol that can be exploited for an attack.
    HTTP Server--Without secure-http or authentication embedded in the HTTP server with
    an associated ACL, the HTTP server is insecure and can be exploited for an attack. (If
    you must enable the HTTP server, you are prompted for the proper authentication or
    access list.) Identification Service--An insecure protocol, defined in RFC 1413, that
    allows one to query a TCP port for identification. An attacker can access private
    information about the user from the ID server.
    CDP--If a large number of Cisco Discovery Protocol (CDP) packets are sent to the
    router, the available memory of the router can be consumed, causing the router to
    crash. NTP--Without authentication or access-control, Network Time Protocol (NTP) is
    insecure and can be used by an attacker to send NTP packets to crash or overload the
    router. (If you want to turn on NTP, you must configure NTP authentication using
    Message Digest 5 (MD5) and the ntp access-group command. If NTP is enabled
    globally, disable it on all interfaces on which it is not needed.)
    Source Routing--Provided only for debugging purposes, so source routing should be
    disabled in all other cases. Otherwise, packets may slip away from some of the access
    control mechanisms that they should have gone through.
    Page 100
    - Impact : After enabling this feature, the following options in which to secure access to the router
    are available to the user:
    If a text banner does not exist, users are prompted to add a banner. This feature
    provides the following sample banner:
    Authorized access only This system is the property of ABC Enterprise Disconnect
    IMMEDIATELY if you are not an authorized user! Contact abc@xyz.com +99 876
    543210 for help. The login and password (preferably a secret password, if supported)
    are configured on the console, AUX, vty, and tty lines. The transport input and transport
    output commands are also configured on all of these lines. (Telnet and secure shell
    (SSH) are the only valid transport methods.) The exec-timeout command is configured
    on the console and AUX as 10.
    When the image on the device is a crypto image, AutoSecure enables SSH and secure
    copy (SCP) for access and file transfer to and from the router. The timeout seconds and
    authentication-retries integer options for the ip ssh command are configured to a
    minimum number. (Telnet and FTP are not affected by this operation and remain
    operational.)
    If the AutoSecure user specifies that their device does not use Simple Network
    Management Protocol (SNMP), one of the following functions occur: In interactive
    mode, the user is asked whether to disable SNMP regardless of the values of the
    community strings, which act like passwords to regulate access to the agent on the
    router. In non-interact mode, SNMP is disabled if the community string is “public” or
    “private.”
    - Audit : show auto secure config
  
  
    ###1.6.3 - Configuring Kerberos
    - Commande : ``ank {username@REALM}
    ank {username/instance@REALM
    ark {SERVICE/HOSTNAME@REALM}
    (config)kerberos local-realm {kerberos-realm}
    (config)kerberos server {kerberos-realm {hostname | ip-address}}
    (config)kerberos realm {dns-domain | host} {kerberos-realm}``
    - Niveau : Level 2
        La ligne : (1.6.3:ank {username@REALM}
    ank {username/instance@REALM
    ark {SERVICE/HOSTNAME@REALM}
    (config)kerberos local-realm {kerberos-realm}
    (config)kerberos server {kerberos-realm {hostname | ip-address}}
    (config)kerberos realm {dns-domain | host} {kerberos-realm}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Kerberos is a secret-key network authentication protocol, developed at the
    Massachusetts Institute of Technology (MIT), that uses the Data Encryption Standard
    (DES) cryptographic algorithm for encryption and authentication. Kerberos was
    designed to authenticate requests for network resources. Kerberos, like other secret-
    key systems, is based on the concept of a trusted third party that performs secure
    verification of users and services. In the Kerberos protocol, this trusted third party is
    called the key distribution center (KDC).
    The primary use of Kerberos is to verify that users and the network services they use
    are really who and what they claim to be. To accomplish this, a trusted Kerberos server
    issues tickets to users. These tickets, which have a limited lifespan, are stored in a
    user’s credential cache and can be used in place of the standard username-and-
    password authentication mechanism.
    The Kerberos credential scheme embodies a concept called “single logon.” This
    process requires authenticating a user once, and then allows secure authentication
    (without encrypting another password) wherever that user’s credential is accepted.
    Cisco IOS XE software includes Kerberos 5 support, which allows organizations already
    deploying Kerberos 5 to use the same Kerberos authentication database on their
    routers that they are already using on their other network hosts (such as UNIX servers
    and PCs).
    The following network services are supported by the Kerberos authentication
    capabilities in Cisco IOS XE software:
    Telnet
    rlogin
    rsh
    rcp
    - Remédiation : ank {username@REALM}
    ank {username/instance@REALM
    ark {SERVICE/HOSTNAME@REALM}
    (config)kerberos local-realm {kerberos-realm}
    (config)kerberos server {kerberos-realm {hostname | ip-address}}
    (config)kerberos realm {dns-domain | host} {kerberos-realm}
    - Rational : Authenticating to the Boundary Router This section describes the first layer of security
    that remote users must pass through when they attempt to access a network. The first
    step in the Kerberos authentication process is for users to authenticate themselves to
    the boundary router. The following process describes how users authenticate to a
    boundary router:
    Page 103
    - Impact : A remote user who successfully initiates a PPP session and authenticates to the
    boundary router is inside the firewall but still must authenticate to the KDC directly
    before being allowed to access network services. This is because the TGT issued by
    the KDC is stored on the router and is not useful for additional authentication unless the
    user physically logs on to the router.
    - Audit : show kerberos cred
  
  
    ###1.6.4 - Configure Web interface
    - Commande : ``(config)ip admission name {Name} proxy http
    (config)interface {type slot/port}
    (config)ip access-group {Name}
    (config)ip admission name
    (config)ip admission max-login-attempts {number}``
    - Niveau : Level 2
        La ligne : (1.6.4:(config)ip admission name {Name} proxy http
    (config)interface {type slot/port}
    (config)ip access-group {Name}
    (config)ip admission name
    (config)ip admission max-login-attempts {number}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Web-based authentication is an ingress-only feature.
    You can configure web-based authentication only on access ports. Web-based
    authentication is not supported on trunk ports, EtherChannel member ports, or dynamic
    trunk ports.
    External web authentication, where the switch redirects a client to a particular host or
    web server for displaying login message, is not supported.
    You cannot authenticate hosts on Layer 2 interfaces with static ARP cache assignment.
    These hosts are not detected by the web-based authentication feature because they do
    not send ARP messages.
    You must enable SISF-Based device tracking to use web-based authentication. By
    default, SISF-Based device tracking is disabled on a switch.
    You must configure at least one IP address to run the switch HTTP server. You must
    also configure routes to reach each host IP address. The HTTP server sends the HTTP
    login page to the host.
    Hosts that are more than one hop away might experience traffic disruption if an STP
    topology change results in the host traffic arriving on a different port. This occurs
    because the ARP and DHCP updates might not be sent after a Layer 2 (STP) topology
    change.
    Web-based authentication does not support VLAN assignment as a downloadable-host
    policy.
    Web-based authentication and Network Edge Access Topology (NEAT) are mutually
    exclusive. You cannot use web-based authentication when NEAT is enabled on an
    interface, and you cannot use NEAT when web-based authentication is running on an
    interface.
    Identify the following RADIUS security server settings that will be used while configuring
    switch-to-RADIUS-server communication:
    Host name
    Host IP address
    Host name and specific UDP port numbers
    IP address and specific UDP port numbers
    Page 105
    - Remédiation : (config)ip admission name {Name} proxy http
    (config)interface {type slot/port}
    (config)ip access-group {Name}
    (config)ip admission name
    (config)ip admission max-login-attempts {number}
    - Rational : The combination of the IP address and UDP port number creates a unique identifier,
    that enables RADIUS requests to be sent to multiple UDP ports on a server at the same
    IP address. If two different host entries on the same RADIUS server are configured for
    the same service (for example, authentication) the second host entry that is configured
    functions as the failover backup to the first one. The RADIUS host entries are chosen in
    the order that they were configured.
    - Impact :
    - Audit : show ip admission
  
  
    ###2.1.1.1.1 - Set the 'hostname'
    - Commande : ``hostname {router_name}``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : The hostname is used in prompts and default configuration filenames.
    - Remédiation : hostname {router_name}
    - Rational : The domain name is prerequisite for setting up SSH.
    - Impact : Organizations should plan the enterprise network and identify an appropriate host name
    for each router.
    - Audit : sh run | incl hostname
  
  
    ###2.1.1.1.2 - Set the 'ip domain-name'
    - Commande : ``ip domain-name {domain-name}
    crypto key generate rsa general-keys modulus 2048
    ip ssh time-out [60]
    ip ssh authentication-retries [3]``
    - Niveau : Level 1
        La ligne : (2.1.1.1.2:ip domain-name {domain-name}
    crypto key generate rsa general-keys modulus 2048
    ip ssh time-out [60]
    ip ssh authentication-retries [3]) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Define a default domain name that the Cisco IOS software uses to complete unqualified
    hostnames
    Use this command to generate RSA key pairs for your Cisco device.
    RSA keys are generated in pairs--one public RSA key and one private RSA key.
    The time interval that the router waits for the SSH client to respond before
    disconnecting an uncompleted login attempt.
    The number of retries before the SSH login session disconnects.
    - Remédiation : ip domain-name {domain-name}
    crypto key generate rsa general-keys modulus 2048
    ip ssh time-out [60]
    ip ssh authentication-retries [3]
    - Rational : The domain name is a prerequisite for setting up SSH.
    An RSA key pair is a prerequisite for setting up SSH and should be at least 2048 bits.
    NOTE: IOS does NOT display the modulus bit value in the Audit Procedure.
    This reduces the risk of an administrator leaving an authenticated session logged in for
    an extended period of time.
    This limits the number of times an unauthorized user can attempt a password without
    having to establish a new SSH login attempt. This reduces the potential for success
    during online brute force attacks by limiting the number of login attempts per SSH
    connection.
    - Impact : Organizations should plan the enterprise network and identify an appropriate domain
    name for the router.
    Organizations should plan and implement enterprise network cryptography and
    generate an appropriate RSA key pairs, such as 'modulus', greater than or equal to
    2048.
    Organizations should implement a security policy requiring minimum timeout settings for
    all network administrators and enforce the policy through the 'ip ssh timeout' command.
    Organizations should implement a security policy limiting the number of authentication
    attempts for network administrators and enforce the policy through the 'ip ssh
    authentication-retries' command.
    - Audit : sh run | incl domain-name
    sh crypto key mypubkey rsa
    sh ip ssh
    sh ip ssh
  
  
    ###2.1.1.2 - Set version 2 for 'ip ssh version'
    - Commande : ``ip ssh version 2``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Specify the version of Secure Shell (SSH) to be run on a router
    - Remédiation : ip ssh version 2
    - Rational : SSH Version 1 has been subject to a number of serious vulnerabilities and is no longer
    considered to be a secure protocol, resulting in the adoption of SSH Version 2 as an
    Internet Standard in 2006.
    Cisco routers support both versions, but due to the weakness of SSH Version 1 only the
    later standard should be used.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy to review their current protocols to ensure the most secure protocol versions are
    in use.
    - Audit : sh ip ssh
  
  
    ###2.1.2 - Set 'no cdp run'
    - Commande : ``no cdp run``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Disable Cisco Discovery Protocol (CDP) service at device level.
    - Remédiation : no cdp run
    - Rational : The Cisco Discovery Protocol is a proprietary protocol that Cisco devices use to identify
    each other on a LAN segment. It is useful only in network monitoring and
    troubleshooting situations but is considered a security risk because of the amount of
    information provided from queries. In addition, there have been published denial-of-
    service (DoS) attacks that use CDP. CDP should be completely disabled unless
    necessary.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting network protocols and explicitly require disabling all insecure or
    unnecessary protocols.
    - Audit : show cdp
  
  
    ###2.1.3 - Set 'no ip bootp server'
    - Commande : ``ip dhcp bootp ignore``
    - Niveau : Level 1
        La ligne : (2.1.3:ip dhcp bootp ignore) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable the Bootstrap Protocol (BOOTP) service on your routing device.
    - Remédiation : ip dhcp bootp ignore
    - Rational : BootP allows a router to issue IP addresses. This should be disabled unless there is a
    specific requirement.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting network protocols and explicitly require disabling all insecure or
    unnecessary protocols such as 'ip bootp server'.
    - Audit : show run | incl bootp
  
  
    ###2.1.4 - Set 'no service dhcp'
    - Commande : ``<strong>no service dhcp</strong>``
    - Niveau : Level 1
        La ligne : (2.1.4:<strong>no service dhcp</strong>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable the Dynamic Host Configuration Protocol (DHCP) server and relay agent
    features on your router.
    - Remédiation : <strong>no service dhcp</strong>
    - Rational : The DHCP server supplies automatic configuration parameters, such as dynamic IP
    address, to requesting systems. A dedicated server located in a secured management
    zone should be used to provide DHCP services instead. Attackers can potentially be
    used for denial-of-service (DoS) attacks.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting network protocols and explicitly require disabling all insecure or
    unnecessary protocols such as the Dynamic Host Configuration Protocol (DHCP).
    - Audit : show run | incl dhcp
  
  
    ###2.1.5 - Set 'no ip identd'
    - Commande : ``no ip identd``
    - Niveau : Level 1
        La ligne : (2.1.5:no ip identd) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable the identification (identd) server.
    - Remédiation : no ip identd
    - Rational : Identification protocol enables identifying a user's transmission control protocol (TCP)
    session. This information disclosure could potentially provide an attacker with
    information about users.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting network protocols and explicitly require disabling all insecure or
    unnecessary protocols such as the identification protocol (identd).
    - Audit : show run | incl identd
  
  
    ###2.1.6 - Set 'service tcp-keepalives-in'
    - Commande : ``service tcp-keepalives-in``
    - Niveau : Level 1
        La ligne : (2.1.6:service tcp-keepalives-in) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Generate keepalive packets on idle incoming network connections.
    - Remédiation : service tcp-keepalives-in
    - Rational : Stale connections use resources and could potentially be hijacked to gain illegitimate
    access. The TCP keepalives-in service generates keepalive packets on idle incoming
    network connections (initiated by remote host). This service allows the device to detect
    when the remote host fails and drop the session. If enabled, keepalives are sent once
    per minute on idle connections. The connection is closed within five minutes if no
    keepalives are received or immediately if the host replies with a reset packet.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting how long to allow terminated sessions and enforce this policy through
    the use of 'tcp-keepalives-in' command.
    - Audit : show run | incl service tcp
  
  
    ###2.1.7 - Set 'service tcp-keepalives-out'
    - Commande : ``service tcp-keepalives-out``
    - Niveau : Level 1
        La ligne : (2.1.7:service tcp-keepalives-out) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Generate keepalive packets on idle outgoing network connections.
    - Remédiation : service tcp-keepalives-out
    - Rational : Stale connections use resources and could potentially be hijacked to gain illegitimate
    access. The TCP keepalives-in service generates keepalive packets on idle incoming
    network connections (initiated by remote host). This service allows the device to detect
    when the remote host fails and drop the session. If enabled, keepalives are sent once
    per minute on idle connections. The closes connection is closed within five minutes if no
    keepalives are received or immediately if the host replies with a reset packet.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting how long to allow terminated sessions and enforce this policy through
    the use of 'tcp-keepalives-out' command.
    - Audit : show run | incl service tcp
  
  
    ###2.1.8 - Set 'no service pad'
    - Commande : ``no service pad``
    - Niveau : Level 1
        La ligne : (2.1.8:no service pad) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable X.25 Packet Assembler/Disassembler (PAD) service.
    - Remédiation : no service pad
    - Rational : If the PAD service is not necessary, disable the service to prevent intruders from
    accessing the X.25 PAD command set on the router.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting unnecessary services such as the 'PAD' service.
    - Audit : show run | incl service pad
  
  
    ###2.2.1 - Set 'logging enable'
    - Commande : ``archive
    log config
    logging enable
    end``
    - Niveau : Level 1
        La ligne : (2.2.1:archive
    log config
    logging enable
    end) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable logging of system messages.
    - Remédiation : archive
    log config
    logging enable
    end
    - Rational : Logging provides a chronological record of activities on the Cisco device and allows
    monitoring of both operational and security related events.
    - Impact : Enabling the Cisco IOS 'logging enable' command enforces the monitoring of
    technology risks for the organizations' network devices.
    - Audit : show run | i logging host
  
  
    ###2.2.2 - Set 'buffer size' for 'logging buffered'
    - Commande : ``logging buffered [log_buffer_size]``
    - Niveau : Level 1
        La ligne : (2.2.2:logging buffered [log_buffer_size]) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable system message logging to a local buffer.
    - Remédiation : logging buffered [log_buffer_size]
    - Rational : The device can copy and store log messages to an internal memory buffer. The
    buffered data is available only from a router exec or enabled exec session. This form of
    logging is useful for debugging and monitoring when logged in to a router.
    - Impact : Data forensics is effective for managing technology risks and an organization can
    enforce such policies by enabling the 'logging buffered' command.
    - Audit : show run | incl logging buffered
  
  
    ###2.2.3 - Set 'logging console critical'
    - Commande : ``logging console critical``
    - Niveau : Level 1
        La ligne : (2.2.3:logging console critical) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Verify logging to device console is enabled and limited to a rational severity level to
    avoid impacting system performance and management.
    - Remédiation : logging console critical
    - Rational : This configuration determines the severity of messages that will generate console
    messages. Logging to console should be limited only to those messages required for
    immediate troubleshooting while logged into the device. This form of logging is not
    persistent; messages printed to the console are not stored by the router. Console
    logging is handy for operators when they use the console.
    - Impact : Logging critical messages at the console is important for an organization managing
    technology risk. The 'logging console' command should capture appropriate severity
    messages to be effective.
    - Audit : show run | incl logging console
  
  
    ###2.2.4 - Set IP address for 'logging host'
    - Commande : ``logging host {syslog_server}``
    - Niveau : Level 1
        La ligne : (2.2.4:logging host {syslog_server}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Log system messages and debug output to a remote host.
    - Remédiation : logging host {syslog_server}
    - Rational : Cisco routers can send their log messages to a Unix-style Syslog service. A syslog
    service simply accepts messages and stores them in files or prints them according to a
    simple configuration file. This form of logging is best because it can provide protected
    long-term storage for logs (the devices internal logging buffer has limited capacity to
    store events.) In addition, logging to an external system is highly recommended or
    required by most security standards. If desired or required by policy, law and/or
    regulation, enable a second syslog server for redundancy.
    - Impact : Logging is an important process for an organization managing technology risk. The
    'logging host' command sets the IP address of the logging host and enforces the logging
    process.
    - Audit : sh log | incl logging host
  
  
    ###2.2.5 - Set 'logging trap informational'
    - Commande : ``logging trap informational``
    - Niveau : Level 1
        La ligne : (2.2.5:logging trap informational) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Limit messages logged to the syslog servers based on severity level informational.
    - Remédiation : logging trap informational
    - Rational : This determines the severity of messages that will generate simple network
    management protocol (SNMP) trap and or syslog messages. This setting should be set
    to either "debugging" (7) or "informational" (6), but no lower.
    - Impact : Logging is an important process for an organization managing technology risk. The
    'logging trap' command sets the severity of messages and enforces the logging
    process.
    - Audit : sh log | incl trap logging
  
  
    ###2.2.6 - Set 'service timestamps debug datetime'
    - Commande : ``service timestamps debug datetime {msec} show-``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Configure the system to apply a time stamp to debugging messages or system logging
    messages
    - Remédiation : service timestamps debug datetime {msec} show-
    - Rational : Including timestamps in log messages allows correlating events and tracing network
    attacks across multiple devices. Enabling service timestamp to mark the time log
    messages were generated simplifies obtaining a holistic view of events enabling faster
    troubleshooting of issues or attacks.
    - Impact : Logging is an important process for an organization managing technology risk and
    establishing a timeline of events is critical. The 'service timestamps' command sets the
    date and time on entries sent to the logging host and enforces the logging process.
    - Audit : sh run | incl service timestamps
  
  
    ###2.2.7 - Set 'logging source interface'
    - Commande : ``logging source-interface loopback``
    - Niveau : Level 1
        La ligne : (2.2.7:logging source-interface loopback) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Specify the source IPv4 or IPv6 address of system logging packets
    - Remédiation : logging source-interface loopback
    - Rational : This is required so that the router sends log messages to the logging server from a
    consistent IP address.
    - Impact : Logging is an important process for an organization managing technology risk and
    establishing a consistent source of messages for the logging host is critical. The 'logging
    source interface loopback' command sets a consistent IP address to send messages to
    the logging host and enforces the logging process.
    - Audit : sh run | incl logging source
  
  
    ###2.2.8 - Set 'login success/failure logging'
    - Commande : ``login on-failure log
    login on-success log
    end``
    - Niveau : Level 2
        La ligne : (2.2.8:login on-failure log
    login on-success log
    end) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Without generating audit records that are specific to the security and mission needs of
    the organization, it would be difficult to establish, correlate, and investigate the events
    relating to an incident or identify those responsible for one.
    - Remédiation : login on-failure log
    login on-success log
    end
    - Rational : Audit records can be generated from various components within the information system
    (e.g., module or policy filter).
    - Impact :
    - Audit : sho running-config | inc login on-
  
  
    ###2.3.1.1 - Set 'ntp authenticate'
    - Commande : ``ntp authenticate``
    - Niveau : Level 2
        La ligne : (2.3.1.1:ntp authenticate) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable NTP authentication.
    - Remédiation : ntp authenticate
    - Rational : Using authenticated NTP ensures the Cisco device only permits time updates from
    authorized NTP servers.
    - Impact : Organizations should establish three Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp authenticate' command enforces
    authentication between NTP hosts.
    - Audit : show run | include ntp
  
  
    ###2.3.1.2 - Set 'ntp authentication-key'
    - Commande : ``ntp authentication-key {ntp_key_id} md5 {ntp_key_hash}``
    - Niveau : Level 2
        La ligne : (2.3.1.2:ntp authentication-key {ntp_key_id} md5 {ntp_key_hash}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Define an authentication key for Network Time Protocol (NTP).
    - Remédiation : ntp authentication-key {ntp_key_id} md5 {ntp_key_hash}
    - Rational : Using an authentication key provides a higher degree of security as only authenticated
    NTP servers will be able to update time for the Cisco device.
    - Impact : Organizations should establish three Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp authentication-key' command
    enforces encrypted authentication between NTP hosts.
    - Audit : show run | include ntp authentication-key
  
  
    ###2.3.1.3 - Set the 'ntp trusted-key'
    - Commande : ``ntp trusted-key {ntp_key_id}``
    - Niveau : Level 2
        La ligne : (2.3.1.3:ntp trusted-key {ntp_key_id}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Ensure you authenticate the identity of a system to which Network Time Protocol (NTP)
    will synchronize
    - Remédiation : ntp trusted-key {ntp_key_id}
    - Rational : This authentication function provides protection against accidentally synchronizing the
    system to another system that is not trusted, because the other system must know the
    correct authentication key.
    - Impact : Organizations should establish three Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp trusted-key' command enforces
    encrypted authentication between NTP hosts.
    - Audit : show run | include ntp trusted-key
  
  
    ###2.3.1.4 - Set 'key' for each 'ntp server'
    - Commande : ``ntp server {ntp-server_ip_address}{key``
    - Niveau : Level 2
  
    Présente dans la config ✅
  
  
  
    - Description : Specifies the authentication key for NTP.
    - Remédiation : ntp server {ntp-server_ip_address}{key
    - Rational : This authentication feature provides protection against accidentally synchronizing the
    ntp system to another system that is not trusted, because the other system must know
    the correct authentication key.
    - Impact : Organizations should establish three Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp server key' command enforces
    encrypted authentication between NTP hosts.
    - Audit : show run | include ntp server
  
  
    ###2.3.2 - Set 'ip address' for 'ntp server'
    - Commande : ``ntp server {ntp-server_ip_address}
    ntp server {ntp server vrf [vrf name] ip address}``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Use this command if you want to allow the system to synchronize the system software
    clock with the specified NTP server.
    - Remédiation : ntp server {ntp-server_ip_address}
    ntp server {ntp server vrf [vrf name] ip address}
    - Rational : To ensure that the time on your Cisco router is consistent with other devices in your
    network, at least two (and preferably at least three) NTP Server/s external to the router
    should be configured.
    Ensure you also configure consistent timezone and daylight savings time setting for all
    devices. For simplicity, the default of Coordinated Universal Time (UTC).
    - Impact : Organizations should establish multiple Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp server ip address' enforces
    encrypted authentication between NTP hosts.
    - Audit : sh ntp associations
  
  
    ###2.4.1 - Create a single 'interface loopback'
    - Commande : ``interface loopback <number>
    ip address <loopback_ip_address>``
    - Niveau : Level 2
        La ligne : (2.4.1:interface loopback <number>
    ip address <loopback_ip_address>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure a single loopback interface.
    - Remédiation : interface loopback <number>
    ip address <loopback_ip_address>
    - Rational : Software-only loopback interface that emulates an interface that is always up. It is a
    virtual interface supported on all platforms.
    Alternate loopback addresses create a potential for abuse, mis-configuration, and
    inconsistencies. Additional loopback interfaces must be documented and approved prior
    to use by local security personnel.
    - Impact : Organizations should plan and establish 'loopback interfaces' for the enterprise network.
    Loopback interfaces enable critical network information such as OSPF Router IDs and
    provide termination points for routing protocol sessions.
    - Audit : sh ip int brief | incl Loopback
  
  
    ###2.4.2 - Set AAA 'source-interface'
    - Commande : ``ip radius source-interface loopback
    aaa group server tacacs+ {group_name} hostname(config-sg-
    ip tacacs source-interface {loopback_interface_number}``
    - Niveau : Level 2
        La ligne : (2.4.2:ip radius source-interface loopback
    aaa group server tacacs+ {group_name} hostname(config-sg-
    ip tacacs source-interface {loopback_interface_number}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Force AAA to use the IP address of a specified interface for all outgoing AAA packets
    - Remédiation : ip radius source-interface loopback
    aaa group server tacacs+ {group_name} hostname(config-sg-
    ip tacacs source-interface {loopback_interface_number}
    - Rational : This is required so that the AAA server (RADIUS or TACACS+) can easily identify
    routers and authenticate requests by their IP address.
    - Impact : Organizations should design and implement authentication, authorization, and
    accounting (AAA) services for effective monitoring of enterprise network devices.
    Binding AAA services to the source-interface loopback enables these services.
    - Audit : sh run | incl tacacs source | radius source
  
  
    ###2.4.3 - Set 'ntp source' to Loopback Interface
    - Commande : ``ntp source loopback {loopback_interface_number}
    ip tftp source-interface loopback``
    - Niveau : Level 2
        La ligne : (2.4.3:ntp source loopback {loopback_interface_number}
    ip tftp source-interface loopback) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Use a particular source address in Network Time Protocol (NTP) packets.
    Specify the IP address of an interface as the source address for TFTP connections.
    - Remédiation : ntp source loopback {loopback_interface_number}
    ip tftp source-interface loopback
    - Rational : Set the source address to be used when sending NTP traffic. This may be required if
    the NTP servers you peer with filter based on IP address.
    This is required so that the TFTP servers can easily identify routers and authenticate
    requests by their IP address.
    - Impact : Organizations should plan and implement network time protocol (NTP) services to
    establish official time for all enterprise network devices. Setting 'ntp source loopback'
    enforces the proper IP address for NTP services.
    Organizations should plan and implement trivial file transfer protocol (TFTP) services in
    the enterprise by setting 'tftp source-interface loopback', which enables the TFTP
    servers to identify routers and authenticate requests by IP address.
    - Audit : sh run | incl ntp source
    sh run | incl tftp source-interface
  
  
    ###3.1.1 - Set 'no ip source-route'
    - Commande : ``no ip source-route``
    - Niveau : Level 1
        La ligne : (3.1.1:no ip source-route) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable the handling of IP datagrams with source routing header options.
    - Remédiation : no ip source-route
    - Rational : Source routing is a feature of IP whereby individual packets can specify routes. This
    feature is used in several kinds of attacks. Cisco routers normally accept and process
    source routes. Unless a network depends on source routing, it should be disabled.
    - Impact : Organizations should plan and implement network policies to ensure unnecessary
    services are explicitly disabled. The 'ip source-route' feature has been used in several
    attacks and should be disabled.
    - Audit : sh run | incl ip source-route
  
  
    ###3.1.2 - Set 'no ip proxy-arp'
    - Commande : ``interface {interface}
    no ip proxy-arp``
    - Niveau : Level 2
        La ligne : (3.1.2:interface {interface}
    no ip proxy-arp) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable proxy ARP on all interfaces.
    - Remédiation : interface {interface}
    no ip proxy-arp
    - Rational : Address Resolution Protocol (ARP) provides resolution between IP and MAC
    Addresses (or other Network and Link Layer addresses on none IP networks) within a
    Layer 2 network.
    Proxy ARP is a service where a device connected to one network (in this case the Cisco
    router) answers ARP Requests which are addressed to a host on another network,
    replying with its own MAC Address and forwarding the traffic on to the intended host.
    Sometimes used for extending broadcast domains across WAN links, in most cases
    Proxy ARP on enterprise networks is used to enable communication for hosts with mis-
    configured subnet masks, a situation which should no longer be a common problem.
    Proxy ARP effectively breaks the LAN Security Perimeter, extending a network across
    multiple Layer 2 segments. Using Proxy ARP can also allow other security controls such
    as PVLAN to be bypassed.
    - Impact : Organizations should plan and implement network policies to ensure unnecessary
    services are explicitly disabled. The 'ip proxy-arp' feature effectively breaks the LAN
    security perimeter and should be disabled.
    - Audit : sh ip int {interface} | incl proxy-arp
  
  
    ###3.1.3 - Set 'no interface tunnel'
    - Commande : ``no interface tunnel {instance}``
    - Niveau : Level 1
        La ligne : (3.1.3:no interface tunnel {instance}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Verify no tunnel interfaces are defined.
    - Remédiation : no interface tunnel {instance}
    - Rational : Tunnel interfaces should not exist in general. They can be used for malicious purposes.
    If they are necessary, the network admin's should be well aware of them and their
    purpose.
    - Impact : Organizations should plan and implement enterprise network security policies that
    disable insecure and unnecessary features that increase attack surfaces such as 'tunnel
    interfaces'.
    - Audit : sh ip int brief | incl tunnel
  
  
    ###3.1.4 - Set 'ip verify unicast source reachable-via'
    - Commande : ``interface {interface_name}
    ip verify unicast source reachable-via rx allow-default
    ip access-list extended {<span>name | number}
    deny ip
    deny ip 127.0.0.0 0.255.255.255 any log
    deny ip 10.0.0.0 0.255.255.255 any log
    deny ip 0.0.0.0 0.255.255.255 any log
    deny ip 172.16.0.0 0.15.255.255 any log
    deny ip 192.168.0.0 0.0.255.255 any log
    deny ip 192.0.2.0 0.0.0.255 any log
    deny ip 169.254.0.0 0.0.255.255 any log
    deny ip 224.0.0.0 31.255.255.255 any log
    deny ip host 255.255.255.255 any log
    permit {protocol} {source_ip}
    deny any any log
    interface <external_interface>
    access-group <access-list> in
    interface {external_interface}
    ip access-group {name | number} in``
    - Niveau : Level 1
        La ligne : (3.1.4:interface {interface_name}
    ip verify unicast source reachable-via rx allow-default
    ip access-list extended {<span>name | number}
    deny ip
    deny ip 127.0.0.0 0.255.255.255 any log
    deny ip 10.0.0.0 0.255.255.255 any log
    deny ip 0.0.0.0 0.255.255.255 any log
    deny ip 172.16.0.0 0.15.255.255 any log
    deny ip 192.168.0.0 0.0.255.255 any log
    deny ip 192.0.2.0 0.0.0.255 any log
    deny ip 169.254.0.0 0.0.255.255 any log
    deny ip 224.0.0.0 31.255.255.255 any log
    deny ip host 255.255.255.255 any log
    permit {protocol} {source_ip}
    deny any any log
    interface <external_interface>
    access-group <access-list> in
    interface {external_interface}
    ip access-group {name | number} in) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Examines incoming packets to determine whether the source address is in the
    Forwarding Information Base (FIB) and permits the packet only if the source is
    reachable through the interface on which the packet was received (sometimes referred
    to as strict mode).
    This command places the router in access-list configuration mode, where you must
    define the denied or permitted access conditions by using the deny and permit
    commands.
    This command places the router in access-list configuration mode, where you must
    define the denied or permitted access conditions by using the deny and permit
    commands.
    - Remédiation : interface {interface_name}
    ip verify unicast source reachable-via rx allow-default
    ip access-list extended {<span>name | number}
    deny ip
    deny ip 127.0.0.0 0.255.255.255 any log
    deny ip 10.0.0.0 0.255.255.255 any log
    deny ip 0.0.0.0 0.255.255.255 any log
    deny ip 172.16.0.0 0.15.255.255 any log
    deny ip 192.168.0.0 0.0.255.255 any log
    deny ip 192.0.2.0 0.0.0.255 any log
    deny ip 169.254.0.0 0.0.255.255 any log
    deny ip 224.0.0.0 31.255.255.255 any log
    deny ip host 255.255.255.255 any log
    permit {protocol} {source_ip}
    deny any any log
    interface <external_interface>
    access-group <access-list> in
    interface {external_interface}
    ip access-group {name | number} in
    - Rational : Enabled uRPF helps mitigate IP spoofing by ensuring only packet source IP addresses
    only originate from expected interfaces. Configure unicast reverse-path forwarding
    (uRPF) on all external or high risk interfaces.
    Configuring access controls can help prevent spoofing attacks. To reduce the
    effectiveness of IP spoofing, configure access control to deny any traffic from the
    external network that has a source address that should reside on the internal network.
    Include local host address or any reserved private addresses (RFC 1918).
    Ensure the permit rule(s) above the final deny rule only allow traffic according to your
    organization's least privilege policy.
    Configuring access controls can help prevent spoofing attacks. To reduce the
    effectiveness of IP spoofing, configure access control to deny any traffic from the
    external network that has a source address that should reside on the internal network.
    Include local host address or any reserved private addresses (RFC 1918).
    Ensure the permit rule(s) above the final deny rule only allow traffic according to your
    organization's least privilege policy.
    - Impact : Organizations should plan and implement enterprise security policies that protect the
    confidentiality, integrity, and availability of network devices. The 'unicast Reverse-Path
    Forwarding' (uRPF) feature dynamically uses the router table to either accept or drop
    packets when arriving on an interface.
    Organizations should plan and implement enterprise security policies that explicitly
    separate internal from external networks. Adding 'ip access-list' explicitly permitting and
    denying internal and external networks enforces these policies.
    Organizations should plan and implement enterprise security policies explicitly
    permitting and denying access based upon access lists. Using the 'ip access-group'
    command enforces these policies by explicitly identifying groups permitted access.
    - Audit : sh ip int {interface} | incl verify source
    sh ip access-list {name | number}
    sh run | sec interface {external_interface}
  
  
    ###3.3.1.1 - Set 'key chain'
    - Commande : ``key chain {key-chain_name}``
    - Niveau : Level 2
        La ligne : (3.3.1.1:key chain {key-chain_name}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Define an authentication key chain to enable authentication for routing protocols. A key
    chain must have at least one key and can have up to 2,147,483,647 keys.
    NOTE: Only DRP Agent, EIGRP, and RIPv2 use key chains.
    - Remédiation : key chain {key-chain_name}
    - Rational : Routing protocols such as DRP Agent, EIGRP, and RIPv2 use key chains for
    authentication.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'key chains' for routing
    protocols enforces these policies.
    - Audit : sh run | sec key chain
  
  
    ###3.3.1.2 - Set 'key'
    - Commande : ``key {key-number}``
    - Niveau : Level 2
  
    Présente dans la config ✅
  
  
  
    - Description : Configure an authentication key on a key chain.
    - Remédiation : key {key-number}
    - Rational : This is part of the routing authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'key numbers' for key
    chains for routing protocols enforces these policies.
    - Audit : sh run | sec key chain
  
  
    ###3.3.1.3 - Set 'key-string'
    - Commande : ``key-string <key-string>``
    - Niveau : Level 2
        La ligne : (3.3.1.3:key-string <key-string>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the authentication string for a key.
    - Remédiation : key-string <key-string>
    - Rational : This is part of the routing authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'key strings' for key chains
    for routing protocols enforces these policies.
    - Audit : sh run | sec key chain
  
  
    ###3.3.1.4 - Set 'address-family ipv4 autonomous-system'
    - Commande : ``router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-``
    - Niveau : Level 2
        La ligne : (3.3.1.4:router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the EIGRP address family.
    - Remédiation : router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    - Rational : Rationale: EIGRP is a true multi-protocol routing protocol and the 'address-family'
    feature enables restriction of exchanges with specific neighbors
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'address-family' for EIGRP
    enforces these policies by restricting the exchanges between predefined network
    devices.
    - Audit : sh run | sec router eigrp
  
  
    ###3.3.1.5 - Set 'af-interface default'
    - Commande : ``router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface default``
    - Niveau : Level 2
        La ligne : (3.3.1.5:router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface default) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Defines user defaults to apply to EIGRP interfaces that belong to an address-family.
    - Remédiation : router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface default
    - Rational : Part of the EIGRP address-family setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'af-interface default' for
    EIGRP interfaces enforces these policies by restricting the exchanges between
    predefined network devices.
    - Audit : sh run | sec router eigrp
  
  
    ###3.3.1.6 - Set 'authentication key-chain'
    - Commande : ``router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication key-chain {eigrp_key-``
    - Niveau : Level 2
        La ligne : (3.3.1.6:router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication key-chain {eigrp_key-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the EIGRP address family key chain.
    - Remédiation : router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication key-chain {eigrp_key-
    - Rational : This is part of the EIGRP authentication configuration
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using the address-family 'key
    chain' for EIGRP enforces these policies by restricting the exchanges between
    predefined network devices.
    - Audit : sh run | sec router eigrp
  
  
    ###3.3.1.7 - Set 'authentication mode md5'
    - Commande : ``router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication mode md5``
    - Niveau : Level 1
        La ligne : (3.3.1.7:router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication mode md5) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure authentication to prevent unapproved sources from introducing unauthorized
    or false service messages.
    - Remédiation : router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication mode md5
    - Rational : This is part of the EIGRP authentication configuration
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using the 'authentication mode'
    for EIGRP address-family or service-family packets enforces these policies by
    restricting the type of authentication between network devices.
    - Audit : sh run | sec router eigrp
  
  
    ###3.3.1.8 - Set 'ip authentication key-chain eigrp'
    - Commande : ``interface {interface_name}
    ip authentication key-chain eigrp {eigrp_as-``
    - Niveau : Level 2
        La ligne : (3.3.1.8:interface {interface_name}
    ip authentication key-chain eigrp {eigrp_as-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Specify the type of authentication used in Enhanced Interior Gateway Routing Protocol
    (EIGRP) packets per interface.
    - Remédiation : interface {interface_name}
    ip authentication key-chain eigrp {eigrp_as-
    - Rational : Configuring EIGRP authentication key-chain number and name to restrict packet
    exchanges between network devices.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the interface with 'ip
    authentication key chain' for EIGRP by name and number enforces these policies by
    restricting the exchanges between network devices.
    - Audit : sh ip eigrp int
    sh run int {interface_name} | incl key-chain
  
  
    ###3.3.1.9 - Set 'ip authentication mode eigrp'
    - Commande : ``interface {interface_name}
    ip authentication mode eigrp {<span>eigrp_as-
    router ospf <ospf_process-id>
    area <ospf_area-id> authentication message-``
    - Niveau : Level 2
        La ligne : (3.3.1.9:interface {interface_name}
    ip authentication mode eigrp {<span>eigrp_as-
    router ospf <ospf_process-id>
    area <ospf_area-id> authentication message-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure authentication to prevent unapproved sources from introducing unauthorized
    or false routing messages.
    Enable MD5 authentication for OSPF.
    - Remédiation : interface {interface_name}
    ip authentication mode eigrp {<span>eigrp_as-
    router ospf <ospf_process-id>
    area <ospf_area-id> authentication message-
    - Rational : This is part of the EIGRP authentication configuration
    This is part of the OSPF authentication setup.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the interface with 'ip
    authentication mode' for EIGRP by number and mode enforces these policies by
    restricting the exchanges between network devices.
    Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the area
    'authentication message-digest' for OSPF enforces these policies by restricting
    exchanges between network devices.
    - Audit : sh ip eigrp int
    sh run int {interface_name} | incl authentication mode
    sh run | sec router ospf
  
  
    ###3.3.2.2 - Set 'ip ospf message-digest-key md5'
    - Commande : ``interface {interface_name}
    ip ospf message-digest-key {ospf_md5_key-id} md5``
    - Niveau : Level 2
        La ligne : (3.3.2.2:interface {interface_name}
    ip ospf message-digest-key {ospf_md5_key-id} md5) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable Open Shortest Path First (OSPF) Message Digest 5 (MD5) authentication.
    - Remédiation : interface {interface_name}
    ip ospf message-digest-key {ospf_md5_key-id} md5
    - Rational : This is part of the OSPF authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the proper
    interface(s) for 'ip ospf message-digest-key md5' enforces these policies by restricting
    exchanges between network devices.
    - Audit : sh run int {interface}
  
  
    ###3.3.3.1 - Set 'key chain'
    - Commande : ``key chain {rip_key-chain_name}``
    - Niveau : Level 2
        La ligne : (3.3.3.1:key chain {rip_key-chain_name}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Define an authentication key chain to enable authentication for RIPv2 routing protocols.
    - Remédiation : key chain {rip_key-chain_name}
    - Rational : This is part of the routing authentication process.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the proper
    authentication 'key-chain (name)' for RIPv2 protocols enforces these policies by
    restricting acceptable authentication between network devices.
    - Audit : sh run | sec key chain
  
  
    ###3.3.3.2 - Set 'key'
    - Commande : ``key {key-number}``
    - Niveau : Level 2
  
    Présente dans la config ✅
  
  
  
    - Description : Configure an authentication key on a key chain.
    - Remédiation : key {key-number}
    - Rational : This is part of the routing authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the proper
    authentication 'key' for RIPv2 protocols enforces these policies by restricting acceptable
    authentication between network devices.
    - Audit : sh run | sec key chain
  
  
    ###3.3.3.3 - Set 'key-string'
    - Commande : ``key-string <key-string>``
    - Niveau : Level 2
        La ligne : (3.3.3.3:key-string <key-string>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the authentication string for a key.
    - Remédiation : key-string <key-string>
    - Rational : This is part of the routing authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'key-string' for key chains
    for routing protocols enforces these policies.
    - Audit : sh run | sec key chain
  
  
    ###3.3.3.4 - Set 'ip rip authentication key-chain'
    - Commande : ``interface {interface_name}
    ip rip authentication key-chain {rip_key-``
    - Niveau : Level 2
        La ligne : (3.3.3.4:interface {interface_name}
    ip rip authentication key-chain {rip_key-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable authentication for Routing Information Protocol (RIP) Version 2 packets and to
    specify the set of keys that can be used on an interface.
    - Remédiation : interface {interface_name}
    ip rip authentication key-chain {rip_key-
    - Rational : This is part of the RIPv2 authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the interface with 'ip
    rip authentication key-chain' by name enforces these policies by restricting the
    exchanges between network devices.
    - Audit : sh run int {interface_name}
  
  
    ###3.3.3.5 - Set 'ip rip authentication mode' to 'md5'
    - Commande : ``interface <interface_name>
    ip rip authentication mode md5``
    - Niveau : Level 2
        La ligne : (3.3.3.5:interface <interface_name>
    ip rip authentication mode md5) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the Interface with the RIPv2 key chain.
    - Remédiation : interface <interface_name>
    ip rip authentication mode md5
    - Rational : This is part of the RIPv2 authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using the 'ip rip authentication
    mode md5' enforces these policies by restricting the type of authentication between
    network devices.
    - Audit : sh run int <interface>
  
  
    ###3.3.4.1 - Set 'neighbor password'
    - Commande : ``router bgp <bgp_as-number>
    neighbor <bgp_neighbor-ip | peer-group-``
    - Niveau : Level 2
        La ligne : (3.3.4.1:router bgp <bgp_as-number>
    neighbor <bgp_neighbor-ip | peer-group-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable message digest5 (MD5) authentication on a TCP connection between two BGP
    peers
    - Remédiation : router bgp <bgp_as-number>
    neighbor <bgp_neighbor-ip | peer-group-
    - Rational : Enforcing routing authentication reduces the likelihood of routing poisoning and
    unauthorized routers from joining BGP routing.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using the 'neighbor password' for
    BGP enforces these policies by restricting the type of authentication between network
    devices.
    - Audit : sh run | sec router bgp
  
  
  
    Résumé:
  
    ✅ 12 règles présentes sur 78
    ❌ 66 règles absentes sur 78
    Il y'a 9 règles de niveau 1
    Il y'a 3 règles de niveau 2
2025-06-13 00:08:40,522 p=14882 u=user n=ansible | TASK [cisco : Correction de toute la configuration] *****************************
2025-06-13 00:08:40,544 p=14882 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 00:08:40,547 p=14882 u=user n=ansible | TASK [cisco : cherry-pick fzf] **************************************************
2025-06-13 00:08:40,569 p=14882 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 00:08:40,571 p=14882 u=user n=ansible | TASK [Appareils Pfsense] ********************************************************
2025-06-13 00:08:40,591 p=14882 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 00:08:40,596 p=14882 u=user n=ansible | PLAY RECAP **********************************************************************
2025-06-13 00:08:40,596 p=14882 u=user n=ansible | 192.168.122.237            : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2025-06-13 00:08:40,696 p=14890 u=user n=ansible | shutdown complete
2025-06-13 01:06:09,653 p=15431 u=user n=ansible | PLAY [Détection de la technologie] **********************************************
2025-06-13 01:06:09,661 p=15431 u=user n=ansible | TASK [Affichage de la technologie] **********************************************
2025-06-13 01:06:10,039 p=15433 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-13 01:06:10,043 p=15431 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : cisco.ios.ios'
2025-06-13 01:06:10,045 p=15431 u=user n=ansible | TASK [trouvé cisco] *************************************************************
2025-06-13 01:06:10,378 p=15431 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-13 01:06:10,381 p=15431 u=user n=ansible | TASK [trouvé pfsense] ***********************************************************
2025-06-13 01:06:10,400 p=15431 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:06:10,402 p=15431 u=user n=ansible | TASK [Appareils Cisco] **********************************************************
2025-06-13 01:06:10,431 p=15431 u=user n=ansible | TASK [cisco : options taches utilisateur] ***************************************
2025-06-13 01:06:10,750 p=15446 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-13 01:06:11,675 p=15431 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:06:11,677 p=15431 u=user n=ansible | TASK [cisco : récupération de la configuration machine] *************************
2025-06-13 01:06:11,705 p=15431 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-13 01:06:11,715 p=15431 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] ******************
2025-06-13 01:06:12,283 p=15437 u=user n=p=15437 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-13 01:06:14,734 p=15437 u=user n=p=15437 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-13 01:06:14,738 p=15437 u=user n=p=15437 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-13 01:06:14,767 p=15431 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-13 01:06:14,768 p=15431 u=user n=ansible | PLAY RECAP **********************************************************************
2025-06-13 01:06:14,768 p=15431 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-13 01:06:14,868 p=15437 u=user n=ansible | shutdown complete
2025-06-13 01:10:01,669 p=15512 u=user n=ansible | PLAY [Détection de la technologie] **********************************************
2025-06-13 01:10:01,676 p=15512 u=user n=ansible | TASK [Affichage de la technologie] **********************************************
2025-06-13 01:10:02,044 p=15514 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-13 01:10:02,048 p=15512 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : cisco.ios.ios'
2025-06-13 01:10:02,051 p=15512 u=user n=ansible | TASK [trouvé cisco] *************************************************************
2025-06-13 01:10:02,404 p=15512 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-13 01:10:02,406 p=15512 u=user n=ansible | TASK [trouvé pfsense] ***********************************************************
2025-06-13 01:10:02,428 p=15512 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:10:02,430 p=15512 u=user n=ansible | TASK [Appareils Cisco] **********************************************************
2025-06-13 01:10:02,458 p=15512 u=user n=ansible | TASK [cisco : options taches utilisateur] ***************************************
2025-06-13 01:10:02,796 p=15527 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-13 01:10:04,845 p=15512 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:10:04,847 p=15512 u=user n=ansible | TASK [cisco : récupération de la configuration machine] *************************
2025-06-13 01:10:04,873 p=15512 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-13 01:10:04,885 p=15512 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] ******************
2025-06-13 01:10:05,470 p=15518 u=user n=p=15518 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-13 01:10:07,753 p=15518 u=user n=p=15518 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-13 01:10:07,758 p=15518 u=user n=p=15518 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-13 01:10:07,785 p=15512 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-13 01:10:07,787 p=15512 u=user n=ansible | PLAY RECAP **********************************************************************
2025-06-13 01:10:07,787 p=15512 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-13 01:10:07,887 p=15518 u=user n=ansible | shutdown complete
2025-06-13 01:10:29,851 p=15570 u=user n=ansible | PLAY [Détection de la technologie] **********************************************
2025-06-13 01:10:29,858 p=15570 u=user n=ansible | TASK [Affichage de la technologie] **********************************************
2025-06-13 01:10:30,215 p=15572 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-13 01:10:30,219 p=15570 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : cisco.ios.ios'
2025-06-13 01:10:30,221 p=15570 u=user n=ansible | TASK [trouvé cisco] *************************************************************
2025-06-13 01:10:30,568 p=15570 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-13 01:10:30,570 p=15570 u=user n=ansible | TASK [trouvé pfsense] ***********************************************************
2025-06-13 01:10:30,587 p=15570 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:10:30,590 p=15570 u=user n=ansible | TASK [Appareils Cisco] **********************************************************
2025-06-13 01:10:30,618 p=15570 u=user n=ansible | TASK [cisco : options taches utilisateur] ***************************************
2025-06-13 01:10:30,939 p=15585 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-13 01:10:32,436 p=15570 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:10:32,438 p=15570 u=user n=ansible | TASK [cisco : récupération de la configuration machine] *************************
2025-06-13 01:10:32,466 p=15570 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-13 01:10:32,476 p=15570 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] ******************
2025-06-13 01:10:33,059 p=15576 u=user n=p=15576 u=user | paramiko [192.168.122.237] | Connected (version 2.0, client Cisco-1.25)
2025-06-13 01:10:35,343 p=15576 u=user n=p=15576 u=user | paramiko [192.168.122.237] | Authentication (publickey) failed.
2025-06-13 01:10:35,347 p=15576 u=user n=p=15576 u=user | paramiko [192.168.122.237] | Disconnect (code 2): Protocol error: expected packet type 50, got 5
2025-06-13 01:10:35,379 p=15570 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: No existing session
2025-06-13 01:10:35,381 p=15570 u=user n=ansible | PLAY RECAP **********************************************************************
2025-06-13 01:10:35,381 p=15570 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-13 01:10:35,481 p=15576 u=user n=ansible | shutdown complete
2025-06-13 01:33:27,069 p=15778 u=user n=ansible | PLAY [Détection de la technologie] **********************************************
2025-06-13 01:33:27,076 p=15778 u=user n=ansible | TASK [Affichage de la technologie] **********************************************
2025-06-13 01:33:27,459 p=15780 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-13 01:33:27,463 p=15778 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : cisco.ios.ios'
2025-06-13 01:33:27,465 p=15778 u=user n=ansible | TASK [trouvé cisco] *************************************************************
2025-06-13 01:33:27,797 p=15778 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-13 01:33:27,799 p=15778 u=user n=ansible | TASK [trouvé pfsense] ***********************************************************
2025-06-13 01:33:27,816 p=15778 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:33:27,819 p=15778 u=user n=ansible | TASK [Appareils Cisco] **********************************************************
2025-06-13 01:33:27,847 p=15778 u=user n=ansible | TASK [cisco : options taches utilisateur] ***************************************
2025-06-13 01:33:28,166 p=15793 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-13 01:33:29,473 p=15778 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:33:29,475 p=15778 u=user n=ansible | TASK [cisco : récupération de la configuration machine] *************************
2025-06-13 01:33:29,503 p=15778 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-13 01:33:29,515 p=15778 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] ******************
2025-06-13 01:33:30,172 p=15778 u=user n=ansible | fatal: [192.168.122.237]: FAILED! => changed=false 
  ansible_facts:
    discovered_interpreter_python: /usr/bin/python3
  msg: ansible-pylibssh is not installed
2025-06-13 01:33:30,174 p=15778 u=user n=ansible | PLAY RECAP **********************************************************************
2025-06-13 01:33:30,174 p=15778 u=user n=ansible | 192.168.122.237            : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-06-13 01:33:30,274 p=15784 u=user n=ansible | shutdown complete
2025-06-13 01:36:30,850 p=17028 u=user n=ansible | PLAY [Détection de la technologie] **********************************************
2025-06-13 01:36:30,858 p=17028 u=user n=ansible | TASK [Affichage de la technologie] **********************************************
2025-06-13 01:36:31,213 p=17030 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-13 01:36:31,217 p=17028 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : cisco.ios.ios'
2025-06-13 01:36:31,220 p=17028 u=user n=ansible | TASK [trouvé cisco] *************************************************************
2025-06-13 01:36:31,551 p=17028 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-13 01:36:31,553 p=17028 u=user n=ansible | TASK [trouvé pfsense] ***********************************************************
2025-06-13 01:36:31,572 p=17028 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:36:31,575 p=17028 u=user n=ansible | TASK [Appareils Cisco] **********************************************************
2025-06-13 01:36:31,604 p=17028 u=user n=ansible | TASK [cisco : options taches utilisateur] ***************************************
2025-06-13 01:36:31,926 p=17043 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-13 01:36:32,655 p=17028 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:36:32,657 p=17028 u=user n=ansible | TASK [cisco : récupération de la configuration machine] *************************
2025-06-13 01:36:32,685 p=17028 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-13 01:36:32,697 p=17028 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] ******************
2025-06-13 01:36:35,928 p=17028 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:36:35,931 p=17028 u=user n=ansible | TASK [cisco : Sauvegarde de la config] ******************************************
2025-06-13 01:36:36,772 p=17028 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:36:36,775 p=17028 u=user n=ansible | TASK [cisco : declaration des variables] ****************************************
2025-06-13 01:36:37,282 p=17028 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:36:37,284 p=17028 u=user n=ansible | TASK [cisco : verbose ?] ********************************************************
2025-06-13 01:36:37,617 p=17117 u=user n=ansible | [cisco : verbose ?]
Voulez-vous afficher la version vebose ? (y/n):
2025-06-13 01:36:42,683 p=17028 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:36:42,686 p=17028 u=user n=ansible | TASK [cisco : rapport no verbose] ***********************************************
2025-06-13 01:36:42,706 p=17028 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:36:42,709 p=17028 u=user n=ansible | TASK [cisco : rapport verbose] **************************************************
2025-06-13 01:36:43,364 p=17028 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:36:43,368 p=17028 u=user n=ansible | TASK [cisco : commandes manquantes only] ****************************************
2025-06-13 01:36:43,957 p=17028 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:36:43,960 p=17028 u=user n=ansible | TASK [cisco : affichage no verbose] *********************************************
2025-06-13 01:36:43,983 p=17028 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:36:43,986 p=17028 u=user n=ansible | TASK [cisco : affichage verbose] ************************************************
2025-06-13 01:36:44,538 p=17028 u=user n=ansible | ok: [192.168.122.237] => 
  lookup('file', (ansible_config_file | dirname) + '/rapport/' + inventory_hostname + '_rapport_verbose.txt'): |-
    Rapport de conformité CIS pour l'appareil Cisco : 192.168.122.237
  
  
  
    ###1.1.1 - Enable 'aaa new-model'
    - Commande : ``aaa new-model``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : This command enables the AAA access control system.
    - Remédiation : aaa new-model
    - Rational : Authentication, authorization and accounting (AAA) services provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices.
    - Impact : Implementing Cisco AAA is significantly disruptive as former access methods are
    immediately disabled. Therefore, before implementing Cisco AAA, the organization
    should carefully review and plan their authentication criteria (logins & passwords,
    challenges & responses, and token technologies), authorization methods, and
    accounting requirements.
    - Audit : show running-config | inc aaa new-model
  
  
    ###1.1.2 - Enable 'aaa authentication login'
    - Commande : ``aaa authentication login {default | aaa_list_name} [passwd-``
    - Niveau : Level 1
        La ligne : (1.1.2:aaa authentication login {default | aaa_list_name} [passwd-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Sets authentication, authorization and accounting (AAA) authentication at login.
    - Remédiation : aaa authentication login {default | aaa_list_name} [passwd-
    - Rational : Using AAA authentication for interactive management access to the device provides
    consistent, centralized control of your network. The default under AAA (local or network)
    is to require users to log in using a valid user name and password. This rule applies for
    both local and network AAA. Fallback mode should also be enabled to allow emergency
    access to the router or switch in the event that the AAA server was unreachable, by
    utilizing the LOCAL keyword after the AAA server-tag.
    - Impact : Implementing Cisco AAA is significantly disruptive as former access methods are
    immediately disabled. Therefore, before implementing Cisco AAA, the organization
    should carefully review and plan their authentication methods such as logins and
    passwords, challenges and responses, and which token technologies will be used.
    - Audit : show running-config | incl aaa authentication login
  
  
    ###1.1.3 - Enable 'aaa authentication enable default'
    - Commande : ``aaa authentication enable default {method1} enable``
    - Niveau : Level 1
        La ligne : (1.1.3:aaa authentication enable default {method1} enable) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Authenticates users who access privileged EXEC mode when they use the enable
    command.
    - Remédiation : aaa authentication enable default {method1} enable
    - Rational : Using AAA authentication for interactive management access to the device provides
    consistent, centralized control of your network. The default under AAA (local or network)
    is to require users to log in using a valid user name and password. This rule applies for
    both local and network AAA.
    - Impact : Enabling Cisco AAA 'authentication enable' mode is significantly disruptive as former
    access methods are immediately disabled. Therefore, before enabling 'aaa
    authentication enable default' mode, the organization should plan and implement
    authentication logins and passwords, challenges and responses, and token
    technologies.
    - Audit : show running-config | incl aaa authentication enable
  
  
    ###1.1.4 - Set 'login authentication for 'line vty'
    - Commande : ``line vty {line-number} [ending-line-number]
    login authentication {default | aaa_list_name}``
    - Niveau : Level 1
        La ligne : (1.1.4:line vty {line-number} [ending-line-number]
    login authentication {default | aaa_list_name}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Authenticates users who access the router or switch remotely through the VTY port.
    - Remédiation : line vty {line-number} [ending-line-number]
    login authentication {default | aaa_list_name}
    - Rational : Using AAA authentication for interactive management access to the device provides
    consistent, centralized control of your network. The default under AAA (local or network)
    is to require users to log in using a valid user name and password. This rule applies for
    both local and network AAA.
    - Impact : Enabling Cisco AAA 'login authentication for line VTY' is significantly disruptive as
    former access methods are immediately disabled. Therefore, before enabling Cisco
    AAA 'login authentication for line VTY', the organization should plan and implement
    authentication logins and passwords, challenges and responses, and token
    technologies.
    - Audit : show running-config | sec line | incl login authentication
  
  
    ###1.1.5 - Set 'login authentication for 'ip http'
    - Commande : ``(config)ip http secure-server
    (config)ip http authentication {default | _aaa\_list\_name_}
    aaa accounting commands 15 {default | list-name | guarantee-``
    - Niveau : Level 1
        La ligne : (1.1.5:(config)ip http secure-server
    (config)ip http authentication {default | _aaa\_list\_name_}
    aaa accounting commands 15 {default | list-name | guarantee-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : If account management functions are not automatically enforced, an attacker could gain
    privileged access to a vital element of the network security architecture
    Runs accounting for all commands at the specified privilege level.
    - Remédiation : (config)ip http secure-server
    (config)ip http authentication {default | _aaa\_list\_name_}
    aaa accounting commands 15 {default | list-name | guarantee-
    - Rational : Using AAA authentication for interactive management access to the device provides
    consistent, centralized control of your network. The default under AAA (local or network)
    is to require users to log in using a valid user name and password. This rule applies for
    both local and network AAA.
    Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    TACACS+.
    - Impact : Enabling Cisco AAA 'line login' is significantly disruptive as former access methods are
    immediately disabled. Therefore, before enabling Cisco AAA 'line login', the
    organization should plan and implement authentication logins and passwords,
    challenges and responses, and token technologies.
    Enabling 'aaa accounting' for privileged commands records and sends activity to the
    accounting servers and enables organizations to monitor and analyze privileged activity.
    - Audit : show running-config | inc ip http authentication
    show running-config | incl aaa accounting commands
  
  
    ###1.1.7 - Set 'aaa accounting connection'
    - Commande : ``aaa accounting connection {default | list-name | guarantee-``
    - Niveau : Level 2
        La ligne : (1.1.7:aaa accounting connection {default | list-name | guarantee-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Provides information about all outbound connections made from the network access
    server.
    - Remédiation : aaa accounting connection {default | list-name | guarantee-
    - Rational : Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    RADIUS and TACACS+.
    - Impact : Implementing aaa accounting connection creates accounting records about connections
    from the network access server. Organizations should regular monitor these connection
    records for exceptions, remediate issues, and report findings regularly.
    - Audit : show running-config | incl aaa accounting connection
  
  
    ###1.1.8 - Set 'aaa accounting exec'
    - Commande : ``aaa accounting exec {default | list-name | guarantee-first}``
    - Niveau : Level 2
        La ligne : (1.1.8:aaa accounting exec {default | list-name | guarantee-first}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Runs accounting for the EXEC shell session.
    - Remédiation : aaa accounting exec {default | list-name | guarantee-first}
    - Rational : Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    RADIUS and TACACS+.
    - Impact : Enabling aaa accounting exec creates accounting records for the EXEC terminal
    sessions on the network access server. These records include start and stop times,
    usernames, and date information. Organizations should regularly monitor these records
    for exceptions, remediate issues, and report findings.
    - Audit : show running-config | incl aaa accounting exec
  
  
    ###1.1.9 - Set 'aaa accounting network'
    - Commande : ``aaa accounting network {default | list-name | guarantee-``
    - Niveau : Level 2
        La ligne : (1.1.9:aaa accounting network {default | list-name | guarantee-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Runs accounting for all network-related service requests.
    - Remédiation : aaa accounting network {default | list-name | guarantee-
    - Rational : Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    RADIUS and TACACS+.
    - Impact : Implementing aaa accounting network creates accounting records for a method list
    including ARA, PPP, SLIP, and NCPs sessions. Organizations should regular monitor
    these records for exceptions, remediate issues, and report findings.
    - Audit : show running-config | incl aaa accounting network
  
  
    ###1.1.10 - Set 'aaa accounting system'
    - Commande : ``aaa accounting system {default | list-name | guarantee-``
    - Niveau : Level 2
        La ligne : (1.1.10:aaa accounting system {default | list-name | guarantee-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Performs accounting for all system-level events not associated with users, such as
    reloads.
    - Remédiation : aaa accounting system {default | list-name | guarantee-
    - Rational : Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    RADIUS and TACACS+.
    - Impact : Enabling aaa accounting system creates accounting records for all system-level events.
    Organizations should regular monitor these records for exceptions, remediate issues,
    and report findings regularly.
    - Audit : show running-config | incl aaa accounting system
  
  
    ###1.2.1 - Set 'privilege 1' for local users
    - Commande : ``username <LOCAL_USERNAME> privilege 1
    line vty <line-number> <ending-line-number>
    transport input ssh``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Sets the privilege level for the user.
    Selects the Secure Shell (SSH) protocol.
    - Remédiation : username <LOCAL_USERNAME> privilege 1
    line vty <line-number> <ending-line-number>
    transport input ssh
    - Rational : Default device configuration does not require strong user authentication potentially
    enabling unfettered access to an attacker that is able to reach the device. Creating a
    local account with privilege level 1 permissions only allows the local user to access the
    device with EXEC-level permissions and will be unable to modify the device without
    using the enable password. In addition, require the use of an encrypted password as
    well (see Section 1.1.4.4 - Require Encrypted User Passwords).
    Configuring VTY access control restricts remote access to only those authorized to
    manage the device and prevents unauthorized users from accessing the system.
    - Impact : Organizations should create policies requiring all local accounts with 'privilege level 1'
    with encrypted passwords to reduce the risk of unauthorized access. Default
    configuration settings do not provide strong user authentication to the device.
    To reduce risk of unauthorized access, organizations should require all VTY
    management line protocols to be limited to ssh.
    - Audit : show running-config | incl privilege
    show running-config | sec vty
  
  
    ###1.2.3 - Set 'no exec' for 'line aux 0'
    - Commande : ``line aux 0
    no exec``
    - Niveau : Level 1
        La ligne : (1.2.3:line aux 0
    no exec) n'est pas présente dans la config de l'appareil ❌
  
    - Description : The 'no exec' command restricts a line to outgoing connections only.
    - Remédiation : line aux 0
    no exec
    - Rational : Unused ports should be disabled, if not required, since they provide a potential access
    path for attackers. Some devices include both an auxiliary and console port that can be
    used to locally connect to and configure the device. The console port is normally the
    primary port used to configure the device; even when remote, backup administration is
    required via console server or Keyboard, Video, Mouse (KVM) hardware. The auxiliary
    port is primarily used for dial-up administration via an external modem; instead, use
    other available methods.
    - Impact : Organizations can reduce the risk of unauthorized access by disabling the 'aux' port
    with the 'no exec' command. Conversely, not restricting access through the 'aux' port
    increases the risk of remote unauthorized access.
    - Audit : show running-config | sec aux
    show line aux 0 | incl exec
  
  
    ###1.2.4 - Create 'access-list' for use with 'line vty'
    - Commande : ``access-list <vty_acl_number> permit tcp
    access-list <vty_acl_number> permit tcp host <vty_acl_host>
    deny ip any any log``
    - Niveau : Level 1
        La ligne : (1.2.4:access-list <vty_acl_number> permit tcp
    access-list <vty_acl_number> permit tcp host <vty_acl_host>
    deny ip any any log) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Access lists control the transmission of packets on an interface, control Virtual Terminal
    Line (VTY) access, and restrict the contents of routing updates. The Cisco IOS software
    stops checking the extended access list after a match occurs.
    - Remédiation : access-list <vty_acl_number> permit tcp
    access-list <vty_acl_number> permit tcp host <vty_acl_host>
    deny ip any any log
    - Rational : VTY ACLs control what addresses may attempt to log in to the router. Configuring VTY
    lines to use an ACL, restricts the sources where a user can manage the device. You
    should limit the specific host(s) and or network(s) authorized to connect to and configure
    the device, via an approved protocol, to those individuals or systems authorized to
    administer the device. For example, you could limit access to specific hosts, so that only
    network managers can configure the devices only by using specific network
    management workstations. Make sure you configure all VTY lines to use the same ACL.
    - Impact : Organizations can reduce the risk of unauthorized access by implementing access-lists
    for all VTY lines. Conversely, using VTY lines without access-lists increases the risk of
    unauthorized access.
    - Audit : sh ip access-list <vty_acl_number>
  
  
    ###1.2.5 - Set 'access-class' for 'line vty'
    - Commande : ``line vty <line-number> <ending-line-number>
    access-class <vty_acl_number> in
    line aux 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line con 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line vty {line_number} [ending_line_number]
    exec-timeout <<span>timeout_in_minutes>``
    - Niveau : Level 1
        La ligne : (1.2.5:line vty <line-number> <ending-line-number>
    access-class <vty_acl_number> in
    line aux 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line con 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line vty {line_number} [ending_line_number]
    exec-timeout <<span>timeout_in_minutes>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : The 'access-class' setting restricts incoming and outgoing connections between a
    particular vty (into a Cisco device) and the networking devices associated with
    addresses in an access list.
    If no input is detected during the interval, the EXEC facility resumes the current
    connection. If no connections exist, the EXEC facility returns the terminal to the idle
    state and disconnects the incoming session.
    If no input is detected during the interval, the EXEC facility resumes the current
    connection. If no connections exist, the EXEC facility returns the terminal to the idle
    state and disconnects the incoming session.
    If no input is detected during the interval, the EXEC facility resumes the current
    connection. If no connections exist, the EXEC facility returns the terminal to the idle
    state and disconnects the incoming session.
    - Remédiation : line vty <line-number> <ending-line-number>
    access-class <vty_acl_number> in
    line aux 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line con 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line vty {line_number} [ending_line_number]
    exec-timeout <<span>timeout_in_minutes>
    - Rational : Restricting the type of network devices, associated with the addresses on the access-
    list, further restricts remote access to those devices authorized to manage the device
    and reduces the risk of unauthorized access.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    - Impact : Applying 'access'class' to line VTY further restricts remote access to only those devices
    authorized to manage the device and reduces the risk of unauthorized access.
    Conversely, using VTY lines with 'access class' restrictions increases the risks of
    unauthorized access.
    Organizations should prevent unauthorized use of unattended or abandoned sessions
    by an automated control. Enabling 'exec-timeout' with an appropriate length of minutes
    or seconds prevents unauthorized access of abandoned sessions.
    Organizations should prevent unauthorized use of unattended or abandoned sessions
    by an automated control. Enabling 'exec-timeout' with an appropriate length reduces the
    risk of unauthorized access of abandoned sessions.
    Organizations should prevent unauthorized use of unattended or abandoned sessions
    by an automated control. Enabling 'exec-timeout' with an appropriate length of minutes
    or seconds prevents unauthorized access of abandoned sessions.
    - Audit : sh run | sec vty <line-number> <ending-line-number>
    sh run | sec line aux 0
    sh run | sec line con 0
    sh line vty <tty_line_number> | begin Timeout
  
  
    ###1.2.9 - Set 'transport input none' for 'line aux 0'
    - Commande : ``line aux 0
    transport input none``
    - Niveau : Level 1
        La ligne : (1.2.9:line aux 0
    transport input none) n'est pas présente dans la config de l'appareil ❌
  
    - Description : When you want to allow only an outgoing connection on a line, use the no exec
    command.
    - Remédiation : line aux 0
    transport input none
    - Rational : Unused ports should be disabled, if not required, since they provide a potential access
    path for attackers. Some devices include both an auxiliary and console port that can be
    used to locally connect to and configure the device. The console port is normally the
    primary port used to configure the device; even when remote, backup administration is
    required via console server or Keyboard, Video, Mouse (KVM) hardware. The auxiliary
    port is primarily used for dial-up administration via an external modem; instead, use
    other available methods.
    - Impact : Organizations should prevent all unauthorized access of auxiliary ports by disabling all
    protocols using the 'transport input none' command.
    - Audit : sh line aux 0 | incl input transports
  
  
    ###1.2.10 - Set 'http Secure-server' limit
    - Commande : ``ip http max-connections 2``
    - Niveau : Level 1
        La ligne : (1.2.10:ip http max-connections 2) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Device management includes the ability to control the number of administrators and
    management sessions that manage a device. Limiting the number of allowed
    administrators and sessions per administrator based on account type, role, or access
    type is helpful in limiting risks related to denial-of-service (DoS) attacks.
    If no input is detected during the interval, the EXEC facility resumes the current
    connection. If no connections exist, the EXEC facility returns the terminal to the idle
    state and disconnects the incoming session.
    - Remédiation : ip http max-connections 2
    - Rational : This requirement addresses concurrent sessions for administrative accounts and does
    not address concurrent sessions by a single administrator via multiple administrative
    accounts. The maximum number of concurrent sessions should be defined based upon
    mission needs and the operational environment for each system. At a minimum, limits
    must be set for SSH, HTTPS, account of last resort, and root account sessions.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    - Impact :
    - Audit : show run | inc ip http secure-server
  
  
    ###1.3.1 - Set the 'banner-text' for 'banner exec'
    - Commande : ``banner exec c``
    - Niveau : Level 1
        La ligne : (1.3.1:banner exec c) n'est pas présente dans la config de l'appareil ❌
  
    - Description : This command specifies a message to be displayed when an EXEC process is created
    (a line is activated, or an incoming connection is made to a vty). Follow this command
    with one or more blank spaces and a delimiting character of your choice. Then enter
    one or more lines of text, terminating the message with the second occurrence of the
    delimiting character.
    When a user connects to a router, the message-of-the-day (MOTD) banner appears
    first, followed by the login banner and prompts. After the user logs in to the router, the
    EXEC banner or incoming banner will be displayed, depending on the type of
    connection. For a reverse Telnet login, the incoming banner will be displayed. For all
    other connections, the router will display the EXEC banner.
    - Remédiation : banner exec c
    - Rational : "Network banners are electronic messages that provide notice of legal rights to users of
    computer networks. From a legal standpoint, banners have four primary functions.
    • First, banners may be used to generate consent to real-time monitoring under
    Title III.
    • Second, banners may be used to generate consent to the retrieval of stored files
    and records pursuant to ECPA.
    • Third, in the case of government networks, banners may eliminate any Fourth
    Amendment "reasonable expectation of privacy" that government employees or
    other users might otherwise retain in their use of the government's network under
    O'Connor v. Ortega, 480 U.S. 709 (1987).
    • Fourth, in the case of a non-government network, banners may establish a
    system administrator's "common authority" to consent to a law enforcement
    search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
    Department of Justice APPENDIX A: Sample Network Banner Language)
    - Impact : Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
    their networks by using a 'banner-text' for the banner exec command.
    - Audit : sh running-config | beg banner exec
  
  
    ###1.3.2 - Set the 'banner-text' for 'banner login'
    - Commande : ``banner login c``
    - Niveau : Level 1
        La ligne : (1.3.2:banner login c) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Follow the banner login command with one or more blank spaces and a delimiting
    character of your choice. Then enter one or more lines of text, terminating the message
    with the second occurrence of the delimiting character.
    When a user connects to the router, the message-of-the-day (MOTD) banner (if
    configured) appears first, followed by the login banner and prompts. After the user
    successfully logs in to the router, the EXEC banner or incoming banner will be
    displayed, depending on the type of connection. For a reverse Telnet login, the
    incoming banner will be displayed. For all other connections, the router will display the
    EXEC banner.
    - Remédiation : banner login c
    - Rational : "Network banners are electronic messages that provide notice of legal rights to users of
    computer networks. From a legal standpoint, banners have four primary functions.
    • First, banners may be used to generate consent to real-time monitoring under
    Title III.
    • Second, banners may be used to generate consent to the retrieval of stored files
    and records pursuant to ECPA.
    • Third, in the case of government networks, banners may eliminate any Fourth
    Amendment "reasonable expectation of privacy" that government employees or
    other users might otherwise retain in their use of the government's network under
    O'Connor v. Ortega, 480 U.S. 709 (1987).
    • Fourth, in the case of a non-government network, banners may establish a
    system administrator's "common authority" to consent to a law enforcement
    search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
    Department of Justice APPENDIX A: Sample Network Banner Language)
    - Impact : Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
    their networks by using a 'banner-text' for the banner login command.
    - Audit : show running-config | beg banner login
  
  
    ###1.3.3 - Set the 'banner-text' for 'banner motd'
    - Commande : ``banner motd c``
    - Niveau : Level 1
        La ligne : (1.3.3:banner motd c) n'est pas présente dans la config de l'appareil ❌
  
    - Description : This MOTD banner is displayed to all terminals connected and is useful for sending
    messages that affect all users (such as impending system shutdowns). Use the no
    exec-banner or no motd-banner command to disable the MOTD banner on a line. The
    no exec-banner command also disables the EXEC banner on the line.
    When a user connects to the router, the MOTD banner appears before the login prompt.
    After the user logs in to the router, the EXEC banner or incoming banner will be
    displayed, depending on the type of connection. For a reverse Telnet login, the
    incoming banner will be displayed. For all other connections, the router will display the
    EXEC banner.
    - Remédiation : banner motd c
    - Rational : "Network banners are electronic messages that provide notice of legal rights to users of
    computer networks. From a legal standpoint, banners have four primary functions.
    • First, banners may be used to generate consent to real-time monitoring under
    Title III.
    • Second, banners may be used to generate consent to the retrieval of stored files
    and records pursuant to ECPA.
    • Third, in the case of government networks, banners may eliminate any Fourth
    Amendment "reasonable expectation of privacy" that government employees or
    other users might otherwise retain in their use of the government's network under
    O'Connor v. Ortega, 480 U.S. 709 (1987).
    • Fourth, in the case of a non-government network, banners may establish a
    system administrator's "common authority" to consent to a law enforcement
    search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
    Department of Justice APPENDIX A: Sample Network Banner Language)
    - Impact : Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
    their networks by using a 'banner-text' for the banner motd command.
    - Audit : sh running-config | beg banner motd
  
  
    ###1.3.4 - Set the 'banner-text' for 'webauth banner'
    - Commande : ``ip admission auth-proxy-banner http {banner-text | filepath}``
    - Niveau : Level 1
        La ligne : (1.3.4:ip admission auth-proxy-banner http {banner-text | filepath}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : This banner is displayed to all terminals connected and is useful for sending messages
    that affect all users (such as impending system shutdowns). Use the no exec-banner or
    no motd-banner command to disable the banner on a line. The no exec-banner
    command also disables the EXEC banner on the line.
    When a user connects to the router, the MOTD banner appears before the login prompt.
    After the user logs in to the router, the EXEC banner or incoming banner will be
    displayed, depending on the type of connection. For a reverse Telnet login, the
    incoming banner will be displayed. For all other connections, the router will display the
    EXEC banner.
    - Remédiation : ip admission auth-proxy-banner http {banner-text | filepath}
    - Rational : "Network banners are electronic messages that provide notice of legal rights to users of
    computer networks. From a legal standpoint, banners have four primary functions.
    • First, banners may be used to generate consent to real-time monitoring under
    Title III.
    • Second, banners may be used to generate consent to the retrieval of stored files
    and records pursuant to ECPA.
    • Third, in the case of government networks, banners may eliminate any Fourth
    Amendment "reasonable expectation of privacy" that government employees or
    other users might otherwise retain in their use of the government's network under
    O'Connor v. Ortega, 480 U.S. 709 (1987).
    • Fourth, in the case of a non-government network, banners may establish a
    system administrator's "common authority" to consent to a law enforcement
    search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
    Department of Justice APPENDIX A: Sample Network Banner Language)
    - Impact : Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
    their networks by using a 'banner-text' for the banner motd command.
    - Audit : show ip admission auth-proxy-banner http
  
  
    ###1.4.1 - Set 'password' for 'enable secret'
    - Commande : ``enable secret 9 {ENABLE_SECRET_PASSWORD}``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Enable secret password type 5 and enable secret password type 5 must be migrated to
    the stronger password type 8 or 9. IF a device is upgraded from IOS XE 16.9 or later
    the type 5 is auto converted to type 9.
    Use the enable secret command to provide an additional layer of security over the
    enable password. The enable secret command provides better security by storing the
    enable secret password using a nonreversible cryptographic function. The added layer
    of security encryption provides is useful in environments where the password crosses
    the network or is stored on a TFTP server.
    - Remédiation : enable secret 9 {ENABLE_SECRET_PASSWORD}
    - Rational : Requiring the enable secret setting protects privileged EXEC mode. By default, a strong
    password is not required, a user can just press the Enter key at the Password prompt to
    start privileged mode. The enable password command causes the device to enforce use
    of a password to access privileged mode. Enable secrets use a one-way cryptographic
    hash (MD5). This is preferred to Level 7 enable passwords that use a weak, well-
    known, and easily reversible encryption algorithm.
    - Impact : Default device configuration does not require strong user authentication potentially
    enabling unfettered access to an attacker that is able to reach the device. Creating a
    local account with an encrypted password enforces login authentication and provides a
    fallback authentication mechanism for configuration in a named method list in a situation
    where centralized authentication, authorization, and accounting services are
    unavailable. The following is the type of encryption the device will allow as of 15.3: Type
    0 this mean the password will not be encrypted when router store it in Run/Start Files
    command: enable password cisco123
    Type 4 this mean the password will be encrypted when router store it in Run/Start Files
    using SHA-256 which apps like Cain can crack but will take long time command :
    enable secret 4 Rv4kArhts7yA2xd8BD2YTVbts (notice above is not the password string
    it self but the hash of the password)
    this type is deprecated starting from IOS 15.3(3)
    Type 5 this mean the password will be encrypted when router store it in Run/Start Files
    using MD5 which apps like Cain can crack but will take long time command: enable
    secret 5 00271A5307542A02D22842 (notice above is not the password string it self but
    the hash of the password) or enable secret cisco123 (notice above is the password
    string it self)
    Page 68
    Type 7 this mean the password will be encrypted when router store it in Run/Start Files
    using Vigenere cipher which any website with type7 reverser can crack it in less than
    one second command : ena password cisco123 service password-encryption
    Type 8
    this mean the password will be encrypted when router store it in Run/Start Files using
    PBKDF2-SHA-256
    starting from IOS 15.3(3).
    Password-Based Key Derivation Function 2 (PBKDF2) with Secure Hash Algorithm, 26-
    bits (SHA-256) as the hashing algorithm
    Example : R1(config)#enable algorithm-type sha256 secret cisco
    R1(config)#do sh run | i enable
    enable secret 8
    $8$mTj4RZG8N9ZDOk$elY/asfm8kD3iDmkBe3hD2r4xcA/0oWS5V3os.O91u.
    Example : R1(config)# username yasser algorithm-type sha256 secret cisco
    R1# show running-config | inc username
    username yasser secret 8
    $8$dsYGNam3K1SIJO$7nv/35M/qr6t.dVc7UY9zrJDWRVqncHub1PE9UlMQFs
    Type 9
    this means the password will be encrypted when router store it in Run/Start Files using
    scrypt as the hashing algorithm.
    starting from IOS 15.3(3)
    Example : R1(config)#ena algorithm-type scrypt secret cisco
    R1(config)#do sh run | i enable
    enable secret 9
    $9$WnArItcQHW/uuE$x5WTLbu7PbzGDuv0fSwGKS/KURsy5a3WCQckmJp0MbE
    Example : R1(config)# username demo9 algorithm-type scrypt secret cisco
    R1# show running-config | inc username
    username demo9 secret 9
    $9$nhEmQVczB7dqsO$X.HsgL6x1il0RxkOSSvyQYwucySCt7qFm4v7pqCxkKM
    Important Notes:
    1-If you configure type 8 or type 9 passwords and then downgrade to a release that
    does not support type 8 and type 9 passwords, you must configure the type 5
    passwords before downgrading. If not, you are locked out of the device and a password
    recovery is required.
    Page 69
    2-Starting from IOS 15.3(3)The 4 keyword was deprecated and support for type 8 and
    type 9 algorithms were added and The warning message for removal of support for the
    type 4 algorithm was added tect privileged EXEC mode through policies requiring the
    'enabling secret' setting, which enforces a one-way cryptographic hash (MD5).
    - Audit : sh run | incl enable secret
  
  
    ###1.4.2 - Enable 'service password-encryption'
    - Commande : ``service password-encryption``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : When password encryption is enabled, the encrypted form of the passwords is
    displayed when a more system:running-config command is entered.
    - Remédiation : service password-encryption
    - Rational : This requires passwords to be encrypted in the configuration file to prevent
    unauthorized users from learning the passwords just by reading the configuration. When
    not enabled, many of the device's passwords will be rendered in plain text in the
    configuration file. This service ensures passwords are rendered as encrypted strings
    preventing an attacker from easily determining the configured value.
    - Impact : Organizations implementing 'service password-encryption' reduce the risk of
    unauthorized users learning clear text passwords to Cisco IOS configuration files.
    However, the algorithm used is not designed to withstand serious analysis and should
    be treated like clear-text.
    - Audit : sh run | incl service password-encryption
  
  
    ###1.4.3 - Set 'username secret' for all local users
    - Commande : ``username {LOCAL_USERNAME} secret
    no snmp-server``
    - Niveau : Level 1
        La ligne : (1.4.3:username {LOCAL_USERNAME} secret
    no snmp-server) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Username secret password type 5 and enable secret password type 5 must be migrated
    to the stronger password type 8 or 9. IF a device is upgraded from IOS XE 16.9 or later
    the type 5 is auto converted to type 9.
    The username secret command provides an additional layer of security over the
    username password.
    If not in use, disable simple network management protocol (SNMP), read and write
    access.
    - Remédiation : username {LOCAL_USERNAME} secret
    no snmp-server
    - Rational : Default device configuration does not require strong user authentication potentially
    enabling unfettered access to an attacker that is able to reach the device. Creating a
    local account with an encrypted password enforces login authentication and provides a
    fallback authentication mechanism for configuration in a named method list in a situation
    where centralized authentication, authorization, and accounting services are
    unavailable. The following is the type of encryption the device will allow as of 15.3: Type
    0 this mean the password will not be encrypted when router store it in Run/Start Files
    command: enable password cisco123
    Type 4 this mean the password will be encrypted when router store it in Run/Start Files
    using SHA-256 which apps like Cain can crack but will take long time command :
    enable secret 4 Rv4kArhts7yA2xd8BD2YTVbts (notice above is not the password string
    it self but the hash of the password)
    this type is deprecated starting from IOS 15.3(3)
    Type 5 this mean the password will be encrypted when router store it in Run/Start Files
    using MD5 which apps like Cain can crack but will take long time command: enable
    secret 5 00271A5307542A02D22842 (notice above is not the password string it self but
    the hash of the password) or enable secret cisco123 (notice above is the password
    string it self)
    Type 7 this mean the password will be encrypted when router store it in Run/Start Files
    using Vigenere cipher which any website with type7 reverser can crack it in less than
    one second command : ena password cisco123 service password-encryption
    Type 8
    this mean the password will be encrypted when router store it in Run/Start Files using
    PBKDF2-SHA-256
    starting from IOS 15.3(3).
    Page 73
    Password-Based Key Derivation Function 2 (PBKDF2) with Secure Hash Algorithm, 26-
    bits (SHA-256) as the hashing algorithm
    Example :
    R1(config)#enable algorithm-type sha256 secret cisco
    R1(config)#do sh run | i enable
    enable secret 8
    $8$mTj4RZG8N9ZDOk$elY/asfm8kD3iDmkBe3hD2r4xcA/0oWS5V3os.O91u.
    Example :
    R1(config)# username yasser algorithm-type sha256 secret cisco
    R1# show running-config | inc username
    username yasser secret 8
    $8$dsYGNam3K1SIJO$7nv/35M/qr6t.dVc7UY9zrJDWRVqncHub1PE9UlMQFs
    Type 9
    this mean the password will be encrypted when router store it in Run/Start Files using
    scrypt as the hashing algorithm.
    starting from IOS 15.3(3)
    Example :
    R1(config)#ena algorithm-type scrypt secret cisco
    R1(config)#do sh run | i enable
    enable secret 9
    $9$WnArItcQHW/uuE$x5WTLbu7PbzGDuv0fSwGKS/KURsy5a3WCQckmJp0MbE
    Example :
    R1(config)# username demo9 algorithm-type scrypt secret cisco
    R1# show running-config | inc username
    username demo9 secret 9
    $9$nhEmQVczB7dqsO$X.HsgL6x1il0RxkOSSvyQYwucySCt7qFm4v7pqCxkKM
    Important Notes:
    1-If you configure type 8 or type 9 passwords and then downgrade to a release that
    does not support type 8 and type 9 passwords, you must configure the type 5
    passwords before downgrading. If not, you are locked out of the device and a password
    recovery is required.
    2-Starting from IOS 15.3(3)The 4 keyword was deprecated and support for type 8 and
    type 9 algorithms were added and The warning message for removal of support for the
    type 4 algorithm was added
    Page 74
    SNMP read access allows remote monitoring and management of the device.
    - Impact : Organizations implementing 'username secret' across their enterprise reduce the risk of
    unauthorized users gaining access to Cisco IOS devices by applying a MD5 hash and
    encrypting user passwords.
    Organizations not using SNMP should require all SNMP services to be disabled by
    running the 'no snmp-server' command.
    - Audit : show run | incl username
    show snmp community
  
  
    ###1.5.2 - Unset 'private' for 'snmp-server community'
    - Commande : ``no snmp-server community {private}``
    - Niveau : Level 1
        La ligne : (1.5.2:no snmp-server community {private}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : An SNMP community string permits read-only access to all objects.
    - Remédiation : no snmp-server community {private}
    - Rational : The default community string "private" is well known. Using easy to guess, well known
    community string poses a threat that an attacker can effortlessly gain unauthorized
    access to the device.
    - Impact : To reduce the risk of unauthorized access, Organizations should disable default, easy
    to guess, settings such as the 'private' setting for snmp-server community.
    - Audit : show snmp community
  
  
    ###1.5.3 - Unset 'public' for 'snmp-server community'
    - Commande : ``no snmp-server community {public}
    no snmp-server community {write_community_string}``
    - Niveau : Level 1
        La ligne : (1.5.3:no snmp-server community {public}
    no snmp-server community {write_community_string}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : An SNMP community string permits read-only access to all objects.
    Specifies read-write access. Authorized management stations can both retrieve and
    modify MIB objects.
    - Remédiation : no snmp-server community {public}
    no snmp-server community {write_community_string}
    - Rational : The default community string "public" is well known. Using easy to guess, well known
    community string poses a threat that an attacker can effortlessly gain unauthorized
    access to the device.
    Enabling SNMP read-write enables remote management of the device. Unless
    absolutely necessary, do not allow simple network management protocol (SNMP) write
    access.
    - Impact : To reduce the risk of unauthorized access, Organizations should disable default, easy
    to guess, settings such as the 'public' setting for snmp-server community.
    To reduce the risk of unauthorized access, Organizations should disable the SNMP
    'write' access for snmp-server community.
    - Audit : show snmp community
    show run | incl snmp-server community
  
  
    ###1.5.5 - Set the ACL for each 'snmp-server community'
    - Commande : ``snmp-server community <community_string> ro``
    - Niveau : Level 1
        La ligne : (1.5.5:snmp-server community <community_string> ro) n'est pas présente dans la config de l'appareil ❌
  
    - Description : This feature specifies a list of IP addresses that are allowed to use the community string
    to gain access to the SNMP agent.
    - Remédiation : snmp-server community <community_string> ro
    - Rational : If ACLs are not applied, then anyone with a valid SNMP community string can
    potentially monitor and manage the router. An ACL should be defined and applied for all
    SNMP access to limit access to a small number of authorized management stations
    segmented in a trusted management zone. If possible, use SNMPv3 which uses
    authentication, authorization, and data privatization (encryption).
    - Impact : To reduce the risk of unauthorized access, Organizations should enable access control
    lists for all snmp-server communities and restrict the access to appropriate trusted
    management zones. If possible, implement SNMPv3 to apply authentication,
    authorization, and data privatization (encryption) for additional benefits to the
    organization.
    - Audit : show run | incl snmp-server community
  
  
    ###1.5.6 - Create an 'access-list' for use with SNMP
    - Commande : ``access-list <snmp_acl_number> permit
    access-list deny any log``
    - Niveau : Level 1
        La ligne : (1.5.6:access-list <snmp_acl_number> permit
    access-list deny any log) n'est pas présente dans la config de l'appareil ❌
  
    - Description : You can use access lists to control the transmission of packets on an interface, control
    Simple Network Management Protocol (SNMP) access, and restrict the contents of
    routing updates. The Cisco IOS software stops checking the extended access list after a
    match occurs.
    - Remédiation : access-list <snmp_acl_number> permit
    access-list deny any log
    - Rational : SNMP ACLs control what addresses are authorized to manage and monitor the device
    via SNMP. If ACLs are not applied, then anyone with a valid SNMP community string
    may monitor and manage the router. An ACL should be defined and applied for all
    SNMP community strings to limit access to a small number of authorized management
    stations segmented in a trusted management zone.
    - Impact :
    - Audit : sh ip access-list <snmp_acl_number>
  
  
    ###1.5.7 - Set 'snmp-server host' when using SNMP
    - Commande : ``snmp-server host {ip_address} {trap_community_string}``
    - Niveau : Level 1
        La ligne : (1.5.7:snmp-server host {ip_address} {trap_community_string}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : SNMP notifications can be sent as traps to authorized management systems.
    - Remédiation : snmp-server host {ip_address} {trap_community_string}
    - Rational : If SNMP is enabled for device management and device alerts are required, then ensure
    the device is configured to submit traps only to authorize management systems.
    - Impact : Organizations using SNMP should restrict sending SNMP messages only to explicitly
    named systems to reduce unauthorized access.
    - Audit : show run | incl snmp-server
  
  
    ###1.5.8 - Set 'snmp-server enable traps snmp'
    - Commande : ``snmp-server enable traps snmp authentication linkup linkdown
    snmp-server group {group_name} v3 priv
    snmp-server user {user_name} {group_name} v3 auth sha``
    - Niveau : Level 1
        La ligne : (1.5.8:snmp-server enable traps snmp authentication linkup linkdown
    snmp-server group {group_name} v3 priv
    snmp-server user {user_name} {group_name} v3 auth sha) n'est pas présente dans la config de l'appareil ❌
  
    - Description : SNMP notifications can be sent as traps to authorized management systems.
    Specifies authentication of a packet with encryption when using SNMPv3
    Specify the use of a minimum of 128-bit AES algorithm for encryption when using
    SNMPv3.
    - Remédiation : snmp-server enable traps snmp authentication linkup linkdown
    snmp-server group {group_name} v3 priv
    snmp-server user {user_name} {group_name} v3 auth sha
    - Rational : SNMP has the ability to submit traps .
    SNMPv3 provides much improved security over previous versions by offering options
    for Authentication and Encryption of messages. When configuring a user for SNMPv3
    you have the option of using a range of encryption schemes, or no encryption at all, to
    protect messages in transit. AES128 is the minimum strength encryption method that
    should be deployed.
    SNMPv3 provides much improved security over previous versions by offering options
    for Authentication and Encryption of messages. When configuring a user for SNMPv3
    you have the option of using a range of encryption schemes, or no encryption at all, to
    protect messages in transit. AES128 is the minimum strength encryption method that
    should be deployed.
    - Impact : Organizations using SNMP should restrict trap types only to explicitly named traps to
    reduce unintended traffic. Enabling SNMP traps without specifying trap type will enable
    all SNMP trap types.
    Organizations using SNMP can significantly reduce the risks of unauthorized access by
    using the 'snmp-server group v3 priv' setting to encrypt messages in transit.
    Organizations using SNMP can significantly reduce the risks of unauthorized access by
    using the 'snmp-server user' setting with appropriate authentication and privacy
    protocols to encrypt messages in transit.
    - Audit : show run | incl snmp-server
    show snmp group
    show snmp user
  
  
    ###1.6.1 - Configure Login Block
    - Commande : ``(config)login block-for {**seconds**} attempts {**tries**} within
    (config)login quiet-mode access class {**acl-name | acl-number**}
    (config)login delay {**seconds**}``
    - Niveau : Level 2
        La ligne : (1.6.1:(config)login block-for {**seconds**} attempts {**tries**} within
    (config)login quiet-mode access class {**acl-name | acl-number**}
    (config)login delay {**seconds**}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : All login parameters are disabled by default. You must issue the login block-for
    command, which enables default login functionality, before using any other login
    commands. After the login block-for command is enabled, the following defaults are
    enforced:
    A default login delay of one second
    All login attempts made via Telnet or SSH are denied during the quiet period; that is, no
    ACLs are exempt from the login period until the login quiet-mode access-class
    command is issued.
    - Remédiation : (config)login block-for {**seconds**} attempts {**tries**} within
    (config)login quiet-mode access class {**acl-name | acl-number**}
    (config)login delay {**seconds**}
    - Rational : If the configured number of connection attempts fail within a specified time period, the
    Cisco device will not accept any additional connections for a “quiet period.” (Hosts that
    are permitted by a predefined access-control list [ACL] are excluded from the quiet
    period.)
    The number of failed connection attempts that trigger the quiet period can be specified
    via the new global configuration mode command login block-for . The predefined ACL
    that is excluded from the quiet period can be specified via the new global configuration
    mode command login quiet-mode access-class .
    - Impact :
    - Audit : show running-config | inc login block
  
  
    ###1.6.2 - AutoSecure
    - Commande : ``(config)auto secure {management | forwarding} {no-interact | full}
    (config)enable password {password | [encryption-type ] encrypted-
    security authentication failure rate {**threshold-rate**} log``
    - Niveau : Level 2
        La ligne : (1.6.2:(config)auto secure {management | forwarding} {no-interact | full}
    (config)enable password {password | [encryption-type ] encrypted-
    security authentication failure rate {**threshold-rate**} log) n'est pas présente dans la config de l'appareil ❌
  
    - Description : The AutoSecure feature secures a router by using a single CLI command to disable
    common IP services that can be exploited for network attacks, enable IP services and
    features that can aid in the defense of a network when under attack, and simplify and
    harden the security configuration of the router.
    - Remédiation : (config)auto secure {management | forwarding} {no-interact | full}
    (config)enable password {password | [encryption-type ] encrypted-
    security authentication failure rate {**threshold-rate**} log
    - Rational : After enabling this feature (through the auto secure command), the following global
    services are disabled on the router without prompting the user:
    Finger--Collects information about the system (reconnaissance) before an attack. If
    enabled, the information can leave your device vulnerable to attacks.
    PAD--Enables all packet assembler and disassembler (PAD) commands and
    connections between PAD devices and access servers. If enabled, it can leave your
    device vulnerable to attacks.
    Small Servers--Causes TCP and User Datagram Protocol (UDP) diagnostic port
    attacks: a sender transmits a volume of fake requests for UDP diagnostic services on
    the router, consuming all CPU resources.
    Bootp Server--Bootp is an insecure protocol that can be exploited for an attack.
    HTTP Server--Without secure-http or authentication embedded in the HTTP server with
    an associated ACL, the HTTP server is insecure and can be exploited for an attack. (If
    you must enable the HTTP server, you are prompted for the proper authentication or
    access list.) Identification Service--An insecure protocol, defined in RFC 1413, that
    allows one to query a TCP port for identification. An attacker can access private
    information about the user from the ID server.
    CDP--If a large number of Cisco Discovery Protocol (CDP) packets are sent to the
    router, the available memory of the router can be consumed, causing the router to
    crash. NTP--Without authentication or access-control, Network Time Protocol (NTP) is
    insecure and can be used by an attacker to send NTP packets to crash or overload the
    router. (If you want to turn on NTP, you must configure NTP authentication using
    Message Digest 5 (MD5) and the ntp access-group command. If NTP is enabled
    globally, disable it on all interfaces on which it is not needed.)
    Source Routing--Provided only for debugging purposes, so source routing should be
    disabled in all other cases. Otherwise, packets may slip away from some of the access
    control mechanisms that they should have gone through.
    Page 100
    - Impact : After enabling this feature, the following options in which to secure access to the router
    are available to the user:
    If a text banner does not exist, users are prompted to add a banner. This feature
    provides the following sample banner:
    Authorized access only This system is the property of ABC Enterprise Disconnect
    IMMEDIATELY if you are not an authorized user! Contact abc@xyz.com +99 876
    543210 for help. The login and password (preferably a secret password, if supported)
    are configured on the console, AUX, vty, and tty lines. The transport input and transport
    output commands are also configured on all of these lines. (Telnet and secure shell
    (SSH) are the only valid transport methods.) The exec-timeout command is configured
    on the console and AUX as 10.
    When the image on the device is a crypto image, AutoSecure enables SSH and secure
    copy (SCP) for access and file transfer to and from the router. The timeout seconds and
    authentication-retries integer options for the ip ssh command are configured to a
    minimum number. (Telnet and FTP are not affected by this operation and remain
    operational.)
    If the AutoSecure user specifies that their device does not use Simple Network
    Management Protocol (SNMP), one of the following functions occur: In interactive
    mode, the user is asked whether to disable SNMP regardless of the values of the
    community strings, which act like passwords to regulate access to the agent on the
    router. In non-interact mode, SNMP is disabled if the community string is “public” or
    “private.”
    - Audit : show auto secure config
  
  
    ###1.6.3 - Configuring Kerberos
    - Commande : ``ank {username@REALM}
    ank {username/instance@REALM
    ark {SERVICE/HOSTNAME@REALM}
    (config)kerberos local-realm {kerberos-realm}
    (config)kerberos server {kerberos-realm {hostname | ip-address}}
    (config)kerberos realm {dns-domain | host} {kerberos-realm}``
    - Niveau : Level 2
        La ligne : (1.6.3:ank {username@REALM}
    ank {username/instance@REALM
    ark {SERVICE/HOSTNAME@REALM}
    (config)kerberos local-realm {kerberos-realm}
    (config)kerberos server {kerberos-realm {hostname | ip-address}}
    (config)kerberos realm {dns-domain | host} {kerberos-realm}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Kerberos is a secret-key network authentication protocol, developed at the
    Massachusetts Institute of Technology (MIT), that uses the Data Encryption Standard
    (DES) cryptographic algorithm for encryption and authentication. Kerberos was
    designed to authenticate requests for network resources. Kerberos, like other secret-
    key systems, is based on the concept of a trusted third party that performs secure
    verification of users and services. In the Kerberos protocol, this trusted third party is
    called the key distribution center (KDC).
    The primary use of Kerberos is to verify that users and the network services they use
    are really who and what they claim to be. To accomplish this, a trusted Kerberos server
    issues tickets to users. These tickets, which have a limited lifespan, are stored in a
    user’s credential cache and can be used in place of the standard username-and-
    password authentication mechanism.
    The Kerberos credential scheme embodies a concept called “single logon.” This
    process requires authenticating a user once, and then allows secure authentication
    (without encrypting another password) wherever that user’s credential is accepted.
    Cisco IOS XE software includes Kerberos 5 support, which allows organizations already
    deploying Kerberos 5 to use the same Kerberos authentication database on their
    routers that they are already using on their other network hosts (such as UNIX servers
    and PCs).
    The following network services are supported by the Kerberos authentication
    capabilities in Cisco IOS XE software:
    Telnet
    rlogin
    rsh
    rcp
    - Remédiation : ank {username@REALM}
    ank {username/instance@REALM
    ark {SERVICE/HOSTNAME@REALM}
    (config)kerberos local-realm {kerberos-realm}
    (config)kerberos server {kerberos-realm {hostname | ip-address}}
    (config)kerberos realm {dns-domain | host} {kerberos-realm}
    - Rational : Authenticating to the Boundary Router This section describes the first layer of security
    that remote users must pass through when they attempt to access a network. The first
    step in the Kerberos authentication process is for users to authenticate themselves to
    the boundary router. The following process describes how users authenticate to a
    boundary router:
    Page 103
    - Impact : A remote user who successfully initiates a PPP session and authenticates to the
    boundary router is inside the firewall but still must authenticate to the KDC directly
    before being allowed to access network services. This is because the TGT issued by
    the KDC is stored on the router and is not useful for additional authentication unless the
    user physically logs on to the router.
    - Audit : show kerberos cred
  
  
    ###1.6.4 - Configure Web interface
    - Commande : ``(config)ip admission name {Name} proxy http
    (config)interface {type slot/port}
    (config)ip access-group {Name}
    (config)ip admission name
    (config)ip admission max-login-attempts {number}``
    - Niveau : Level 2
        La ligne : (1.6.4:(config)ip admission name {Name} proxy http
    (config)interface {type slot/port}
    (config)ip access-group {Name}
    (config)ip admission name
    (config)ip admission max-login-attempts {number}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Web-based authentication is an ingress-only feature.
    You can configure web-based authentication only on access ports. Web-based
    authentication is not supported on trunk ports, EtherChannel member ports, or dynamic
    trunk ports.
    External web authentication, where the switch redirects a client to a particular host or
    web server for displaying login message, is not supported.
    You cannot authenticate hosts on Layer 2 interfaces with static ARP cache assignment.
    These hosts are not detected by the web-based authentication feature because they do
    not send ARP messages.
    You must enable SISF-Based device tracking to use web-based authentication. By
    default, SISF-Based device tracking is disabled on a switch.
    You must configure at least one IP address to run the switch HTTP server. You must
    also configure routes to reach each host IP address. The HTTP server sends the HTTP
    login page to the host.
    Hosts that are more than one hop away might experience traffic disruption if an STP
    topology change results in the host traffic arriving on a different port. This occurs
    because the ARP and DHCP updates might not be sent after a Layer 2 (STP) topology
    change.
    Web-based authentication does not support VLAN assignment as a downloadable-host
    policy.
    Web-based authentication and Network Edge Access Topology (NEAT) are mutually
    exclusive. You cannot use web-based authentication when NEAT is enabled on an
    interface, and you cannot use NEAT when web-based authentication is running on an
    interface.
    Identify the following RADIUS security server settings that will be used while configuring
    switch-to-RADIUS-server communication:
    Host name
    Host IP address
    Host name and specific UDP port numbers
    IP address and specific UDP port numbers
    Page 105
    - Remédiation : (config)ip admission name {Name} proxy http
    (config)interface {type slot/port}
    (config)ip access-group {Name}
    (config)ip admission name
    (config)ip admission max-login-attempts {number}
    - Rational : The combination of the IP address and UDP port number creates a unique identifier,
    that enables RADIUS requests to be sent to multiple UDP ports on a server at the same
    IP address. If two different host entries on the same RADIUS server are configured for
    the same service (for example, authentication) the second host entry that is configured
    functions as the failover backup to the first one. The RADIUS host entries are chosen in
    the order that they were configured.
    - Impact :
    - Audit : show ip admission
  
  
    ###2.1.1.1.1 - Set the 'hostname'
    - Commande : ``hostname {router_name}``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : The hostname is used in prompts and default configuration filenames.
    - Remédiation : hostname {router_name}
    - Rational : The domain name is prerequisite for setting up SSH.
    - Impact : Organizations should plan the enterprise network and identify an appropriate host name
    for each router.
    - Audit : sh run | incl hostname
  
  
    ###2.1.1.1.2 - Set the 'ip domain-name'
    - Commande : ``ip domain-name {domain-name}
    crypto key generate rsa general-keys modulus 2048
    ip ssh time-out [60]
    ip ssh authentication-retries [3]``
    - Niveau : Level 1
        La ligne : (2.1.1.1.2:ip domain-name {domain-name}
    crypto key generate rsa general-keys modulus 2048
    ip ssh time-out [60]
    ip ssh authentication-retries [3]) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Define a default domain name that the Cisco IOS software uses to complete unqualified
    hostnames
    Use this command to generate RSA key pairs for your Cisco device.
    RSA keys are generated in pairs--one public RSA key and one private RSA key.
    The time interval that the router waits for the SSH client to respond before
    disconnecting an uncompleted login attempt.
    The number of retries before the SSH login session disconnects.
    - Remédiation : ip domain-name {domain-name}
    crypto key generate rsa general-keys modulus 2048
    ip ssh time-out [60]
    ip ssh authentication-retries [3]
    - Rational : The domain name is a prerequisite for setting up SSH.
    An RSA key pair is a prerequisite for setting up SSH and should be at least 2048 bits.
    NOTE: IOS does NOT display the modulus bit value in the Audit Procedure.
    This reduces the risk of an administrator leaving an authenticated session logged in for
    an extended period of time.
    This limits the number of times an unauthorized user can attempt a password without
    having to establish a new SSH login attempt. This reduces the potential for success
    during online brute force attacks by limiting the number of login attempts per SSH
    connection.
    - Impact : Organizations should plan the enterprise network and identify an appropriate domain
    name for the router.
    Organizations should plan and implement enterprise network cryptography and
    generate an appropriate RSA key pairs, such as 'modulus', greater than or equal to
    2048.
    Organizations should implement a security policy requiring minimum timeout settings for
    all network administrators and enforce the policy through the 'ip ssh timeout' command.
    Organizations should implement a security policy limiting the number of authentication
    attempts for network administrators and enforce the policy through the 'ip ssh
    authentication-retries' command.
    - Audit : sh run | incl domain-name
    sh crypto key mypubkey rsa
    sh ip ssh
    sh ip ssh
  
  
    ###2.1.1.2 - Set version 2 for 'ip ssh version'
    - Commande : ``ip ssh version 2``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Specify the version of Secure Shell (SSH) to be run on a router
    - Remédiation : ip ssh version 2
    - Rational : SSH Version 1 has been subject to a number of serious vulnerabilities and is no longer
    considered to be a secure protocol, resulting in the adoption of SSH Version 2 as an
    Internet Standard in 2006.
    Cisco routers support both versions, but due to the weakness of SSH Version 1 only the
    later standard should be used.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy to review their current protocols to ensure the most secure protocol versions are
    in use.
    - Audit : sh ip ssh
  
  
    ###2.1.2 - Set 'no cdp run'
    - Commande : ``no cdp run``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Disable Cisco Discovery Protocol (CDP) service at device level.
    - Remédiation : no cdp run
    - Rational : The Cisco Discovery Protocol is a proprietary protocol that Cisco devices use to identify
    each other on a LAN segment. It is useful only in network monitoring and
    troubleshooting situations but is considered a security risk because of the amount of
    information provided from queries. In addition, there have been published denial-of-
    service (DoS) attacks that use CDP. CDP should be completely disabled unless
    necessary.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting network protocols and explicitly require disabling all insecure or
    unnecessary protocols.
    - Audit : show cdp
  
  
    ###2.1.3 - Set 'no ip bootp server'
    - Commande : ``ip dhcp bootp ignore``
    - Niveau : Level 1
        La ligne : (2.1.3:ip dhcp bootp ignore) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable the Bootstrap Protocol (BOOTP) service on your routing device.
    - Remédiation : ip dhcp bootp ignore
    - Rational : BootP allows a router to issue IP addresses. This should be disabled unless there is a
    specific requirement.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting network protocols and explicitly require disabling all insecure or
    unnecessary protocols such as 'ip bootp server'.
    - Audit : show run | incl bootp
  
  
    ###2.1.4 - Set 'no service dhcp'
    - Commande : ``<strong>no service dhcp</strong>``
    - Niveau : Level 1
        La ligne : (2.1.4:<strong>no service dhcp</strong>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable the Dynamic Host Configuration Protocol (DHCP) server and relay agent
    features on your router.
    - Remédiation : <strong>no service dhcp</strong>
    - Rational : The DHCP server supplies automatic configuration parameters, such as dynamic IP
    address, to requesting systems. A dedicated server located in a secured management
    zone should be used to provide DHCP services instead. Attackers can potentially be
    used for denial-of-service (DoS) attacks.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting network protocols and explicitly require disabling all insecure or
    unnecessary protocols such as the Dynamic Host Configuration Protocol (DHCP).
    - Audit : show run | incl dhcp
  
  
    ###2.1.5 - Set 'no ip identd'
    - Commande : ``no ip identd``
    - Niveau : Level 1
        La ligne : (2.1.5:no ip identd) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable the identification (identd) server.
    - Remédiation : no ip identd
    - Rational : Identification protocol enables identifying a user's transmission control protocol (TCP)
    session. This information disclosure could potentially provide an attacker with
    information about users.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting network protocols and explicitly require disabling all insecure or
    unnecessary protocols such as the identification protocol (identd).
    - Audit : show run | incl identd
  
  
    ###2.1.6 - Set 'service tcp-keepalives-in'
    - Commande : ``service tcp-keepalives-in``
    - Niveau : Level 1
        La ligne : (2.1.6:service tcp-keepalives-in) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Generate keepalive packets on idle incoming network connections.
    - Remédiation : service tcp-keepalives-in
    - Rational : Stale connections use resources and could potentially be hijacked to gain illegitimate
    access. The TCP keepalives-in service generates keepalive packets on idle incoming
    network connections (initiated by remote host). This service allows the device to detect
    when the remote host fails and drop the session. If enabled, keepalives are sent once
    per minute on idle connections. The connection is closed within five minutes if no
    keepalives are received or immediately if the host replies with a reset packet.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting how long to allow terminated sessions and enforce this policy through
    the use of 'tcp-keepalives-in' command.
    - Audit : show run | incl service tcp
  
  
    ###2.1.7 - Set 'service tcp-keepalives-out'
    - Commande : ``service tcp-keepalives-out``
    - Niveau : Level 1
        La ligne : (2.1.7:service tcp-keepalives-out) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Generate keepalive packets on idle outgoing network connections.
    - Remédiation : service tcp-keepalives-out
    - Rational : Stale connections use resources and could potentially be hijacked to gain illegitimate
    access. The TCP keepalives-in service generates keepalive packets on idle incoming
    network connections (initiated by remote host). This service allows the device to detect
    when the remote host fails and drop the session. If enabled, keepalives are sent once
    per minute on idle connections. The closes connection is closed within five minutes if no
    keepalives are received or immediately if the host replies with a reset packet.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting how long to allow terminated sessions and enforce this policy through
    the use of 'tcp-keepalives-out' command.
    - Audit : show run | incl service tcp
  
  
    ###2.1.8 - Set 'no service pad'
    - Commande : ``no service pad``
    - Niveau : Level 1
        La ligne : (2.1.8:no service pad) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable X.25 Packet Assembler/Disassembler (PAD) service.
    - Remédiation : no service pad
    - Rational : If the PAD service is not necessary, disable the service to prevent intruders from
    accessing the X.25 PAD command set on the router.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting unnecessary services such as the 'PAD' service.
    - Audit : show run | incl service pad
  
  
    ###2.2.1 - Set 'logging enable'
    - Commande : ``archive
    log config
    logging enable
    end``
    - Niveau : Level 1
        La ligne : (2.2.1:archive
    log config
    logging enable
    end) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable logging of system messages.
    - Remédiation : archive
    log config
    logging enable
    end
    - Rational : Logging provides a chronological record of activities on the Cisco device and allows
    monitoring of both operational and security related events.
    - Impact : Enabling the Cisco IOS 'logging enable' command enforces the monitoring of
    technology risks for the organizations' network devices.
    - Audit : show run | i logging host
  
  
    ###2.2.2 - Set 'buffer size' for 'logging buffered'
    - Commande : ``logging buffered [log_buffer_size]``
    - Niveau : Level 1
        La ligne : (2.2.2:logging buffered [log_buffer_size]) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable system message logging to a local buffer.
    - Remédiation : logging buffered [log_buffer_size]
    - Rational : The device can copy and store log messages to an internal memory buffer. The
    buffered data is available only from a router exec or enabled exec session. This form of
    logging is useful for debugging and monitoring when logged in to a router.
    - Impact : Data forensics is effective for managing technology risks and an organization can
    enforce such policies by enabling the 'logging buffered' command.
    - Audit : show run | incl logging buffered
  
  
    ###2.2.3 - Set 'logging console critical'
    - Commande : ``logging console critical``
    - Niveau : Level 1
        La ligne : (2.2.3:logging console critical) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Verify logging to device console is enabled and limited to a rational severity level to
    avoid impacting system performance and management.
    - Remédiation : logging console critical
    - Rational : This configuration determines the severity of messages that will generate console
    messages. Logging to console should be limited only to those messages required for
    immediate troubleshooting while logged into the device. This form of logging is not
    persistent; messages printed to the console are not stored by the router. Console
    logging is handy for operators when they use the console.
    - Impact : Logging critical messages at the console is important for an organization managing
    technology risk. The 'logging console' command should capture appropriate severity
    messages to be effective.
    - Audit : show run | incl logging console
  
  
    ###2.2.4 - Set IP address for 'logging host'
    - Commande : ``logging host {syslog_server}``
    - Niveau : Level 1
        La ligne : (2.2.4:logging host {syslog_server}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Log system messages and debug output to a remote host.
    - Remédiation : logging host {syslog_server}
    - Rational : Cisco routers can send their log messages to a Unix-style Syslog service. A syslog
    service simply accepts messages and stores them in files or prints them according to a
    simple configuration file. This form of logging is best because it can provide protected
    long-term storage for logs (the devices internal logging buffer has limited capacity to
    store events.) In addition, logging to an external system is highly recommended or
    required by most security standards. If desired or required by policy, law and/or
    regulation, enable a second syslog server for redundancy.
    - Impact : Logging is an important process for an organization managing technology risk. The
    'logging host' command sets the IP address of the logging host and enforces the logging
    process.
    - Audit : sh log | incl logging host
  
  
    ###2.2.5 - Set 'logging trap informational'
    - Commande : ``logging trap informational``
    - Niveau : Level 1
        La ligne : (2.2.5:logging trap informational) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Limit messages logged to the syslog servers based on severity level informational.
    - Remédiation : logging trap informational
    - Rational : This determines the severity of messages that will generate simple network
    management protocol (SNMP) trap and or syslog messages. This setting should be set
    to either "debugging" (7) or "informational" (6), but no lower.
    - Impact : Logging is an important process for an organization managing technology risk. The
    'logging trap' command sets the severity of messages and enforces the logging
    process.
    - Audit : sh log | incl trap logging
  
  
    ###2.2.6 - Set 'service timestamps debug datetime'
    - Commande : ``service timestamps debug datetime {msec} show-``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Configure the system to apply a time stamp to debugging messages or system logging
    messages
    - Remédiation : service timestamps debug datetime {msec} show-
    - Rational : Including timestamps in log messages allows correlating events and tracing network
    attacks across multiple devices. Enabling service timestamp to mark the time log
    messages were generated simplifies obtaining a holistic view of events enabling faster
    troubleshooting of issues or attacks.
    - Impact : Logging is an important process for an organization managing technology risk and
    establishing a timeline of events is critical. The 'service timestamps' command sets the
    date and time on entries sent to the logging host and enforces the logging process.
    - Audit : sh run | incl service timestamps
  
  
    ###2.2.7 - Set 'logging source interface'
    - Commande : ``logging source-interface loopback``
    - Niveau : Level 1
        La ligne : (2.2.7:logging source-interface loopback) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Specify the source IPv4 or IPv6 address of system logging packets
    - Remédiation : logging source-interface loopback
    - Rational : This is required so that the router sends log messages to the logging server from a
    consistent IP address.
    - Impact : Logging is an important process for an organization managing technology risk and
    establishing a consistent source of messages for the logging host is critical. The 'logging
    source interface loopback' command sets a consistent IP address to send messages to
    the logging host and enforces the logging process.
    - Audit : sh run | incl logging source
  
  
    ###2.2.8 - Set 'login success/failure logging'
    - Commande : ``login on-failure log
    login on-success log
    end``
    - Niveau : Level 2
        La ligne : (2.2.8:login on-failure log
    login on-success log
    end) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Without generating audit records that are specific to the security and mission needs of
    the organization, it would be difficult to establish, correlate, and investigate the events
    relating to an incident or identify those responsible for one.
    - Remédiation : login on-failure log
    login on-success log
    end
    - Rational : Audit records can be generated from various components within the information system
    (e.g., module or policy filter).
    - Impact :
    - Audit : sho running-config | inc login on-
  
  
    ###2.3.1.1 - Set 'ntp authenticate'
    - Commande : ``ntp authenticate``
    - Niveau : Level 2
        La ligne : (2.3.1.1:ntp authenticate) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable NTP authentication.
    - Remédiation : ntp authenticate
    - Rational : Using authenticated NTP ensures the Cisco device only permits time updates from
    authorized NTP servers.
    - Impact : Organizations should establish three Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp authenticate' command enforces
    authentication between NTP hosts.
    - Audit : show run | include ntp
  
  
    ###2.3.1.2 - Set 'ntp authentication-key'
    - Commande : ``ntp authentication-key {ntp_key_id} md5 {ntp_key_hash}``
    - Niveau : Level 2
        La ligne : (2.3.1.2:ntp authentication-key {ntp_key_id} md5 {ntp_key_hash}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Define an authentication key for Network Time Protocol (NTP).
    - Remédiation : ntp authentication-key {ntp_key_id} md5 {ntp_key_hash}
    - Rational : Using an authentication key provides a higher degree of security as only authenticated
    NTP servers will be able to update time for the Cisco device.
    - Impact : Organizations should establish three Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp authentication-key' command
    enforces encrypted authentication between NTP hosts.
    - Audit : show run | include ntp authentication-key
  
  
    ###2.3.1.3 - Set the 'ntp trusted-key'
    - Commande : ``ntp trusted-key {ntp_key_id}``
    - Niveau : Level 2
        La ligne : (2.3.1.3:ntp trusted-key {ntp_key_id}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Ensure you authenticate the identity of a system to which Network Time Protocol (NTP)
    will synchronize
    - Remédiation : ntp trusted-key {ntp_key_id}
    - Rational : This authentication function provides protection against accidentally synchronizing the
    system to another system that is not trusted, because the other system must know the
    correct authentication key.
    - Impact : Organizations should establish three Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp trusted-key' command enforces
    encrypted authentication between NTP hosts.
    - Audit : show run | include ntp trusted-key
  
  
    ###2.3.1.4 - Set 'key' for each 'ntp server'
    - Commande : ``ntp server {ntp-server_ip_address}{key``
    - Niveau : Level 2
  
    Présente dans la config ✅
  
  
  
    - Description : Specifies the authentication key for NTP.
    - Remédiation : ntp server {ntp-server_ip_address}{key
    - Rational : This authentication feature provides protection against accidentally synchronizing the
    ntp system to another system that is not trusted, because the other system must know
    the correct authentication key.
    - Impact : Organizations should establish three Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp server key' command enforces
    encrypted authentication between NTP hosts.
    - Audit : show run | include ntp server
  
  
    ###2.3.2 - Set 'ip address' for 'ntp server'
    - Commande : ``ntp server {ntp-server_ip_address}
    ntp server {ntp server vrf [vrf name] ip address}``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Use this command if you want to allow the system to synchronize the system software
    clock with the specified NTP server.
    - Remédiation : ntp server {ntp-server_ip_address}
    ntp server {ntp server vrf [vrf name] ip address}
    - Rational : To ensure that the time on your Cisco router is consistent with other devices in your
    network, at least two (and preferably at least three) NTP Server/s external to the router
    should be configured.
    Ensure you also configure consistent timezone and daylight savings time setting for all
    devices. For simplicity, the default of Coordinated Universal Time (UTC).
    - Impact : Organizations should establish multiple Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp server ip address' enforces
    encrypted authentication between NTP hosts.
    - Audit : sh ntp associations
  
  
    ###2.4.1 - Create a single 'interface loopback'
    - Commande : ``interface loopback <number>
    ip address <loopback_ip_address>``
    - Niveau : Level 2
        La ligne : (2.4.1:interface loopback <number>
    ip address <loopback_ip_address>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure a single loopback interface.
    - Remédiation : interface loopback <number>
    ip address <loopback_ip_address>
    - Rational : Software-only loopback interface that emulates an interface that is always up. It is a
    virtual interface supported on all platforms.
    Alternate loopback addresses create a potential for abuse, mis-configuration, and
    inconsistencies. Additional loopback interfaces must be documented and approved prior
    to use by local security personnel.
    - Impact : Organizations should plan and establish 'loopback interfaces' for the enterprise network.
    Loopback interfaces enable critical network information such as OSPF Router IDs and
    provide termination points for routing protocol sessions.
    - Audit : sh ip int brief | incl Loopback
  
  
    ###2.4.2 - Set AAA 'source-interface'
    - Commande : ``ip radius source-interface loopback
    aaa group server tacacs+ {group_name} hostname(config-sg-
    ip tacacs source-interface {loopback_interface_number}``
    - Niveau : Level 2
        La ligne : (2.4.2:ip radius source-interface loopback
    aaa group server tacacs+ {group_name} hostname(config-sg-
    ip tacacs source-interface {loopback_interface_number}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Force AAA to use the IP address of a specified interface for all outgoing AAA packets
    - Remédiation : ip radius source-interface loopback
    aaa group server tacacs+ {group_name} hostname(config-sg-
    ip tacacs source-interface {loopback_interface_number}
    - Rational : This is required so that the AAA server (RADIUS or TACACS+) can easily identify
    routers and authenticate requests by their IP address.
    - Impact : Organizations should design and implement authentication, authorization, and
    accounting (AAA) services for effective monitoring of enterprise network devices.
    Binding AAA services to the source-interface loopback enables these services.
    - Audit : sh run | incl tacacs source | radius source
  
  
    ###2.4.3 - Set 'ntp source' to Loopback Interface
    - Commande : ``ntp source loopback {loopback_interface_number}
    ip tftp source-interface loopback``
    - Niveau : Level 2
        La ligne : (2.4.3:ntp source loopback {loopback_interface_number}
    ip tftp source-interface loopback) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Use a particular source address in Network Time Protocol (NTP) packets.
    Specify the IP address of an interface as the source address for TFTP connections.
    - Remédiation : ntp source loopback {loopback_interface_number}
    ip tftp source-interface loopback
    - Rational : Set the source address to be used when sending NTP traffic. This may be required if
    the NTP servers you peer with filter based on IP address.
    This is required so that the TFTP servers can easily identify routers and authenticate
    requests by their IP address.
    - Impact : Organizations should plan and implement network time protocol (NTP) services to
    establish official time for all enterprise network devices. Setting 'ntp source loopback'
    enforces the proper IP address for NTP services.
    Organizations should plan and implement trivial file transfer protocol (TFTP) services in
    the enterprise by setting 'tftp source-interface loopback', which enables the TFTP
    servers to identify routers and authenticate requests by IP address.
    - Audit : sh run | incl ntp source
    sh run | incl tftp source-interface
  
  
    ###3.1.1 - Set 'no ip source-route'
    - Commande : ``no ip source-route``
    - Niveau : Level 1
        La ligne : (3.1.1:no ip source-route) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable the handling of IP datagrams with source routing header options.
    - Remédiation : no ip source-route
    - Rational : Source routing is a feature of IP whereby individual packets can specify routes. This
    feature is used in several kinds of attacks. Cisco routers normally accept and process
    source routes. Unless a network depends on source routing, it should be disabled.
    - Impact : Organizations should plan and implement network policies to ensure unnecessary
    services are explicitly disabled. The 'ip source-route' feature has been used in several
    attacks and should be disabled.
    - Audit : sh run | incl ip source-route
  
  
    ###3.1.2 - Set 'no ip proxy-arp'
    - Commande : ``interface {interface}
    no ip proxy-arp``
    - Niveau : Level 2
        La ligne : (3.1.2:interface {interface}
    no ip proxy-arp) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable proxy ARP on all interfaces.
    - Remédiation : interface {interface}
    no ip proxy-arp
    - Rational : Address Resolution Protocol (ARP) provides resolution between IP and MAC
    Addresses (or other Network and Link Layer addresses on none IP networks) within a
    Layer 2 network.
    Proxy ARP is a service where a device connected to one network (in this case the Cisco
    router) answers ARP Requests which are addressed to a host on another network,
    replying with its own MAC Address and forwarding the traffic on to the intended host.
    Sometimes used for extending broadcast domains across WAN links, in most cases
    Proxy ARP on enterprise networks is used to enable communication for hosts with mis-
    configured subnet masks, a situation which should no longer be a common problem.
    Proxy ARP effectively breaks the LAN Security Perimeter, extending a network across
    multiple Layer 2 segments. Using Proxy ARP can also allow other security controls such
    as PVLAN to be bypassed.
    - Impact : Organizations should plan and implement network policies to ensure unnecessary
    services are explicitly disabled. The 'ip proxy-arp' feature effectively breaks the LAN
    security perimeter and should be disabled.
    - Audit : sh ip int {interface} | incl proxy-arp
  
  
    ###3.1.3 - Set 'no interface tunnel'
    - Commande : ``no interface tunnel {instance}``
    - Niveau : Level 1
        La ligne : (3.1.3:no interface tunnel {instance}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Verify no tunnel interfaces are defined.
    - Remédiation : no interface tunnel {instance}
    - Rational : Tunnel interfaces should not exist in general. They can be used for malicious purposes.
    If they are necessary, the network admin's should be well aware of them and their
    purpose.
    - Impact : Organizations should plan and implement enterprise network security policies that
    disable insecure and unnecessary features that increase attack surfaces such as 'tunnel
    interfaces'.
    - Audit : sh ip int brief | incl tunnel
  
  
    ###3.1.4 - Set 'ip verify unicast source reachable-via'
    - Commande : ``interface {interface_name}
    ip verify unicast source reachable-via rx allow-default
    ip access-list extended {<span>name | number}
    deny ip
    deny ip 127.0.0.0 0.255.255.255 any log
    deny ip 10.0.0.0 0.255.255.255 any log
    deny ip 0.0.0.0 0.255.255.255 any log
    deny ip 172.16.0.0 0.15.255.255 any log
    deny ip 192.168.0.0 0.0.255.255 any log
    deny ip 192.0.2.0 0.0.0.255 any log
    deny ip 169.254.0.0 0.0.255.255 any log
    deny ip 224.0.0.0 31.255.255.255 any log
    deny ip host 255.255.255.255 any log
    permit {protocol} {source_ip}
    deny any any log
    interface <external_interface>
    access-group <access-list> in
    interface {external_interface}
    ip access-group {name | number} in``
    - Niveau : Level 1
        La ligne : (3.1.4:interface {interface_name}
    ip verify unicast source reachable-via rx allow-default
    ip access-list extended {<span>name | number}
    deny ip
    deny ip 127.0.0.0 0.255.255.255 any log
    deny ip 10.0.0.0 0.255.255.255 any log
    deny ip 0.0.0.0 0.255.255.255 any log
    deny ip 172.16.0.0 0.15.255.255 any log
    deny ip 192.168.0.0 0.0.255.255 any log
    deny ip 192.0.2.0 0.0.0.255 any log
    deny ip 169.254.0.0 0.0.255.255 any log
    deny ip 224.0.0.0 31.255.255.255 any log
    deny ip host 255.255.255.255 any log
    permit {protocol} {source_ip}
    deny any any log
    interface <external_interface>
    access-group <access-list> in
    interface {external_interface}
    ip access-group {name | number} in) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Examines incoming packets to determine whether the source address is in the
    Forwarding Information Base (FIB) and permits the packet only if the source is
    reachable through the interface on which the packet was received (sometimes referred
    to as strict mode).
    This command places the router in access-list configuration mode, where you must
    define the denied or permitted access conditions by using the deny and permit
    commands.
    This command places the router in access-list configuration mode, where you must
    define the denied or permitted access conditions by using the deny and permit
    commands.
    - Remédiation : interface {interface_name}
    ip verify unicast source reachable-via rx allow-default
    ip access-list extended {<span>name | number}
    deny ip
    deny ip 127.0.0.0 0.255.255.255 any log
    deny ip 10.0.0.0 0.255.255.255 any log
    deny ip 0.0.0.0 0.255.255.255 any log
    deny ip 172.16.0.0 0.15.255.255 any log
    deny ip 192.168.0.0 0.0.255.255 any log
    deny ip 192.0.2.0 0.0.0.255 any log
    deny ip 169.254.0.0 0.0.255.255 any log
    deny ip 224.0.0.0 31.255.255.255 any log
    deny ip host 255.255.255.255 any log
    permit {protocol} {source_ip}
    deny any any log
    interface <external_interface>
    access-group <access-list> in
    interface {external_interface}
    ip access-group {name | number} in
    - Rational : Enabled uRPF helps mitigate IP spoofing by ensuring only packet source IP addresses
    only originate from expected interfaces. Configure unicast reverse-path forwarding
    (uRPF) on all external or high risk interfaces.
    Configuring access controls can help prevent spoofing attacks. To reduce the
    effectiveness of IP spoofing, configure access control to deny any traffic from the
    external network that has a source address that should reside on the internal network.
    Include local host address or any reserved private addresses (RFC 1918).
    Ensure the permit rule(s) above the final deny rule only allow traffic according to your
    organization's least privilege policy.
    Configuring access controls can help prevent spoofing attacks. To reduce the
    effectiveness of IP spoofing, configure access control to deny any traffic from the
    external network that has a source address that should reside on the internal network.
    Include local host address or any reserved private addresses (RFC 1918).
    Ensure the permit rule(s) above the final deny rule only allow traffic according to your
    organization's least privilege policy.
    - Impact : Organizations should plan and implement enterprise security policies that protect the
    confidentiality, integrity, and availability of network devices. The 'unicast Reverse-Path
    Forwarding' (uRPF) feature dynamically uses the router table to either accept or drop
    packets when arriving on an interface.
    Organizations should plan and implement enterprise security policies that explicitly
    separate internal from external networks. Adding 'ip access-list' explicitly permitting and
    denying internal and external networks enforces these policies.
    Organizations should plan and implement enterprise security policies explicitly
    permitting and denying access based upon access lists. Using the 'ip access-group'
    command enforces these policies by explicitly identifying groups permitted access.
    - Audit : sh ip int {interface} | incl verify source
    sh ip access-list {name | number}
    sh run | sec interface {external_interface}
  
  
    ###3.3.1.1 - Set 'key chain'
    - Commande : ``key chain {key-chain_name}``
    - Niveau : Level 2
        La ligne : (3.3.1.1:key chain {key-chain_name}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Define an authentication key chain to enable authentication for routing protocols. A key
    chain must have at least one key and can have up to 2,147,483,647 keys.
    NOTE: Only DRP Agent, EIGRP, and RIPv2 use key chains.
    - Remédiation : key chain {key-chain_name}
    - Rational : Routing protocols such as DRP Agent, EIGRP, and RIPv2 use key chains for
    authentication.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'key chains' for routing
    protocols enforces these policies.
    - Audit : sh run | sec key chain
  
  
    ###3.3.1.2 - Set 'key'
    - Commande : ``key {key-number}``
    - Niveau : Level 2
  
    Présente dans la config ✅
  
  
  
    - Description : Configure an authentication key on a key chain.
    - Remédiation : key {key-number}
    - Rational : This is part of the routing authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'key numbers' for key
    chains for routing protocols enforces these policies.
    - Audit : sh run | sec key chain
  
  
    ###3.3.1.3 - Set 'key-string'
    - Commande : ``key-string <key-string>``
    - Niveau : Level 2
        La ligne : (3.3.1.3:key-string <key-string>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the authentication string for a key.
    - Remédiation : key-string <key-string>
    - Rational : This is part of the routing authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'key strings' for key chains
    for routing protocols enforces these policies.
    - Audit : sh run | sec key chain
  
  
    ###3.3.1.4 - Set 'address-family ipv4 autonomous-system'
    - Commande : ``router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-``
    - Niveau : Level 2
        La ligne : (3.3.1.4:router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the EIGRP address family.
    - Remédiation : router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    - Rational : Rationale: EIGRP is a true multi-protocol routing protocol and the 'address-family'
    feature enables restriction of exchanges with specific neighbors
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'address-family' for EIGRP
    enforces these policies by restricting the exchanges between predefined network
    devices.
    - Audit : sh run | sec router eigrp
  
  
    ###3.3.1.5 - Set 'af-interface default'
    - Commande : ``router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface default``
    - Niveau : Level 2
        La ligne : (3.3.1.5:router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface default) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Defines user defaults to apply to EIGRP interfaces that belong to an address-family.
    - Remédiation : router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface default
    - Rational : Part of the EIGRP address-family setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'af-interface default' for
    EIGRP interfaces enforces these policies by restricting the exchanges between
    predefined network devices.
    - Audit : sh run | sec router eigrp
  
  
    ###3.3.1.6 - Set 'authentication key-chain'
    - Commande : ``router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication key-chain {eigrp_key-``
    - Niveau : Level 2
        La ligne : (3.3.1.6:router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication key-chain {eigrp_key-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the EIGRP address family key chain.
    - Remédiation : router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication key-chain {eigrp_key-
    - Rational : This is part of the EIGRP authentication configuration
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using the address-family 'key
    chain' for EIGRP enforces these policies by restricting the exchanges between
    predefined network devices.
    - Audit : sh run | sec router eigrp
  
  
    ###3.3.1.7 - Set 'authentication mode md5'
    - Commande : ``router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication mode md5``
    - Niveau : Level 1
        La ligne : (3.3.1.7:router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication mode md5) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure authentication to prevent unapproved sources from introducing unauthorized
    or false service messages.
    - Remédiation : router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication mode md5
    - Rational : This is part of the EIGRP authentication configuration
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using the 'authentication mode'
    for EIGRP address-family or service-family packets enforces these policies by
    restricting the type of authentication between network devices.
    - Audit : sh run | sec router eigrp
  
  
    ###3.3.1.8 - Set 'ip authentication key-chain eigrp'
    - Commande : ``interface {interface_name}
    ip authentication key-chain eigrp {eigrp_as-``
    - Niveau : Level 2
        La ligne : (3.3.1.8:interface {interface_name}
    ip authentication key-chain eigrp {eigrp_as-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Specify the type of authentication used in Enhanced Interior Gateway Routing Protocol
    (EIGRP) packets per interface.
    - Remédiation : interface {interface_name}
    ip authentication key-chain eigrp {eigrp_as-
    - Rational : Configuring EIGRP authentication key-chain number and name to restrict packet
    exchanges between network devices.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the interface with 'ip
    authentication key chain' for EIGRP by name and number enforces these policies by
    restricting the exchanges between network devices.
    - Audit : sh ip eigrp int
    sh run int {interface_name} | incl key-chain
  
  
    ###3.3.1.9 - Set 'ip authentication mode eigrp'
    - Commande : ``interface {interface_name}
    ip authentication mode eigrp {<span>eigrp_as-
    router ospf <ospf_process-id>
    area <ospf_area-id> authentication message-``
    - Niveau : Level 2
        La ligne : (3.3.1.9:interface {interface_name}
    ip authentication mode eigrp {<span>eigrp_as-
    router ospf <ospf_process-id>
    area <ospf_area-id> authentication message-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure authentication to prevent unapproved sources from introducing unauthorized
    or false routing messages.
    Enable MD5 authentication for OSPF.
    - Remédiation : interface {interface_name}
    ip authentication mode eigrp {<span>eigrp_as-
    router ospf <ospf_process-id>
    area <ospf_area-id> authentication message-
    - Rational : This is part of the EIGRP authentication configuration
    This is part of the OSPF authentication setup.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the interface with 'ip
    authentication mode' for EIGRP by number and mode enforces these policies by
    restricting the exchanges between network devices.
    Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the area
    'authentication message-digest' for OSPF enforces these policies by restricting
    exchanges between network devices.
    - Audit : sh ip eigrp int
    sh run int {interface_name} | incl authentication mode
    sh run | sec router ospf
  
  
    ###3.3.2.2 - Set 'ip ospf message-digest-key md5'
    - Commande : ``interface {interface_name}
    ip ospf message-digest-key {ospf_md5_key-id} md5``
    - Niveau : Level 2
        La ligne : (3.3.2.2:interface {interface_name}
    ip ospf message-digest-key {ospf_md5_key-id} md5) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable Open Shortest Path First (OSPF) Message Digest 5 (MD5) authentication.
    - Remédiation : interface {interface_name}
    ip ospf message-digest-key {ospf_md5_key-id} md5
    - Rational : This is part of the OSPF authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the proper
    interface(s) for 'ip ospf message-digest-key md5' enforces these policies by restricting
    exchanges between network devices.
    - Audit : sh run int {interface}
  
  
    ###3.3.3.1 - Set 'key chain'
    - Commande : ``key chain {rip_key-chain_name}``
    - Niveau : Level 2
        La ligne : (3.3.3.1:key chain {rip_key-chain_name}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Define an authentication key chain to enable authentication for RIPv2 routing protocols.
    - Remédiation : key chain {rip_key-chain_name}
    - Rational : This is part of the routing authentication process.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the proper
    authentication 'key-chain (name)' for RIPv2 protocols enforces these policies by
    restricting acceptable authentication between network devices.
    - Audit : sh run | sec key chain
  
  
    ###3.3.3.2 - Set 'key'
    - Commande : ``key {key-number}``
    - Niveau : Level 2
  
    Présente dans la config ✅
  
  
  
    - Description : Configure an authentication key on a key chain.
    - Remédiation : key {key-number}
    - Rational : This is part of the routing authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the proper
    authentication 'key' for RIPv2 protocols enforces these policies by restricting acceptable
    authentication between network devices.
    - Audit : sh run | sec key chain
  
  
    ###3.3.3.3 - Set 'key-string'
    - Commande : ``key-string <key-string>``
    - Niveau : Level 2
        La ligne : (3.3.3.3:key-string <key-string>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the authentication string for a key.
    - Remédiation : key-string <key-string>
    - Rational : This is part of the routing authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'key-string' for key chains
    for routing protocols enforces these policies.
    - Audit : sh run | sec key chain
  
  
    ###3.3.3.4 - Set 'ip rip authentication key-chain'
    - Commande : ``interface {interface_name}
    ip rip authentication key-chain {rip_key-``
    - Niveau : Level 2
        La ligne : (3.3.3.4:interface {interface_name}
    ip rip authentication key-chain {rip_key-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable authentication for Routing Information Protocol (RIP) Version 2 packets and to
    specify the set of keys that can be used on an interface.
    - Remédiation : interface {interface_name}
    ip rip authentication key-chain {rip_key-
    - Rational : This is part of the RIPv2 authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the interface with 'ip
    rip authentication key-chain' by name enforces these policies by restricting the
    exchanges between network devices.
    - Audit : sh run int {interface_name}
  
  
    ###3.3.3.5 - Set 'ip rip authentication mode' to 'md5'
    - Commande : ``interface <interface_name>
    ip rip authentication mode md5``
    - Niveau : Level 2
        La ligne : (3.3.3.5:interface <interface_name>
    ip rip authentication mode md5) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the Interface with the RIPv2 key chain.
    - Remédiation : interface <interface_name>
    ip rip authentication mode md5
    - Rational : This is part of the RIPv2 authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using the 'ip rip authentication
    mode md5' enforces these policies by restricting the type of authentication between
    network devices.
    - Audit : sh run int <interface>
  
  
    ###3.3.4.1 - Set 'neighbor password'
    - Commande : ``router bgp <bgp_as-number>
    neighbor <bgp_neighbor-ip | peer-group-``
    - Niveau : Level 2
        La ligne : (3.3.4.1:router bgp <bgp_as-number>
    neighbor <bgp_neighbor-ip | peer-group-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable message digest5 (MD5) authentication on a TCP connection between two BGP
    peers
    - Remédiation : router bgp <bgp_as-number>
    neighbor <bgp_neighbor-ip | peer-group-
    - Rational : Enforcing routing authentication reduces the likelihood of routing poisoning and
    unauthorized routers from joining BGP routing.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using the 'neighbor password' for
    BGP enforces these policies by restricting the type of authentication between network
    devices.
    - Audit : sh run | sec router bgp
  
  
  
    Résumé:
  
    ✅ 12 règles présentes sur 78
    ❌ 66 règles absentes sur 78
    Il y'a 9 règles de niveau 1
    Il y'a 3 règles de niveau 2
2025-06-13 01:36:44,541 p=17028 u=user n=ansible | TASK [cisco : Correction de toute la configuration] *****************************
2025-06-13 01:36:44,562 p=17028 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:36:44,565 p=17028 u=user n=ansible | TASK [cisco : cherry-pick fzf] **************************************************
2025-06-13 01:36:44,588 p=17028 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:36:44,590 p=17028 u=user n=ansible | TASK [Appareils Pfsense] ********************************************************
2025-06-13 01:36:44,612 p=17028 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:36:44,617 p=17028 u=user n=ansible | PLAY RECAP **********************************************************************
2025-06-13 01:36:44,617 p=17028 u=user n=ansible | 192.168.122.237            : ok=11   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2025-06-13 01:36:44,717 p=17034 u=user n=ansible | shutdown complete
2025-06-13 01:40:43,773 p=17240 u=user n=ansible | Encryption successful
2025-06-13 01:45:17,293 p=17307 u=user n=ansible | Decryption successful
2025-06-13 01:47:59,795 p=17390 u=user n=ansible | Encryption successful
2025-06-13 01:48:16,988 p=17397 u=user n=ansible | PLAY [Détection de la technologie] **********************************************
2025-06-13 01:48:16,995 p=17397 u=user n=ansible | TASK [Affichage de la technologie] **********************************************
2025-06-13 01:48:17,363 p=17399 u=user n=ansible | network_os is set to cisco.ios.ios
2025-06-13 01:48:17,367 p=17397 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : cisco.ios.ios'
2025-06-13 01:48:17,369 p=17397 u=user n=ansible | TASK [trouvé cisco] *************************************************************
2025-06-13 01:48:17,701 p=17397 u=user n=ansible | ok: [192.168.122.237] => 
  msg: 'L''appareil est du type : Cisco'
2025-06-13 01:48:17,703 p=17397 u=user n=ansible | TASK [trouvé pfsense] ***********************************************************
2025-06-13 01:48:17,727 p=17397 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:48:17,730 p=17397 u=user n=ansible | TASK [Appareils Cisco] **********************************************************
2025-06-13 01:48:17,761 p=17397 u=user n=ansible | TASK [cisco : options taches utilisateur] ***************************************
2025-06-13 01:48:18,092 p=17412 u=user n=ansible | [cisco : options taches utilisateur]
Voici les différentes options :
 1. Génération du rapport de conformité 
 2. Correction automatique de la configuration
 3. Cherry-pick sur les corrections
 4. Quitter le script
 Veuillez entrer le numéro de l'option choisie (1, 2, 3 ou 4):
2025-06-13 01:48:19,361 p=17397 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:48:19,363 p=17397 u=user n=ansible | TASK [cisco : récupération de la configuration machine] *************************
2025-06-13 01:48:19,392 p=17397 u=user n=ansible | included: /home/user/TFE_automation_compliance_CIS/roles/cisco/tasks/rapport.yml for 192.168.122.237
2025-06-13 01:48:19,401 p=17397 u=user n=ansible | TASK [cisco : récupération de la configuration sur la machine] ******************
2025-06-13 01:48:22,251 p=17397 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:48:22,254 p=17397 u=user n=ansible | TASK [cisco : Sauvegarde de la config] ******************************************
2025-06-13 01:48:23,072 p=17397 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:48:23,077 p=17397 u=user n=ansible | TASK [cisco : declaration des variables] ****************************************
2025-06-13 01:48:23,578 p=17397 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:48:23,580 p=17397 u=user n=ansible | TASK [cisco : verbose ?] ********************************************************
2025-06-13 01:48:23,897 p=17489 u=user n=ansible | [cisco : verbose ?]
Voulez-vous afficher la version vebose ? (y/n):
2025-06-13 01:48:25,969 p=17397 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:48:25,972 p=17397 u=user n=ansible | TASK [cisco : rapport no verbose] ***********************************************
2025-06-13 01:48:25,992 p=17397 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:48:25,995 p=17397 u=user n=ansible | TASK [cisco : rapport verbose] **************************************************
2025-06-13 01:48:26,562 p=17397 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:48:26,565 p=17397 u=user n=ansible | TASK [cisco : commandes manquantes only] ****************************************
2025-06-13 01:48:27,219 p=17397 u=user n=ansible | ok: [192.168.122.237]
2025-06-13 01:48:27,221 p=17397 u=user n=ansible | TASK [cisco : affichage no verbose] *********************************************
2025-06-13 01:48:27,244 p=17397 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:48:27,246 p=17397 u=user n=ansible | TASK [cisco : affichage verbose] ************************************************
2025-06-13 01:48:27,690 p=17397 u=user n=ansible | ok: [192.168.122.237] => 
  lookup('file', (ansible_config_file | dirname) + '/rapport/' + inventory_hostname + '_rapport_verbose.txt'): |-
    Rapport de conformité CIS pour l'appareil Cisco : 192.168.122.237
  
  
  
    ###1.1.1 - Enable 'aaa new-model'
    - Commande : ``aaa new-model``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : This command enables the AAA access control system.
    - Remédiation : aaa new-model
    - Rational : Authentication, authorization and accounting (AAA) services provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices.
    - Impact : Implementing Cisco AAA is significantly disruptive as former access methods are
    immediately disabled. Therefore, before implementing Cisco AAA, the organization
    should carefully review and plan their authentication criteria (logins & passwords,
    challenges & responses, and token technologies), authorization methods, and
    accounting requirements.
    - Audit : show running-config | inc aaa new-model
  
  
    ###1.1.2 - Enable 'aaa authentication login'
    - Commande : ``aaa authentication login {default | aaa_list_name} [passwd-``
    - Niveau : Level 1
        La ligne : (1.1.2:aaa authentication login {default | aaa_list_name} [passwd-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Sets authentication, authorization and accounting (AAA) authentication at login.
    - Remédiation : aaa authentication login {default | aaa_list_name} [passwd-
    - Rational : Using AAA authentication for interactive management access to the device provides
    consistent, centralized control of your network. The default under AAA (local or network)
    is to require users to log in using a valid user name and password. This rule applies for
    both local and network AAA. Fallback mode should also be enabled to allow emergency
    access to the router or switch in the event that the AAA server was unreachable, by
    utilizing the LOCAL keyword after the AAA server-tag.
    - Impact : Implementing Cisco AAA is significantly disruptive as former access methods are
    immediately disabled. Therefore, before implementing Cisco AAA, the organization
    should carefully review and plan their authentication methods such as logins and
    passwords, challenges and responses, and which token technologies will be used.
    - Audit : show running-config | incl aaa authentication login
  
  
    ###1.1.3 - Enable 'aaa authentication enable default'
    - Commande : ``aaa authentication enable default {method1} enable``
    - Niveau : Level 1
        La ligne : (1.1.3:aaa authentication enable default {method1} enable) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Authenticates users who access privileged EXEC mode when they use the enable
    command.
    - Remédiation : aaa authentication enable default {method1} enable
    - Rational : Using AAA authentication for interactive management access to the device provides
    consistent, centralized control of your network. The default under AAA (local or network)
    is to require users to log in using a valid user name and password. This rule applies for
    both local and network AAA.
    - Impact : Enabling Cisco AAA 'authentication enable' mode is significantly disruptive as former
    access methods are immediately disabled. Therefore, before enabling 'aaa
    authentication enable default' mode, the organization should plan and implement
    authentication logins and passwords, challenges and responses, and token
    technologies.
    - Audit : show running-config | incl aaa authentication enable
  
  
    ###1.1.4 - Set 'login authentication for 'line vty'
    - Commande : ``line vty {line-number} [ending-line-number]
    login authentication {default | aaa_list_name}``
    - Niveau : Level 1
        La ligne : (1.1.4:line vty {line-number} [ending-line-number]
    login authentication {default | aaa_list_name}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Authenticates users who access the router or switch remotely through the VTY port.
    - Remédiation : line vty {line-number} [ending-line-number]
    login authentication {default | aaa_list_name}
    - Rational : Using AAA authentication for interactive management access to the device provides
    consistent, centralized control of your network. The default under AAA (local or network)
    is to require users to log in using a valid user name and password. This rule applies for
    both local and network AAA.
    - Impact : Enabling Cisco AAA 'login authentication for line VTY' is significantly disruptive as
    former access methods are immediately disabled. Therefore, before enabling Cisco
    AAA 'login authentication for line VTY', the organization should plan and implement
    authentication logins and passwords, challenges and responses, and token
    technologies.
    - Audit : show running-config | sec line | incl login authentication
  
  
    ###1.1.5 - Set 'login authentication for 'ip http'
    - Commande : ``(config)ip http secure-server
    (config)ip http authentication {default | _aaa\_list\_name_}
    aaa accounting commands 15 {default | list-name | guarantee-``
    - Niveau : Level 1
        La ligne : (1.1.5:(config)ip http secure-server
    (config)ip http authentication {default | _aaa\_list\_name_}
    aaa accounting commands 15 {default | list-name | guarantee-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : If account management functions are not automatically enforced, an attacker could gain
    privileged access to a vital element of the network security architecture
    Runs accounting for all commands at the specified privilege level.
    - Remédiation : (config)ip http secure-server
    (config)ip http authentication {default | _aaa\_list\_name_}
    aaa accounting commands 15 {default | list-name | guarantee-
    - Rational : Using AAA authentication for interactive management access to the device provides
    consistent, centralized control of your network. The default under AAA (local or network)
    is to require users to log in using a valid user name and password. This rule applies for
    both local and network AAA.
    Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    TACACS+.
    - Impact : Enabling Cisco AAA 'line login' is significantly disruptive as former access methods are
    immediately disabled. Therefore, before enabling Cisco AAA 'line login', the
    organization should plan and implement authentication logins and passwords,
    challenges and responses, and token technologies.
    Enabling 'aaa accounting' for privileged commands records and sends activity to the
    accounting servers and enables organizations to monitor and analyze privileged activity.
    - Audit : show running-config | inc ip http authentication
    show running-config | incl aaa accounting commands
  
  
    ###1.1.7 - Set 'aaa accounting connection'
    - Commande : ``aaa accounting connection {default | list-name | guarantee-``
    - Niveau : Level 2
        La ligne : (1.1.7:aaa accounting connection {default | list-name | guarantee-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Provides information about all outbound connections made from the network access
    server.
    - Remédiation : aaa accounting connection {default | list-name | guarantee-
    - Rational : Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    RADIUS and TACACS+.
    - Impact : Implementing aaa accounting connection creates accounting records about connections
    from the network access server. Organizations should regular monitor these connection
    records for exceptions, remediate issues, and report findings regularly.
    - Audit : show running-config | incl aaa accounting connection
  
  
    ###1.1.8 - Set 'aaa accounting exec'
    - Commande : ``aaa accounting exec {default | list-name | guarantee-first}``
    - Niveau : Level 2
        La ligne : (1.1.8:aaa accounting exec {default | list-name | guarantee-first}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Runs accounting for the EXEC shell session.
    - Remédiation : aaa accounting exec {default | list-name | guarantee-first}
    - Rational : Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    RADIUS and TACACS+.
    - Impact : Enabling aaa accounting exec creates accounting records for the EXEC terminal
    sessions on the network access server. These records include start and stop times,
    usernames, and date information. Organizations should regularly monitor these records
    for exceptions, remediate issues, and report findings.
    - Audit : show running-config | incl aaa accounting exec
  
  
    ###1.1.9 - Set 'aaa accounting network'
    - Commande : ``aaa accounting network {default | list-name | guarantee-``
    - Niveau : Level 2
        La ligne : (1.1.9:aaa accounting network {default | list-name | guarantee-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Runs accounting for all network-related service requests.
    - Remédiation : aaa accounting network {default | list-name | guarantee-
    - Rational : Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    RADIUS and TACACS+.
    - Impact : Implementing aaa accounting network creates accounting records for a method list
    including ARA, PPP, SLIP, and NCPs sessions. Organizations should regular monitor
    these records for exceptions, remediate issues, and report findings.
    - Audit : show running-config | incl aaa accounting network
  
  
    ###1.1.10 - Set 'aaa accounting system'
    - Commande : ``aaa accounting system {default | list-name | guarantee-``
    - Niveau : Level 2
        La ligne : (1.1.10:aaa accounting system {default | list-name | guarantee-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Performs accounting for all system-level events not associated with users, such as
    reloads.
    - Remédiation : aaa accounting system {default | list-name | guarantee-
    - Rational : Authentication, authorization and accounting (AAA) systems provide an authoritative
    source for managing and monitoring access for devices. Centralizing control improves
    consistency of access control, the services that may be accessed once authenticated
    and accountability by tracking services accessed. Additionally, centralizing access
    control simplifies and reduces administrative costs of account provisioning and de-
    provisioning, especially when managing a large number of devices. AAA Accounting
    provides a management and audit trail for user and administrative sessions through
    RADIUS and TACACS+.
    - Impact : Enabling aaa accounting system creates accounting records for all system-level events.
    Organizations should regular monitor these records for exceptions, remediate issues,
    and report findings regularly.
    - Audit : show running-config | incl aaa accounting system
  
  
    ###1.2.1 - Set 'privilege 1' for local users
    - Commande : ``username <LOCAL_USERNAME> privilege 1
    line vty <line-number> <ending-line-number>
    transport input ssh``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Sets the privilege level for the user.
    Selects the Secure Shell (SSH) protocol.
    - Remédiation : username <LOCAL_USERNAME> privilege 1
    line vty <line-number> <ending-line-number>
    transport input ssh
    - Rational : Default device configuration does not require strong user authentication potentially
    enabling unfettered access to an attacker that is able to reach the device. Creating a
    local account with privilege level 1 permissions only allows the local user to access the
    device with EXEC-level permissions and will be unable to modify the device without
    using the enable password. In addition, require the use of an encrypted password as
    well (see Section 1.1.4.4 - Require Encrypted User Passwords).
    Configuring VTY access control restricts remote access to only those authorized to
    manage the device and prevents unauthorized users from accessing the system.
    - Impact : Organizations should create policies requiring all local accounts with 'privilege level 1'
    with encrypted passwords to reduce the risk of unauthorized access. Default
    configuration settings do not provide strong user authentication to the device.
    To reduce risk of unauthorized access, organizations should require all VTY
    management line protocols to be limited to ssh.
    - Audit : show running-config | incl privilege
    show running-config | sec vty
  
  
    ###1.2.3 - Set 'no exec' for 'line aux 0'
    - Commande : ``line aux 0
    no exec``
    - Niveau : Level 1
        La ligne : (1.2.3:line aux 0
    no exec) n'est pas présente dans la config de l'appareil ❌
  
    - Description : The 'no exec' command restricts a line to outgoing connections only.
    - Remédiation : line aux 0
    no exec
    - Rational : Unused ports should be disabled, if not required, since they provide a potential access
    path for attackers. Some devices include both an auxiliary and console port that can be
    used to locally connect to and configure the device. The console port is normally the
    primary port used to configure the device; even when remote, backup administration is
    required via console server or Keyboard, Video, Mouse (KVM) hardware. The auxiliary
    port is primarily used for dial-up administration via an external modem; instead, use
    other available methods.
    - Impact : Organizations can reduce the risk of unauthorized access by disabling the 'aux' port
    with the 'no exec' command. Conversely, not restricting access through the 'aux' port
    increases the risk of remote unauthorized access.
    - Audit : show running-config | sec aux
    show line aux 0 | incl exec
  
  
    ###1.2.4 - Create 'access-list' for use with 'line vty'
    - Commande : ``access-list <vty_acl_number> permit tcp
    access-list <vty_acl_number> permit tcp host <vty_acl_host>
    deny ip any any log``
    - Niveau : Level 1
        La ligne : (1.2.4:access-list <vty_acl_number> permit tcp
    access-list <vty_acl_number> permit tcp host <vty_acl_host>
    deny ip any any log) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Access lists control the transmission of packets on an interface, control Virtual Terminal
    Line (VTY) access, and restrict the contents of routing updates. The Cisco IOS software
    stops checking the extended access list after a match occurs.
    - Remédiation : access-list <vty_acl_number> permit tcp
    access-list <vty_acl_number> permit tcp host <vty_acl_host>
    deny ip any any log
    - Rational : VTY ACLs control what addresses may attempt to log in to the router. Configuring VTY
    lines to use an ACL, restricts the sources where a user can manage the device. You
    should limit the specific host(s) and or network(s) authorized to connect to and configure
    the device, via an approved protocol, to those individuals or systems authorized to
    administer the device. For example, you could limit access to specific hosts, so that only
    network managers can configure the devices only by using specific network
    management workstations. Make sure you configure all VTY lines to use the same ACL.
    - Impact : Organizations can reduce the risk of unauthorized access by implementing access-lists
    for all VTY lines. Conversely, using VTY lines without access-lists increases the risk of
    unauthorized access.
    - Audit : sh ip access-list <vty_acl_number>
  
  
    ###1.2.5 - Set 'access-class' for 'line vty'
    - Commande : ``line vty <line-number> <ending-line-number>
    access-class <vty_acl_number> in
    line aux 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line con 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line vty {line_number} [ending_line_number]
    exec-timeout <<span>timeout_in_minutes>``
    - Niveau : Level 1
        La ligne : (1.2.5:line vty <line-number> <ending-line-number>
    access-class <vty_acl_number> in
    line aux 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line con 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line vty {line_number} [ending_line_number]
    exec-timeout <<span>timeout_in_minutes>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : The 'access-class' setting restricts incoming and outgoing connections between a
    particular vty (into a Cisco device) and the networking devices associated with
    addresses in an access list.
    If no input is detected during the interval, the EXEC facility resumes the current
    connection. If no connections exist, the EXEC facility returns the terminal to the idle
    state and disconnects the incoming session.
    If no input is detected during the interval, the EXEC facility resumes the current
    connection. If no connections exist, the EXEC facility returns the terminal to the idle
    state and disconnects the incoming session.
    If no input is detected during the interval, the EXEC facility resumes the current
    connection. If no connections exist, the EXEC facility returns the terminal to the idle
    state and disconnects the incoming session.
    - Remédiation : line vty <line-number> <ending-line-number>
    access-class <vty_acl_number> in
    line aux 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line con 0
    exec-timeout <timeout_in_minutes> <timeout_in_seconds>
    line vty {line_number} [ending_line_number]
    exec-timeout <<span>timeout_in_minutes>
    - Rational : Restricting the type of network devices, associated with the addresses on the access-
    list, further restricts remote access to those devices authorized to manage the device
    and reduces the risk of unauthorized access.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    - Impact : Applying 'access'class' to line VTY further restricts remote access to only those devices
    authorized to manage the device and reduces the risk of unauthorized access.
    Conversely, using VTY lines with 'access class' restrictions increases the risks of
    unauthorized access.
    Organizations should prevent unauthorized use of unattended or abandoned sessions
    by an automated control. Enabling 'exec-timeout' with an appropriate length of minutes
    or seconds prevents unauthorized access of abandoned sessions.
    Organizations should prevent unauthorized use of unattended or abandoned sessions
    by an automated control. Enabling 'exec-timeout' with an appropriate length reduces the
    risk of unauthorized access of abandoned sessions.
    Organizations should prevent unauthorized use of unattended or abandoned sessions
    by an automated control. Enabling 'exec-timeout' with an appropriate length of minutes
    or seconds prevents unauthorized access of abandoned sessions.
    - Audit : sh run | sec vty <line-number> <ending-line-number>
    sh run | sec line aux 0
    sh run | sec line con 0
    sh line vty <tty_line_number> | begin Timeout
  
  
    ###1.2.9 - Set 'transport input none' for 'line aux 0'
    - Commande : ``line aux 0
    transport input none``
    - Niveau : Level 1
        La ligne : (1.2.9:line aux 0
    transport input none) n'est pas présente dans la config de l'appareil ❌
  
    - Description : When you want to allow only an outgoing connection on a line, use the no exec
    command.
    - Remédiation : line aux 0
    transport input none
    - Rational : Unused ports should be disabled, if not required, since they provide a potential access
    path for attackers. Some devices include both an auxiliary and console port that can be
    used to locally connect to and configure the device. The console port is normally the
    primary port used to configure the device; even when remote, backup administration is
    required via console server or Keyboard, Video, Mouse (KVM) hardware. The auxiliary
    port is primarily used for dial-up administration via an external modem; instead, use
    other available methods.
    - Impact : Organizations should prevent all unauthorized access of auxiliary ports by disabling all
    protocols using the 'transport input none' command.
    - Audit : sh line aux 0 | incl input transports
  
  
    ###1.2.10 - Set 'http Secure-server' limit
    - Commande : ``ip http max-connections 2``
    - Niveau : Level 1
        La ligne : (1.2.10:ip http max-connections 2) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Device management includes the ability to control the number of administrators and
    management sessions that manage a device. Limiting the number of allowed
    administrators and sessions per administrator based on account type, role, or access
    type is helpful in limiting risks related to denial-of-service (DoS) attacks.
    If no input is detected during the interval, the EXEC facility resumes the current
    connection. If no connections exist, the EXEC facility returns the terminal to the idle
    state and disconnects the incoming session.
    - Remédiation : ip http max-connections 2
    - Rational : This requirement addresses concurrent sessions for administrative accounts and does
    not address concurrent sessions by a single administrator via multiple administrative
    accounts. The maximum number of concurrent sessions should be defined based upon
    mission needs and the operational environment for each system. At a minimum, limits
    must be set for SSH, HTTPS, account of last resort, and root account sessions.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    This prevents unauthorized users from misusing abandoned sessions. For example, if
    the network administrator leaves for the day and leaves a computer open with an
    enabled login session accessible. There is a trade-off here between security (shorter
    timeouts) and usability (longer timeouts). Review your local policies and operational
    needs to determine the best timeout value. In most cases, this should be no more than
    10 minutes.
    - Impact :
    - Audit : show run | inc ip http secure-server
  
  
    ###1.3.1 - Set the 'banner-text' for 'banner exec'
    - Commande : ``banner exec c``
    - Niveau : Level 1
        La ligne : (1.3.1:banner exec c) n'est pas présente dans la config de l'appareil ❌
  
    - Description : This command specifies a message to be displayed when an EXEC process is created
    (a line is activated, or an incoming connection is made to a vty). Follow this command
    with one or more blank spaces and a delimiting character of your choice. Then enter
    one or more lines of text, terminating the message with the second occurrence of the
    delimiting character.
    When a user connects to a router, the message-of-the-day (MOTD) banner appears
    first, followed by the login banner and prompts. After the user logs in to the router, the
    EXEC banner or incoming banner will be displayed, depending on the type of
    connection. For a reverse Telnet login, the incoming banner will be displayed. For all
    other connections, the router will display the EXEC banner.
    - Remédiation : banner exec c
    - Rational : "Network banners are electronic messages that provide notice of legal rights to users of
    computer networks. From a legal standpoint, banners have four primary functions.
    • First, banners may be used to generate consent to real-time monitoring under
    Title III.
    • Second, banners may be used to generate consent to the retrieval of stored files
    and records pursuant to ECPA.
    • Third, in the case of government networks, banners may eliminate any Fourth
    Amendment "reasonable expectation of privacy" that government employees or
    other users might otherwise retain in their use of the government's network under
    O'Connor v. Ortega, 480 U.S. 709 (1987).
    • Fourth, in the case of a non-government network, banners may establish a
    system administrator's "common authority" to consent to a law enforcement
    search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
    Department of Justice APPENDIX A: Sample Network Banner Language)
    - Impact : Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
    their networks by using a 'banner-text' for the banner exec command.
    - Audit : sh running-config | beg banner exec
  
  
    ###1.3.2 - Set the 'banner-text' for 'banner login'
    - Commande : ``banner login c``
    - Niveau : Level 1
        La ligne : (1.3.2:banner login c) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Follow the banner login command with one or more blank spaces and a delimiting
    character of your choice. Then enter one or more lines of text, terminating the message
    with the second occurrence of the delimiting character.
    When a user connects to the router, the message-of-the-day (MOTD) banner (if
    configured) appears first, followed by the login banner and prompts. After the user
    successfully logs in to the router, the EXEC banner or incoming banner will be
    displayed, depending on the type of connection. For a reverse Telnet login, the
    incoming banner will be displayed. For all other connections, the router will display the
    EXEC banner.
    - Remédiation : banner login c
    - Rational : "Network banners are electronic messages that provide notice of legal rights to users of
    computer networks. From a legal standpoint, banners have four primary functions.
    • First, banners may be used to generate consent to real-time monitoring under
    Title III.
    • Second, banners may be used to generate consent to the retrieval of stored files
    and records pursuant to ECPA.
    • Third, in the case of government networks, banners may eliminate any Fourth
    Amendment "reasonable expectation of privacy" that government employees or
    other users might otherwise retain in their use of the government's network under
    O'Connor v. Ortega, 480 U.S. 709 (1987).
    • Fourth, in the case of a non-government network, banners may establish a
    system administrator's "common authority" to consent to a law enforcement
    search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
    Department of Justice APPENDIX A: Sample Network Banner Language)
    - Impact : Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
    their networks by using a 'banner-text' for the banner login command.
    - Audit : show running-config | beg banner login
  
  
    ###1.3.3 - Set the 'banner-text' for 'banner motd'
    - Commande : ``banner motd c``
    - Niveau : Level 1
        La ligne : (1.3.3:banner motd c) n'est pas présente dans la config de l'appareil ❌
  
    - Description : This MOTD banner is displayed to all terminals connected and is useful for sending
    messages that affect all users (such as impending system shutdowns). Use the no
    exec-banner or no motd-banner command to disable the MOTD banner on a line. The
    no exec-banner command also disables the EXEC banner on the line.
    When a user connects to the router, the MOTD banner appears before the login prompt.
    After the user logs in to the router, the EXEC banner or incoming banner will be
    displayed, depending on the type of connection. For a reverse Telnet login, the
    incoming banner will be displayed. For all other connections, the router will display the
    EXEC banner.
    - Remédiation : banner motd c
    - Rational : "Network banners are electronic messages that provide notice of legal rights to users of
    computer networks. From a legal standpoint, banners have four primary functions.
    • First, banners may be used to generate consent to real-time monitoring under
    Title III.
    • Second, banners may be used to generate consent to the retrieval of stored files
    and records pursuant to ECPA.
    • Third, in the case of government networks, banners may eliminate any Fourth
    Amendment "reasonable expectation of privacy" that government employees or
    other users might otherwise retain in their use of the government's network under
    O'Connor v. Ortega, 480 U.S. 709 (1987).
    • Fourth, in the case of a non-government network, banners may establish a
    system administrator's "common authority" to consent to a law enforcement
    search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
    Department of Justice APPENDIX A: Sample Network Banner Language)
    - Impact : Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
    their networks by using a 'banner-text' for the banner motd command.
    - Audit : sh running-config | beg banner motd
  
  
    ###1.3.4 - Set the 'banner-text' for 'webauth banner'
    - Commande : ``ip admission auth-proxy-banner http {banner-text | filepath}``
    - Niveau : Level 1
        La ligne : (1.3.4:ip admission auth-proxy-banner http {banner-text | filepath}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : This banner is displayed to all terminals connected and is useful for sending messages
    that affect all users (such as impending system shutdowns). Use the no exec-banner or
    no motd-banner command to disable the banner on a line. The no exec-banner
    command also disables the EXEC banner on the line.
    When a user connects to the router, the MOTD banner appears before the login prompt.
    After the user logs in to the router, the EXEC banner or incoming banner will be
    displayed, depending on the type of connection. For a reverse Telnet login, the
    incoming banner will be displayed. For all other connections, the router will display the
    EXEC banner.
    - Remédiation : ip admission auth-proxy-banner http {banner-text | filepath}
    - Rational : "Network banners are electronic messages that provide notice of legal rights to users of
    computer networks. From a legal standpoint, banners have four primary functions.
    • First, banners may be used to generate consent to real-time monitoring under
    Title III.
    • Second, banners may be used to generate consent to the retrieval of stored files
    and records pursuant to ECPA.
    • Third, in the case of government networks, banners may eliminate any Fourth
    Amendment "reasonable expectation of privacy" that government employees or
    other users might otherwise retain in their use of the government's network under
    O'Connor v. Ortega, 480 U.S. 709 (1987).
    • Fourth, in the case of a non-government network, banners may establish a
    system administrator's "common authority" to consent to a law enforcement
    search pursuant to United States v. Matlock, 415 U.S. 164 (1974)." (US
    Department of Justice APPENDIX A: Sample Network Banner Language)
    - Impact : Organizations provide appropriate legal notice(s) and warning(s) to persons accessing
    their networks by using a 'banner-text' for the banner motd command.
    - Audit : show ip admission auth-proxy-banner http
  
  
    ###1.4.1 - Set 'password' for 'enable secret'
    - Commande : ``enable secret 9 {ENABLE_SECRET_PASSWORD}``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Enable secret password type 5 and enable secret password type 5 must be migrated to
    the stronger password type 8 or 9. IF a device is upgraded from IOS XE 16.9 or later
    the type 5 is auto converted to type 9.
    Use the enable secret command to provide an additional layer of security over the
    enable password. The enable secret command provides better security by storing the
    enable secret password using a nonreversible cryptographic function. The added layer
    of security encryption provides is useful in environments where the password crosses
    the network or is stored on a TFTP server.
    - Remédiation : enable secret 9 {ENABLE_SECRET_PASSWORD}
    - Rational : Requiring the enable secret setting protects privileged EXEC mode. By default, a strong
    password is not required, a user can just press the Enter key at the Password prompt to
    start privileged mode. The enable password command causes the device to enforce use
    of a password to access privileged mode. Enable secrets use a one-way cryptographic
    hash (MD5). This is preferred to Level 7 enable passwords that use a weak, well-
    known, and easily reversible encryption algorithm.
    - Impact : Default device configuration does not require strong user authentication potentially
    enabling unfettered access to an attacker that is able to reach the device. Creating a
    local account with an encrypted password enforces login authentication and provides a
    fallback authentication mechanism for configuration in a named method list in a situation
    where centralized authentication, authorization, and accounting services are
    unavailable. The following is the type of encryption the device will allow as of 15.3: Type
    0 this mean the password will not be encrypted when router store it in Run/Start Files
    command: enable password cisco123
    Type 4 this mean the password will be encrypted when router store it in Run/Start Files
    using SHA-256 which apps like Cain can crack but will take long time command :
    enable secret 4 Rv4kArhts7yA2xd8BD2YTVbts (notice above is not the password string
    it self but the hash of the password)
    this type is deprecated starting from IOS 15.3(3)
    Type 5 this mean the password will be encrypted when router store it in Run/Start Files
    using MD5 which apps like Cain can crack but will take long time command: enable
    secret 5 00271A5307542A02D22842 (notice above is not the password string it self but
    the hash of the password) or enable secret cisco123 (notice above is the password
    string it self)
    Page 68
    Type 7 this mean the password will be encrypted when router store it in Run/Start Files
    using Vigenere cipher which any website with type7 reverser can crack it in less than
    one second command : ena password cisco123 service password-encryption
    Type 8
    this mean the password will be encrypted when router store it in Run/Start Files using
    PBKDF2-SHA-256
    starting from IOS 15.3(3).
    Password-Based Key Derivation Function 2 (PBKDF2) with Secure Hash Algorithm, 26-
    bits (SHA-256) as the hashing algorithm
    Example : R1(config)#enable algorithm-type sha256 secret cisco
    R1(config)#do sh run | i enable
    enable secret 8
    $8$mTj4RZG8N9ZDOk$elY/asfm8kD3iDmkBe3hD2r4xcA/0oWS5V3os.O91u.
    Example : R1(config)# username yasser algorithm-type sha256 secret cisco
    R1# show running-config | inc username
    username yasser secret 8
    $8$dsYGNam3K1SIJO$7nv/35M/qr6t.dVc7UY9zrJDWRVqncHub1PE9UlMQFs
    Type 9
    this means the password will be encrypted when router store it in Run/Start Files using
    scrypt as the hashing algorithm.
    starting from IOS 15.3(3)
    Example : R1(config)#ena algorithm-type scrypt secret cisco
    R1(config)#do sh run | i enable
    enable secret 9
    $9$WnArItcQHW/uuE$x5WTLbu7PbzGDuv0fSwGKS/KURsy5a3WCQckmJp0MbE
    Example : R1(config)# username demo9 algorithm-type scrypt secret cisco
    R1# show running-config | inc username
    username demo9 secret 9
    $9$nhEmQVczB7dqsO$X.HsgL6x1il0RxkOSSvyQYwucySCt7qFm4v7pqCxkKM
    Important Notes:
    1-If you configure type 8 or type 9 passwords and then downgrade to a release that
    does not support type 8 and type 9 passwords, you must configure the type 5
    passwords before downgrading. If not, you are locked out of the device and a password
    recovery is required.
    Page 69
    2-Starting from IOS 15.3(3)The 4 keyword was deprecated and support for type 8 and
    type 9 algorithms were added and The warning message for removal of support for the
    type 4 algorithm was added tect privileged EXEC mode through policies requiring the
    'enabling secret' setting, which enforces a one-way cryptographic hash (MD5).
    - Audit : sh run | incl enable secret
  
  
    ###1.4.2 - Enable 'service password-encryption'
    - Commande : ``service password-encryption``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : When password encryption is enabled, the encrypted form of the passwords is
    displayed when a more system:running-config command is entered.
    - Remédiation : service password-encryption
    - Rational : This requires passwords to be encrypted in the configuration file to prevent
    unauthorized users from learning the passwords just by reading the configuration. When
    not enabled, many of the device's passwords will be rendered in plain text in the
    configuration file. This service ensures passwords are rendered as encrypted strings
    preventing an attacker from easily determining the configured value.
    - Impact : Organizations implementing 'service password-encryption' reduce the risk of
    unauthorized users learning clear text passwords to Cisco IOS configuration files.
    However, the algorithm used is not designed to withstand serious analysis and should
    be treated like clear-text.
    - Audit : sh run | incl service password-encryption
  
  
    ###1.4.3 - Set 'username secret' for all local users
    - Commande : ``username {LOCAL_USERNAME} secret
    no snmp-server``
    - Niveau : Level 1
        La ligne : (1.4.3:username {LOCAL_USERNAME} secret
    no snmp-server) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Username secret password type 5 and enable secret password type 5 must be migrated
    to the stronger password type 8 or 9. IF a device is upgraded from IOS XE 16.9 or later
    the type 5 is auto converted to type 9.
    The username secret command provides an additional layer of security over the
    username password.
    If not in use, disable simple network management protocol (SNMP), read and write
    access.
    - Remédiation : username {LOCAL_USERNAME} secret
    no snmp-server
    - Rational : Default device configuration does not require strong user authentication potentially
    enabling unfettered access to an attacker that is able to reach the device. Creating a
    local account with an encrypted password enforces login authentication and provides a
    fallback authentication mechanism for configuration in a named method list in a situation
    where centralized authentication, authorization, and accounting services are
    unavailable. The following is the type of encryption the device will allow as of 15.3: Type
    0 this mean the password will not be encrypted when router store it in Run/Start Files
    command: enable password cisco123
    Type 4 this mean the password will be encrypted when router store it in Run/Start Files
    using SHA-256 which apps like Cain can crack but will take long time command :
    enable secret 4 Rv4kArhts7yA2xd8BD2YTVbts (notice above is not the password string
    it self but the hash of the password)
    this type is deprecated starting from IOS 15.3(3)
    Type 5 this mean the password will be encrypted when router store it in Run/Start Files
    using MD5 which apps like Cain can crack but will take long time command: enable
    secret 5 00271A5307542A02D22842 (notice above is not the password string it self but
    the hash of the password) or enable secret cisco123 (notice above is the password
    string it self)
    Type 7 this mean the password will be encrypted when router store it in Run/Start Files
    using Vigenere cipher which any website with type7 reverser can crack it in less than
    one second command : ena password cisco123 service password-encryption
    Type 8
    this mean the password will be encrypted when router store it in Run/Start Files using
    PBKDF2-SHA-256
    starting from IOS 15.3(3).
    Page 73
    Password-Based Key Derivation Function 2 (PBKDF2) with Secure Hash Algorithm, 26-
    bits (SHA-256) as the hashing algorithm
    Example :
    R1(config)#enable algorithm-type sha256 secret cisco
    R1(config)#do sh run | i enable
    enable secret 8
    $8$mTj4RZG8N9ZDOk$elY/asfm8kD3iDmkBe3hD2r4xcA/0oWS5V3os.O91u.
    Example :
    R1(config)# username yasser algorithm-type sha256 secret cisco
    R1# show running-config | inc username
    username yasser secret 8
    $8$dsYGNam3K1SIJO$7nv/35M/qr6t.dVc7UY9zrJDWRVqncHub1PE9UlMQFs
    Type 9
    this mean the password will be encrypted when router store it in Run/Start Files using
    scrypt as the hashing algorithm.
    starting from IOS 15.3(3)
    Example :
    R1(config)#ena algorithm-type scrypt secret cisco
    R1(config)#do sh run | i enable
    enable secret 9
    $9$WnArItcQHW/uuE$x5WTLbu7PbzGDuv0fSwGKS/KURsy5a3WCQckmJp0MbE
    Example :
    R1(config)# username demo9 algorithm-type scrypt secret cisco
    R1# show running-config | inc username
    username demo9 secret 9
    $9$nhEmQVczB7dqsO$X.HsgL6x1il0RxkOSSvyQYwucySCt7qFm4v7pqCxkKM
    Important Notes:
    1-If you configure type 8 or type 9 passwords and then downgrade to a release that
    does not support type 8 and type 9 passwords, you must configure the type 5
    passwords before downgrading. If not, you are locked out of the device and a password
    recovery is required.
    2-Starting from IOS 15.3(3)The 4 keyword was deprecated and support for type 8 and
    type 9 algorithms were added and The warning message for removal of support for the
    type 4 algorithm was added
    Page 74
    SNMP read access allows remote monitoring and management of the device.
    - Impact : Organizations implementing 'username secret' across their enterprise reduce the risk of
    unauthorized users gaining access to Cisco IOS devices by applying a MD5 hash and
    encrypting user passwords.
    Organizations not using SNMP should require all SNMP services to be disabled by
    running the 'no snmp-server' command.
    - Audit : show run | incl username
    show snmp community
  
  
    ###1.5.2 - Unset 'private' for 'snmp-server community'
    - Commande : ``no snmp-server community {private}``
    - Niveau : Level 1
        La ligne : (1.5.2:no snmp-server community {private}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : An SNMP community string permits read-only access to all objects.
    - Remédiation : no snmp-server community {private}
    - Rational : The default community string "private" is well known. Using easy to guess, well known
    community string poses a threat that an attacker can effortlessly gain unauthorized
    access to the device.
    - Impact : To reduce the risk of unauthorized access, Organizations should disable default, easy
    to guess, settings such as the 'private' setting for snmp-server community.
    - Audit : show snmp community
  
  
    ###1.5.3 - Unset 'public' for 'snmp-server community'
    - Commande : ``no snmp-server community {public}
    no snmp-server community {write_community_string}``
    - Niveau : Level 1
        La ligne : (1.5.3:no snmp-server community {public}
    no snmp-server community {write_community_string}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : An SNMP community string permits read-only access to all objects.
    Specifies read-write access. Authorized management stations can both retrieve and
    modify MIB objects.
    - Remédiation : no snmp-server community {public}
    no snmp-server community {write_community_string}
    - Rational : The default community string "public" is well known. Using easy to guess, well known
    community string poses a threat that an attacker can effortlessly gain unauthorized
    access to the device.
    Enabling SNMP read-write enables remote management of the device. Unless
    absolutely necessary, do not allow simple network management protocol (SNMP) write
    access.
    - Impact : To reduce the risk of unauthorized access, Organizations should disable default, easy
    to guess, settings such as the 'public' setting for snmp-server community.
    To reduce the risk of unauthorized access, Organizations should disable the SNMP
    'write' access for snmp-server community.
    - Audit : show snmp community
    show run | incl snmp-server community
  
  
    ###1.5.5 - Set the ACL for each 'snmp-server community'
    - Commande : ``snmp-server community <community_string> ro``
    - Niveau : Level 1
        La ligne : (1.5.5:snmp-server community <community_string> ro) n'est pas présente dans la config de l'appareil ❌
  
    - Description : This feature specifies a list of IP addresses that are allowed to use the community string
    to gain access to the SNMP agent.
    - Remédiation : snmp-server community <community_string> ro
    - Rational : If ACLs are not applied, then anyone with a valid SNMP community string can
    potentially monitor and manage the router. An ACL should be defined and applied for all
    SNMP access to limit access to a small number of authorized management stations
    segmented in a trusted management zone. If possible, use SNMPv3 which uses
    authentication, authorization, and data privatization (encryption).
    - Impact : To reduce the risk of unauthorized access, Organizations should enable access control
    lists for all snmp-server communities and restrict the access to appropriate trusted
    management zones. If possible, implement SNMPv3 to apply authentication,
    authorization, and data privatization (encryption) for additional benefits to the
    organization.
    - Audit : show run | incl snmp-server community
  
  
    ###1.5.6 - Create an 'access-list' for use with SNMP
    - Commande : ``access-list <snmp_acl_number> permit
    access-list deny any log``
    - Niveau : Level 1
        La ligne : (1.5.6:access-list <snmp_acl_number> permit
    access-list deny any log) n'est pas présente dans la config de l'appareil ❌
  
    - Description : You can use access lists to control the transmission of packets on an interface, control
    Simple Network Management Protocol (SNMP) access, and restrict the contents of
    routing updates. The Cisco IOS software stops checking the extended access list after a
    match occurs.
    - Remédiation : access-list <snmp_acl_number> permit
    access-list deny any log
    - Rational : SNMP ACLs control what addresses are authorized to manage and monitor the device
    via SNMP. If ACLs are not applied, then anyone with a valid SNMP community string
    may monitor and manage the router. An ACL should be defined and applied for all
    SNMP community strings to limit access to a small number of authorized management
    stations segmented in a trusted management zone.
    - Impact :
    - Audit : sh ip access-list <snmp_acl_number>
  
  
    ###1.5.7 - Set 'snmp-server host' when using SNMP
    - Commande : ``snmp-server host {ip_address} {trap_community_string}``
    - Niveau : Level 1
        La ligne : (1.5.7:snmp-server host {ip_address} {trap_community_string}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : SNMP notifications can be sent as traps to authorized management systems.
    - Remédiation : snmp-server host {ip_address} {trap_community_string}
    - Rational : If SNMP is enabled for device management and device alerts are required, then ensure
    the device is configured to submit traps only to authorize management systems.
    - Impact : Organizations using SNMP should restrict sending SNMP messages only to explicitly
    named systems to reduce unauthorized access.
    - Audit : show run | incl snmp-server
  
  
    ###1.5.8 - Set 'snmp-server enable traps snmp'
    - Commande : ``snmp-server enable traps snmp authentication linkup linkdown
    snmp-server group {group_name} v3 priv
    snmp-server user {user_name} {group_name} v3 auth sha``
    - Niveau : Level 1
        La ligne : (1.5.8:snmp-server enable traps snmp authentication linkup linkdown
    snmp-server group {group_name} v3 priv
    snmp-server user {user_name} {group_name} v3 auth sha) n'est pas présente dans la config de l'appareil ❌
  
    - Description : SNMP notifications can be sent as traps to authorized management systems.
    Specifies authentication of a packet with encryption when using SNMPv3
    Specify the use of a minimum of 128-bit AES algorithm for encryption when using
    SNMPv3.
    - Remédiation : snmp-server enable traps snmp authentication linkup linkdown
    snmp-server group {group_name} v3 priv
    snmp-server user {user_name} {group_name} v3 auth sha
    - Rational : SNMP has the ability to submit traps .
    SNMPv3 provides much improved security over previous versions by offering options
    for Authentication and Encryption of messages. When configuring a user for SNMPv3
    you have the option of using a range of encryption schemes, or no encryption at all, to
    protect messages in transit. AES128 is the minimum strength encryption method that
    should be deployed.
    SNMPv3 provides much improved security over previous versions by offering options
    for Authentication and Encryption of messages. When configuring a user for SNMPv3
    you have the option of using a range of encryption schemes, or no encryption at all, to
    protect messages in transit. AES128 is the minimum strength encryption method that
    should be deployed.
    - Impact : Organizations using SNMP should restrict trap types only to explicitly named traps to
    reduce unintended traffic. Enabling SNMP traps without specifying trap type will enable
    all SNMP trap types.
    Organizations using SNMP can significantly reduce the risks of unauthorized access by
    using the 'snmp-server group v3 priv' setting to encrypt messages in transit.
    Organizations using SNMP can significantly reduce the risks of unauthorized access by
    using the 'snmp-server user' setting with appropriate authentication and privacy
    protocols to encrypt messages in transit.
    - Audit : show run | incl snmp-server
    show snmp group
    show snmp user
  
  
    ###1.6.1 - Configure Login Block
    - Commande : ``(config)login block-for {**seconds**} attempts {**tries**} within
    (config)login quiet-mode access class {**acl-name | acl-number**}
    (config)login delay {**seconds**}``
    - Niveau : Level 2
        La ligne : (1.6.1:(config)login block-for {**seconds**} attempts {**tries**} within
    (config)login quiet-mode access class {**acl-name | acl-number**}
    (config)login delay {**seconds**}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : All login parameters are disabled by default. You must issue the login block-for
    command, which enables default login functionality, before using any other login
    commands. After the login block-for command is enabled, the following defaults are
    enforced:
    A default login delay of one second
    All login attempts made via Telnet or SSH are denied during the quiet period; that is, no
    ACLs are exempt from the login period until the login quiet-mode access-class
    command is issued.
    - Remédiation : (config)login block-for {**seconds**} attempts {**tries**} within
    (config)login quiet-mode access class {**acl-name | acl-number**}
    (config)login delay {**seconds**}
    - Rational : If the configured number of connection attempts fail within a specified time period, the
    Cisco device will not accept any additional connections for a “quiet period.” (Hosts that
    are permitted by a predefined access-control list [ACL] are excluded from the quiet
    period.)
    The number of failed connection attempts that trigger the quiet period can be specified
    via the new global configuration mode command login block-for . The predefined ACL
    that is excluded from the quiet period can be specified via the new global configuration
    mode command login quiet-mode access-class .
    - Impact :
    - Audit : show running-config | inc login block
  
  
    ###1.6.2 - AutoSecure
    - Commande : ``(config)auto secure {management | forwarding} {no-interact | full}
    (config)enable password {password | [encryption-type ] encrypted-
    security authentication failure rate {**threshold-rate**} log``
    - Niveau : Level 2
        La ligne : (1.6.2:(config)auto secure {management | forwarding} {no-interact | full}
    (config)enable password {password | [encryption-type ] encrypted-
    security authentication failure rate {**threshold-rate**} log) n'est pas présente dans la config de l'appareil ❌
  
    - Description : The AutoSecure feature secures a router by using a single CLI command to disable
    common IP services that can be exploited for network attacks, enable IP services and
    features that can aid in the defense of a network when under attack, and simplify and
    harden the security configuration of the router.
    - Remédiation : (config)auto secure {management | forwarding} {no-interact | full}
    (config)enable password {password | [encryption-type ] encrypted-
    security authentication failure rate {**threshold-rate**} log
    - Rational : After enabling this feature (through the auto secure command), the following global
    services are disabled on the router without prompting the user:
    Finger--Collects information about the system (reconnaissance) before an attack. If
    enabled, the information can leave your device vulnerable to attacks.
    PAD--Enables all packet assembler and disassembler (PAD) commands and
    connections between PAD devices and access servers. If enabled, it can leave your
    device vulnerable to attacks.
    Small Servers--Causes TCP and User Datagram Protocol (UDP) diagnostic port
    attacks: a sender transmits a volume of fake requests for UDP diagnostic services on
    the router, consuming all CPU resources.
    Bootp Server--Bootp is an insecure protocol that can be exploited for an attack.
    HTTP Server--Without secure-http or authentication embedded in the HTTP server with
    an associated ACL, the HTTP server is insecure and can be exploited for an attack. (If
    you must enable the HTTP server, you are prompted for the proper authentication or
    access list.) Identification Service--An insecure protocol, defined in RFC 1413, that
    allows one to query a TCP port for identification. An attacker can access private
    information about the user from the ID server.
    CDP--If a large number of Cisco Discovery Protocol (CDP) packets are sent to the
    router, the available memory of the router can be consumed, causing the router to
    crash. NTP--Without authentication or access-control, Network Time Protocol (NTP) is
    insecure and can be used by an attacker to send NTP packets to crash or overload the
    router. (If you want to turn on NTP, you must configure NTP authentication using
    Message Digest 5 (MD5) and the ntp access-group command. If NTP is enabled
    globally, disable it on all interfaces on which it is not needed.)
    Source Routing--Provided only for debugging purposes, so source routing should be
    disabled in all other cases. Otherwise, packets may slip away from some of the access
    control mechanisms that they should have gone through.
    Page 100
    - Impact : After enabling this feature, the following options in which to secure access to the router
    are available to the user:
    If a text banner does not exist, users are prompted to add a banner. This feature
    provides the following sample banner:
    Authorized access only This system is the property of ABC Enterprise Disconnect
    IMMEDIATELY if you are not an authorized user! Contact abc@xyz.com +99 876
    543210 for help. The login and password (preferably a secret password, if supported)
    are configured on the console, AUX, vty, and tty lines. The transport input and transport
    output commands are also configured on all of these lines. (Telnet and secure shell
    (SSH) are the only valid transport methods.) The exec-timeout command is configured
    on the console and AUX as 10.
    When the image on the device is a crypto image, AutoSecure enables SSH and secure
    copy (SCP) for access and file transfer to and from the router. The timeout seconds and
    authentication-retries integer options for the ip ssh command are configured to a
    minimum number. (Telnet and FTP are not affected by this operation and remain
    operational.)
    If the AutoSecure user specifies that their device does not use Simple Network
    Management Protocol (SNMP), one of the following functions occur: In interactive
    mode, the user is asked whether to disable SNMP regardless of the values of the
    community strings, which act like passwords to regulate access to the agent on the
    router. In non-interact mode, SNMP is disabled if the community string is “public” or
    “private.”
    - Audit : show auto secure config
  
  
    ###1.6.3 - Configuring Kerberos
    - Commande : ``ank {username@REALM}
    ank {username/instance@REALM
    ark {SERVICE/HOSTNAME@REALM}
    (config)kerberos local-realm {kerberos-realm}
    (config)kerberos server {kerberos-realm {hostname | ip-address}}
    (config)kerberos realm {dns-domain | host} {kerberos-realm}``
    - Niveau : Level 2
        La ligne : (1.6.3:ank {username@REALM}
    ank {username/instance@REALM
    ark {SERVICE/HOSTNAME@REALM}
    (config)kerberos local-realm {kerberos-realm}
    (config)kerberos server {kerberos-realm {hostname | ip-address}}
    (config)kerberos realm {dns-domain | host} {kerberos-realm}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Kerberos is a secret-key network authentication protocol, developed at the
    Massachusetts Institute of Technology (MIT), that uses the Data Encryption Standard
    (DES) cryptographic algorithm for encryption and authentication. Kerberos was
    designed to authenticate requests for network resources. Kerberos, like other secret-
    key systems, is based on the concept of a trusted third party that performs secure
    verification of users and services. In the Kerberos protocol, this trusted third party is
    called the key distribution center (KDC).
    The primary use of Kerberos is to verify that users and the network services they use
    are really who and what they claim to be. To accomplish this, a trusted Kerberos server
    issues tickets to users. These tickets, which have a limited lifespan, are stored in a
    user’s credential cache and can be used in place of the standard username-and-
    password authentication mechanism.
    The Kerberos credential scheme embodies a concept called “single logon.” This
    process requires authenticating a user once, and then allows secure authentication
    (without encrypting another password) wherever that user’s credential is accepted.
    Cisco IOS XE software includes Kerberos 5 support, which allows organizations already
    deploying Kerberos 5 to use the same Kerberos authentication database on their
    routers that they are already using on their other network hosts (such as UNIX servers
    and PCs).
    The following network services are supported by the Kerberos authentication
    capabilities in Cisco IOS XE software:
    Telnet
    rlogin
    rsh
    rcp
    - Remédiation : ank {username@REALM}
    ank {username/instance@REALM
    ark {SERVICE/HOSTNAME@REALM}
    (config)kerberos local-realm {kerberos-realm}
    (config)kerberos server {kerberos-realm {hostname | ip-address}}
    (config)kerberos realm {dns-domain | host} {kerberos-realm}
    - Rational : Authenticating to the Boundary Router This section describes the first layer of security
    that remote users must pass through when they attempt to access a network. The first
    step in the Kerberos authentication process is for users to authenticate themselves to
    the boundary router. The following process describes how users authenticate to a
    boundary router:
    Page 103
    - Impact : A remote user who successfully initiates a PPP session and authenticates to the
    boundary router is inside the firewall but still must authenticate to the KDC directly
    before being allowed to access network services. This is because the TGT issued by
    the KDC is stored on the router and is not useful for additional authentication unless the
    user physically logs on to the router.
    - Audit : show kerberos cred
  
  
    ###1.6.4 - Configure Web interface
    - Commande : ``(config)ip admission name {Name} proxy http
    (config)interface {type slot/port}
    (config)ip access-group {Name}
    (config)ip admission name
    (config)ip admission max-login-attempts {number}``
    - Niveau : Level 2
        La ligne : (1.6.4:(config)ip admission name {Name} proxy http
    (config)interface {type slot/port}
    (config)ip access-group {Name}
    (config)ip admission name
    (config)ip admission max-login-attempts {number}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Web-based authentication is an ingress-only feature.
    You can configure web-based authentication only on access ports. Web-based
    authentication is not supported on trunk ports, EtherChannel member ports, or dynamic
    trunk ports.
    External web authentication, where the switch redirects a client to a particular host or
    web server for displaying login message, is not supported.
    You cannot authenticate hosts on Layer 2 interfaces with static ARP cache assignment.
    These hosts are not detected by the web-based authentication feature because they do
    not send ARP messages.
    You must enable SISF-Based device tracking to use web-based authentication. By
    default, SISF-Based device tracking is disabled on a switch.
    You must configure at least one IP address to run the switch HTTP server. You must
    also configure routes to reach each host IP address. The HTTP server sends the HTTP
    login page to the host.
    Hosts that are more than one hop away might experience traffic disruption if an STP
    topology change results in the host traffic arriving on a different port. This occurs
    because the ARP and DHCP updates might not be sent after a Layer 2 (STP) topology
    change.
    Web-based authentication does not support VLAN assignment as a downloadable-host
    policy.
    Web-based authentication and Network Edge Access Topology (NEAT) are mutually
    exclusive. You cannot use web-based authentication when NEAT is enabled on an
    interface, and you cannot use NEAT when web-based authentication is running on an
    interface.
    Identify the following RADIUS security server settings that will be used while configuring
    switch-to-RADIUS-server communication:
    Host name
    Host IP address
    Host name and specific UDP port numbers
    IP address and specific UDP port numbers
    Page 105
    - Remédiation : (config)ip admission name {Name} proxy http
    (config)interface {type slot/port}
    (config)ip access-group {Name}
    (config)ip admission name
    (config)ip admission max-login-attempts {number}
    - Rational : The combination of the IP address and UDP port number creates a unique identifier,
    that enables RADIUS requests to be sent to multiple UDP ports on a server at the same
    IP address. If two different host entries on the same RADIUS server are configured for
    the same service (for example, authentication) the second host entry that is configured
    functions as the failover backup to the first one. The RADIUS host entries are chosen in
    the order that they were configured.
    - Impact :
    - Audit : show ip admission
  
  
    ###2.1.1.1.1 - Set the 'hostname'
    - Commande : ``hostname {router_name}``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : The hostname is used in prompts and default configuration filenames.
    - Remédiation : hostname {router_name}
    - Rational : The domain name is prerequisite for setting up SSH.
    - Impact : Organizations should plan the enterprise network and identify an appropriate host name
    for each router.
    - Audit : sh run | incl hostname
  
  
    ###2.1.1.1.2 - Set the 'ip domain-name'
    - Commande : ``ip domain-name {domain-name}
    crypto key generate rsa general-keys modulus 2048
    ip ssh time-out [60]
    ip ssh authentication-retries [3]``
    - Niveau : Level 1
        La ligne : (2.1.1.1.2:ip domain-name {domain-name}
    crypto key generate rsa general-keys modulus 2048
    ip ssh time-out [60]
    ip ssh authentication-retries [3]) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Define a default domain name that the Cisco IOS software uses to complete unqualified
    hostnames
    Use this command to generate RSA key pairs for your Cisco device.
    RSA keys are generated in pairs--one public RSA key and one private RSA key.
    The time interval that the router waits for the SSH client to respond before
    disconnecting an uncompleted login attempt.
    The number of retries before the SSH login session disconnects.
    - Remédiation : ip domain-name {domain-name}
    crypto key generate rsa general-keys modulus 2048
    ip ssh time-out [60]
    ip ssh authentication-retries [3]
    - Rational : The domain name is a prerequisite for setting up SSH.
    An RSA key pair is a prerequisite for setting up SSH and should be at least 2048 bits.
    NOTE: IOS does NOT display the modulus bit value in the Audit Procedure.
    This reduces the risk of an administrator leaving an authenticated session logged in for
    an extended period of time.
    This limits the number of times an unauthorized user can attempt a password without
    having to establish a new SSH login attempt. This reduces the potential for success
    during online brute force attacks by limiting the number of login attempts per SSH
    connection.
    - Impact : Organizations should plan the enterprise network and identify an appropriate domain
    name for the router.
    Organizations should plan and implement enterprise network cryptography and
    generate an appropriate RSA key pairs, such as 'modulus', greater than or equal to
    2048.
    Organizations should implement a security policy requiring minimum timeout settings for
    all network administrators and enforce the policy through the 'ip ssh timeout' command.
    Organizations should implement a security policy limiting the number of authentication
    attempts for network administrators and enforce the policy through the 'ip ssh
    authentication-retries' command.
    - Audit : sh run | incl domain-name
    sh crypto key mypubkey rsa
    sh ip ssh
    sh ip ssh
  
  
    ###2.1.1.2 - Set version 2 for 'ip ssh version'
    - Commande : ``ip ssh version 2``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Specify the version of Secure Shell (SSH) to be run on a router
    - Remédiation : ip ssh version 2
    - Rational : SSH Version 1 has been subject to a number of serious vulnerabilities and is no longer
    considered to be a secure protocol, resulting in the adoption of SSH Version 2 as an
    Internet Standard in 2006.
    Cisco routers support both versions, but due to the weakness of SSH Version 1 only the
    later standard should be used.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy to review their current protocols to ensure the most secure protocol versions are
    in use.
    - Audit : sh ip ssh
  
  
    ###2.1.2 - Set 'no cdp run'
    - Commande : ``no cdp run``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Disable Cisco Discovery Protocol (CDP) service at device level.
    - Remédiation : no cdp run
    - Rational : The Cisco Discovery Protocol is a proprietary protocol that Cisco devices use to identify
    each other on a LAN segment. It is useful only in network monitoring and
    troubleshooting situations but is considered a security risk because of the amount of
    information provided from queries. In addition, there have been published denial-of-
    service (DoS) attacks that use CDP. CDP should be completely disabled unless
    necessary.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting network protocols and explicitly require disabling all insecure or
    unnecessary protocols.
    - Audit : show cdp
  
  
    ###2.1.3 - Set 'no ip bootp server'
    - Commande : ``ip dhcp bootp ignore``
    - Niveau : Level 1
        La ligne : (2.1.3:ip dhcp bootp ignore) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable the Bootstrap Protocol (BOOTP) service on your routing device.
    - Remédiation : ip dhcp bootp ignore
    - Rational : BootP allows a router to issue IP addresses. This should be disabled unless there is a
    specific requirement.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting network protocols and explicitly require disabling all insecure or
    unnecessary protocols such as 'ip bootp server'.
    - Audit : show run | incl bootp
  
  
    ###2.1.4 - Set 'no service dhcp'
    - Commande : ``<strong>no service dhcp</strong>``
    - Niveau : Level 1
        La ligne : (2.1.4:<strong>no service dhcp</strong>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable the Dynamic Host Configuration Protocol (DHCP) server and relay agent
    features on your router.
    - Remédiation : <strong>no service dhcp</strong>
    - Rational : The DHCP server supplies automatic configuration parameters, such as dynamic IP
    address, to requesting systems. A dedicated server located in a secured management
    zone should be used to provide DHCP services instead. Attackers can potentially be
    used for denial-of-service (DoS) attacks.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting network protocols and explicitly require disabling all insecure or
    unnecessary protocols such as the Dynamic Host Configuration Protocol (DHCP).
    - Audit : show run | incl dhcp
  
  
    ###2.1.5 - Set 'no ip identd'
    - Commande : ``no ip identd``
    - Niveau : Level 1
        La ligne : (2.1.5:no ip identd) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable the identification (identd) server.
    - Remédiation : no ip identd
    - Rational : Identification protocol enables identifying a user's transmission control protocol (TCP)
    session. This information disclosure could potentially provide an attacker with
    information about users.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting network protocols and explicitly require disabling all insecure or
    unnecessary protocols such as the identification protocol (identd).
    - Audit : show run | incl identd
  
  
    ###2.1.6 - Set 'service tcp-keepalives-in'
    - Commande : ``service tcp-keepalives-in``
    - Niveau : Level 1
        La ligne : (2.1.6:service tcp-keepalives-in) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Generate keepalive packets on idle incoming network connections.
    - Remédiation : service tcp-keepalives-in
    - Rational : Stale connections use resources and could potentially be hijacked to gain illegitimate
    access. The TCP keepalives-in service generates keepalive packets on idle incoming
    network connections (initiated by remote host). This service allows the device to detect
    when the remote host fails and drop the session. If enabled, keepalives are sent once
    per minute on idle connections. The connection is closed within five minutes if no
    keepalives are received or immediately if the host replies with a reset packet.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting how long to allow terminated sessions and enforce this policy through
    the use of 'tcp-keepalives-in' command.
    - Audit : show run | incl service tcp
  
  
    ###2.1.7 - Set 'service tcp-keepalives-out'
    - Commande : ``service tcp-keepalives-out``
    - Niveau : Level 1
        La ligne : (2.1.7:service tcp-keepalives-out) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Generate keepalive packets on idle outgoing network connections.
    - Remédiation : service tcp-keepalives-out
    - Rational : Stale connections use resources and could potentially be hijacked to gain illegitimate
    access. The TCP keepalives-in service generates keepalive packets on idle incoming
    network connections (initiated by remote host). This service allows the device to detect
    when the remote host fails and drop the session. If enabled, keepalives are sent once
    per minute on idle connections. The closes connection is closed within five minutes if no
    keepalives are received or immediately if the host replies with a reset packet.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting how long to allow terminated sessions and enforce this policy through
    the use of 'tcp-keepalives-out' command.
    - Audit : show run | incl service tcp
  
  
    ###2.1.8 - Set 'no service pad'
    - Commande : ``no service pad``
    - Niveau : Level 1
        La ligne : (2.1.8:no service pad) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable X.25 Packet Assembler/Disassembler (PAD) service.
    - Remédiation : no service pad
    - Rational : If the PAD service is not necessary, disable the service to prevent intruders from
    accessing the X.25 PAD command set on the router.
    - Impact : To reduce the risk of unauthorized access, organizations should implement a security
    policy restricting unnecessary services such as the 'PAD' service.
    - Audit : show run | incl service pad
  
  
    ###2.2.1 - Set 'logging enable'
    - Commande : ``archive
    log config
    logging enable
    end``
    - Niveau : Level 1
        La ligne : (2.2.1:archive
    log config
    logging enable
    end) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable logging of system messages.
    - Remédiation : archive
    log config
    logging enable
    end
    - Rational : Logging provides a chronological record of activities on the Cisco device and allows
    monitoring of both operational and security related events.
    - Impact : Enabling the Cisco IOS 'logging enable' command enforces the monitoring of
    technology risks for the organizations' network devices.
    - Audit : show run | i logging host
  
  
    ###2.2.2 - Set 'buffer size' for 'logging buffered'
    - Commande : ``logging buffered [log_buffer_size]``
    - Niveau : Level 1
        La ligne : (2.2.2:logging buffered [log_buffer_size]) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable system message logging to a local buffer.
    - Remédiation : logging buffered [log_buffer_size]
    - Rational : The device can copy and store log messages to an internal memory buffer. The
    buffered data is available only from a router exec or enabled exec session. This form of
    logging is useful for debugging and monitoring when logged in to a router.
    - Impact : Data forensics is effective for managing technology risks and an organization can
    enforce such policies by enabling the 'logging buffered' command.
    - Audit : show run | incl logging buffered
  
  
    ###2.2.3 - Set 'logging console critical'
    - Commande : ``logging console critical``
    - Niveau : Level 1
        La ligne : (2.2.3:logging console critical) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Verify logging to device console is enabled and limited to a rational severity level to
    avoid impacting system performance and management.
    - Remédiation : logging console critical
    - Rational : This configuration determines the severity of messages that will generate console
    messages. Logging to console should be limited only to those messages required for
    immediate troubleshooting while logged into the device. This form of logging is not
    persistent; messages printed to the console are not stored by the router. Console
    logging is handy for operators when they use the console.
    - Impact : Logging critical messages at the console is important for an organization managing
    technology risk. The 'logging console' command should capture appropriate severity
    messages to be effective.
    - Audit : show run | incl logging console
  
  
    ###2.2.4 - Set IP address for 'logging host'
    - Commande : ``logging host {syslog_server}``
    - Niveau : Level 1
        La ligne : (2.2.4:logging host {syslog_server}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Log system messages and debug output to a remote host.
    - Remédiation : logging host {syslog_server}
    - Rational : Cisco routers can send their log messages to a Unix-style Syslog service. A syslog
    service simply accepts messages and stores them in files or prints them according to a
    simple configuration file. This form of logging is best because it can provide protected
    long-term storage for logs (the devices internal logging buffer has limited capacity to
    store events.) In addition, logging to an external system is highly recommended or
    required by most security standards. If desired or required by policy, law and/or
    regulation, enable a second syslog server for redundancy.
    - Impact : Logging is an important process for an organization managing technology risk. The
    'logging host' command sets the IP address of the logging host and enforces the logging
    process.
    - Audit : sh log | incl logging host
  
  
    ###2.2.5 - Set 'logging trap informational'
    - Commande : ``logging trap informational``
    - Niveau : Level 1
        La ligne : (2.2.5:logging trap informational) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Limit messages logged to the syslog servers based on severity level informational.
    - Remédiation : logging trap informational
    - Rational : This determines the severity of messages that will generate simple network
    management protocol (SNMP) trap and or syslog messages. This setting should be set
    to either "debugging" (7) or "informational" (6), but no lower.
    - Impact : Logging is an important process for an organization managing technology risk. The
    'logging trap' command sets the severity of messages and enforces the logging
    process.
    - Audit : sh log | incl trap logging
  
  
    ###2.2.6 - Set 'service timestamps debug datetime'
    - Commande : ``service timestamps debug datetime {msec} show-``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Configure the system to apply a time stamp to debugging messages or system logging
    messages
    - Remédiation : service timestamps debug datetime {msec} show-
    - Rational : Including timestamps in log messages allows correlating events and tracing network
    attacks across multiple devices. Enabling service timestamp to mark the time log
    messages were generated simplifies obtaining a holistic view of events enabling faster
    troubleshooting of issues or attacks.
    - Impact : Logging is an important process for an organization managing technology risk and
    establishing a timeline of events is critical. The 'service timestamps' command sets the
    date and time on entries sent to the logging host and enforces the logging process.
    - Audit : sh run | incl service timestamps
  
  
    ###2.2.7 - Set 'logging source interface'
    - Commande : ``logging source-interface loopback``
    - Niveau : Level 1
        La ligne : (2.2.7:logging source-interface loopback) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Specify the source IPv4 or IPv6 address of system logging packets
    - Remédiation : logging source-interface loopback
    - Rational : This is required so that the router sends log messages to the logging server from a
    consistent IP address.
    - Impact : Logging is an important process for an organization managing technology risk and
    establishing a consistent source of messages for the logging host is critical. The 'logging
    source interface loopback' command sets a consistent IP address to send messages to
    the logging host and enforces the logging process.
    - Audit : sh run | incl logging source
  
  
    ###2.2.8 - Set 'login success/failure logging'
    - Commande : ``login on-failure log
    login on-success log
    end``
    - Niveau : Level 2
        La ligne : (2.2.8:login on-failure log
    login on-success log
    end) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Without generating audit records that are specific to the security and mission needs of
    the organization, it would be difficult to establish, correlate, and investigate the events
    relating to an incident or identify those responsible for one.
    - Remédiation : login on-failure log
    login on-success log
    end
    - Rational : Audit records can be generated from various components within the information system
    (e.g., module or policy filter).
    - Impact :
    - Audit : sho running-config | inc login on-
  
  
    ###2.3.1.1 - Set 'ntp authenticate'
    - Commande : ``ntp authenticate``
    - Niveau : Level 2
        La ligne : (2.3.1.1:ntp authenticate) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable NTP authentication.
    - Remédiation : ntp authenticate
    - Rational : Using authenticated NTP ensures the Cisco device only permits time updates from
    authorized NTP servers.
    - Impact : Organizations should establish three Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp authenticate' command enforces
    authentication between NTP hosts.
    - Audit : show run | include ntp
  
  
    ###2.3.1.2 - Set 'ntp authentication-key'
    - Commande : ``ntp authentication-key {ntp_key_id} md5 {ntp_key_hash}``
    - Niveau : Level 2
        La ligne : (2.3.1.2:ntp authentication-key {ntp_key_id} md5 {ntp_key_hash}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Define an authentication key for Network Time Protocol (NTP).
    - Remédiation : ntp authentication-key {ntp_key_id} md5 {ntp_key_hash}
    - Rational : Using an authentication key provides a higher degree of security as only authenticated
    NTP servers will be able to update time for the Cisco device.
    - Impact : Organizations should establish three Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp authentication-key' command
    enforces encrypted authentication between NTP hosts.
    - Audit : show run | include ntp authentication-key
  
  
    ###2.3.1.3 - Set the 'ntp trusted-key'
    - Commande : ``ntp trusted-key {ntp_key_id}``
    - Niveau : Level 2
        La ligne : (2.3.1.3:ntp trusted-key {ntp_key_id}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Ensure you authenticate the identity of a system to which Network Time Protocol (NTP)
    will synchronize
    - Remédiation : ntp trusted-key {ntp_key_id}
    - Rational : This authentication function provides protection against accidentally synchronizing the
    system to another system that is not trusted, because the other system must know the
    correct authentication key.
    - Impact : Organizations should establish three Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp trusted-key' command enforces
    encrypted authentication between NTP hosts.
    - Audit : show run | include ntp trusted-key
  
  
    ###2.3.1.4 - Set 'key' for each 'ntp server'
    - Commande : ``ntp server {ntp-server_ip_address}{key``
    - Niveau : Level 2
  
    Présente dans la config ✅
  
  
  
    - Description : Specifies the authentication key for NTP.
    - Remédiation : ntp server {ntp-server_ip_address}{key
    - Rational : This authentication feature provides protection against accidentally synchronizing the
    ntp system to another system that is not trusted, because the other system must know
    the correct authentication key.
    - Impact : Organizations should establish three Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp server key' command enforces
    encrypted authentication between NTP hosts.
    - Audit : show run | include ntp server
  
  
    ###2.3.2 - Set 'ip address' for 'ntp server'
    - Commande : ``ntp server {ntp-server_ip_address}
    ntp server {ntp server vrf [vrf name] ip address}``
    - Niveau : Level 1
  
    Présente dans la config ✅
  
  
  
    - Description : Use this command if you want to allow the system to synchronize the system software
    clock with the specified NTP server.
    - Remédiation : ntp server {ntp-server_ip_address}
    ntp server {ntp server vrf [vrf name] ip address}
    - Rational : To ensure that the time on your Cisco router is consistent with other devices in your
    network, at least two (and preferably at least three) NTP Server/s external to the router
    should be configured.
    Ensure you also configure consistent timezone and daylight savings time setting for all
    devices. For simplicity, the default of Coordinated Universal Time (UTC).
    - Impact : Organizations should establish multiple Network Time Protocol (NTP) hosts to set
    consistent time across the enterprise. Enabling the 'ntp server ip address' enforces
    encrypted authentication between NTP hosts.
    - Audit : sh ntp associations
  
  
    ###2.4.1 - Create a single 'interface loopback'
    - Commande : ``interface loopback <number>
    ip address <loopback_ip_address>``
    - Niveau : Level 2
        La ligne : (2.4.1:interface loopback <number>
    ip address <loopback_ip_address>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure a single loopback interface.
    - Remédiation : interface loopback <number>
    ip address <loopback_ip_address>
    - Rational : Software-only loopback interface that emulates an interface that is always up. It is a
    virtual interface supported on all platforms.
    Alternate loopback addresses create a potential for abuse, mis-configuration, and
    inconsistencies. Additional loopback interfaces must be documented and approved prior
    to use by local security personnel.
    - Impact : Organizations should plan and establish 'loopback interfaces' for the enterprise network.
    Loopback interfaces enable critical network information such as OSPF Router IDs and
    provide termination points for routing protocol sessions.
    - Audit : sh ip int brief | incl Loopback
  
  
    ###2.4.2 - Set AAA 'source-interface'
    - Commande : ``ip radius source-interface loopback
    aaa group server tacacs+ {group_name} hostname(config-sg-
    ip tacacs source-interface {loopback_interface_number}``
    - Niveau : Level 2
        La ligne : (2.4.2:ip radius source-interface loopback
    aaa group server tacacs+ {group_name} hostname(config-sg-
    ip tacacs source-interface {loopback_interface_number}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Force AAA to use the IP address of a specified interface for all outgoing AAA packets
    - Remédiation : ip radius source-interface loopback
    aaa group server tacacs+ {group_name} hostname(config-sg-
    ip tacacs source-interface {loopback_interface_number}
    - Rational : This is required so that the AAA server (RADIUS or TACACS+) can easily identify
    routers and authenticate requests by their IP address.
    - Impact : Organizations should design and implement authentication, authorization, and
    accounting (AAA) services for effective monitoring of enterprise network devices.
    Binding AAA services to the source-interface loopback enables these services.
    - Audit : sh run | incl tacacs source | radius source
  
  
    ###2.4.3 - Set 'ntp source' to Loopback Interface
    - Commande : ``ntp source loopback {loopback_interface_number}
    ip tftp source-interface loopback``
    - Niveau : Level 2
        La ligne : (2.4.3:ntp source loopback {loopback_interface_number}
    ip tftp source-interface loopback) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Use a particular source address in Network Time Protocol (NTP) packets.
    Specify the IP address of an interface as the source address for TFTP connections.
    - Remédiation : ntp source loopback {loopback_interface_number}
    ip tftp source-interface loopback
    - Rational : Set the source address to be used when sending NTP traffic. This may be required if
    the NTP servers you peer with filter based on IP address.
    This is required so that the TFTP servers can easily identify routers and authenticate
    requests by their IP address.
    - Impact : Organizations should plan and implement network time protocol (NTP) services to
    establish official time for all enterprise network devices. Setting 'ntp source loopback'
    enforces the proper IP address for NTP services.
    Organizations should plan and implement trivial file transfer protocol (TFTP) services in
    the enterprise by setting 'tftp source-interface loopback', which enables the TFTP
    servers to identify routers and authenticate requests by IP address.
    - Audit : sh run | incl ntp source
    sh run | incl tftp source-interface
  
  
    ###3.1.1 - Set 'no ip source-route'
    - Commande : ``no ip source-route``
    - Niveau : Level 1
        La ligne : (3.1.1:no ip source-route) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable the handling of IP datagrams with source routing header options.
    - Remédiation : no ip source-route
    - Rational : Source routing is a feature of IP whereby individual packets can specify routes. This
    feature is used in several kinds of attacks. Cisco routers normally accept and process
    source routes. Unless a network depends on source routing, it should be disabled.
    - Impact : Organizations should plan and implement network policies to ensure unnecessary
    services are explicitly disabled. The 'ip source-route' feature has been used in several
    attacks and should be disabled.
    - Audit : sh run | incl ip source-route
  
  
    ###3.1.2 - Set 'no ip proxy-arp'
    - Commande : ``interface {interface}
    no ip proxy-arp``
    - Niveau : Level 2
        La ligne : (3.1.2:interface {interface}
    no ip proxy-arp) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Disable proxy ARP on all interfaces.
    - Remédiation : interface {interface}
    no ip proxy-arp
    - Rational : Address Resolution Protocol (ARP) provides resolution between IP and MAC
    Addresses (or other Network and Link Layer addresses on none IP networks) within a
    Layer 2 network.
    Proxy ARP is a service where a device connected to one network (in this case the Cisco
    router) answers ARP Requests which are addressed to a host on another network,
    replying with its own MAC Address and forwarding the traffic on to the intended host.
    Sometimes used for extending broadcast domains across WAN links, in most cases
    Proxy ARP on enterprise networks is used to enable communication for hosts with mis-
    configured subnet masks, a situation which should no longer be a common problem.
    Proxy ARP effectively breaks the LAN Security Perimeter, extending a network across
    multiple Layer 2 segments. Using Proxy ARP can also allow other security controls such
    as PVLAN to be bypassed.
    - Impact : Organizations should plan and implement network policies to ensure unnecessary
    services are explicitly disabled. The 'ip proxy-arp' feature effectively breaks the LAN
    security perimeter and should be disabled.
    - Audit : sh ip int {interface} | incl proxy-arp
  
  
    ###3.1.3 - Set 'no interface tunnel'
    - Commande : ``no interface tunnel {instance}``
    - Niveau : Level 1
        La ligne : (3.1.3:no interface tunnel {instance}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Verify no tunnel interfaces are defined.
    - Remédiation : no interface tunnel {instance}
    - Rational : Tunnel interfaces should not exist in general. They can be used for malicious purposes.
    If they are necessary, the network admin's should be well aware of them and their
    purpose.
    - Impact : Organizations should plan and implement enterprise network security policies that
    disable insecure and unnecessary features that increase attack surfaces such as 'tunnel
    interfaces'.
    - Audit : sh ip int brief | incl tunnel
  
  
    ###3.1.4 - Set 'ip verify unicast source reachable-via'
    - Commande : ``interface {interface_name}
    ip verify unicast source reachable-via rx allow-default
    ip access-list extended {<span>name | number}
    deny ip
    deny ip 127.0.0.0 0.255.255.255 any log
    deny ip 10.0.0.0 0.255.255.255 any log
    deny ip 0.0.0.0 0.255.255.255 any log
    deny ip 172.16.0.0 0.15.255.255 any log
    deny ip 192.168.0.0 0.0.255.255 any log
    deny ip 192.0.2.0 0.0.0.255 any log
    deny ip 169.254.0.0 0.0.255.255 any log
    deny ip 224.0.0.0 31.255.255.255 any log
    deny ip host 255.255.255.255 any log
    permit {protocol} {source_ip}
    deny any any log
    interface <external_interface>
    access-group <access-list> in
    interface {external_interface}
    ip access-group {name | number} in``
    - Niveau : Level 1
        La ligne : (3.1.4:interface {interface_name}
    ip verify unicast source reachable-via rx allow-default
    ip access-list extended {<span>name | number}
    deny ip
    deny ip 127.0.0.0 0.255.255.255 any log
    deny ip 10.0.0.0 0.255.255.255 any log
    deny ip 0.0.0.0 0.255.255.255 any log
    deny ip 172.16.0.0 0.15.255.255 any log
    deny ip 192.168.0.0 0.0.255.255 any log
    deny ip 192.0.2.0 0.0.0.255 any log
    deny ip 169.254.0.0 0.0.255.255 any log
    deny ip 224.0.0.0 31.255.255.255 any log
    deny ip host 255.255.255.255 any log
    permit {protocol} {source_ip}
    deny any any log
    interface <external_interface>
    access-group <access-list> in
    interface {external_interface}
    ip access-group {name | number} in) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Examines incoming packets to determine whether the source address is in the
    Forwarding Information Base (FIB) and permits the packet only if the source is
    reachable through the interface on which the packet was received (sometimes referred
    to as strict mode).
    This command places the router in access-list configuration mode, where you must
    define the denied or permitted access conditions by using the deny and permit
    commands.
    This command places the router in access-list configuration mode, where you must
    define the denied or permitted access conditions by using the deny and permit
    commands.
    - Remédiation : interface {interface_name}
    ip verify unicast source reachable-via rx allow-default
    ip access-list extended {<span>name | number}
    deny ip
    deny ip 127.0.0.0 0.255.255.255 any log
    deny ip 10.0.0.0 0.255.255.255 any log
    deny ip 0.0.0.0 0.255.255.255 any log
    deny ip 172.16.0.0 0.15.255.255 any log
    deny ip 192.168.0.0 0.0.255.255 any log
    deny ip 192.0.2.0 0.0.0.255 any log
    deny ip 169.254.0.0 0.0.255.255 any log
    deny ip 224.0.0.0 31.255.255.255 any log
    deny ip host 255.255.255.255 any log
    permit {protocol} {source_ip}
    deny any any log
    interface <external_interface>
    access-group <access-list> in
    interface {external_interface}
    ip access-group {name | number} in
    - Rational : Enabled uRPF helps mitigate IP spoofing by ensuring only packet source IP addresses
    only originate from expected interfaces. Configure unicast reverse-path forwarding
    (uRPF) on all external or high risk interfaces.
    Configuring access controls can help prevent spoofing attacks. To reduce the
    effectiveness of IP spoofing, configure access control to deny any traffic from the
    external network that has a source address that should reside on the internal network.
    Include local host address or any reserved private addresses (RFC 1918).
    Ensure the permit rule(s) above the final deny rule only allow traffic according to your
    organization's least privilege policy.
    Configuring access controls can help prevent spoofing attacks. To reduce the
    effectiveness of IP spoofing, configure access control to deny any traffic from the
    external network that has a source address that should reside on the internal network.
    Include local host address or any reserved private addresses (RFC 1918).
    Ensure the permit rule(s) above the final deny rule only allow traffic according to your
    organization's least privilege policy.
    - Impact : Organizations should plan and implement enterprise security policies that protect the
    confidentiality, integrity, and availability of network devices. The 'unicast Reverse-Path
    Forwarding' (uRPF) feature dynamically uses the router table to either accept or drop
    packets when arriving on an interface.
    Organizations should plan and implement enterprise security policies that explicitly
    separate internal from external networks. Adding 'ip access-list' explicitly permitting and
    denying internal and external networks enforces these policies.
    Organizations should plan and implement enterprise security policies explicitly
    permitting and denying access based upon access lists. Using the 'ip access-group'
    command enforces these policies by explicitly identifying groups permitted access.
    - Audit : sh ip int {interface} | incl verify source
    sh ip access-list {name | number}
    sh run | sec interface {external_interface}
  
  
    ###3.3.1.1 - Set 'key chain'
    - Commande : ``key chain {key-chain_name}``
    - Niveau : Level 2
        La ligne : (3.3.1.1:key chain {key-chain_name}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Define an authentication key chain to enable authentication for routing protocols. A key
    chain must have at least one key and can have up to 2,147,483,647 keys.
    NOTE: Only DRP Agent, EIGRP, and RIPv2 use key chains.
    - Remédiation : key chain {key-chain_name}
    - Rational : Routing protocols such as DRP Agent, EIGRP, and RIPv2 use key chains for
    authentication.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'key chains' for routing
    protocols enforces these policies.
    - Audit : sh run | sec key chain
  
  
    ###3.3.1.2 - Set 'key'
    - Commande : ``key {key-number}``
    - Niveau : Level 2
  
    Présente dans la config ✅
  
  
  
    - Description : Configure an authentication key on a key chain.
    - Remédiation : key {key-number}
    - Rational : This is part of the routing authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'key numbers' for key
    chains for routing protocols enforces these policies.
    - Audit : sh run | sec key chain
  
  
    ###3.3.1.3 - Set 'key-string'
    - Commande : ``key-string <key-string>``
    - Niveau : Level 2
        La ligne : (3.3.1.3:key-string <key-string>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the authentication string for a key.
    - Remédiation : key-string <key-string>
    - Rational : This is part of the routing authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'key strings' for key chains
    for routing protocols enforces these policies.
    - Audit : sh run | sec key chain
  
  
    ###3.3.1.4 - Set 'address-family ipv4 autonomous-system'
    - Commande : ``router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-``
    - Niveau : Level 2
        La ligne : (3.3.1.4:router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the EIGRP address family.
    - Remédiation : router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    - Rational : Rationale: EIGRP is a true multi-protocol routing protocol and the 'address-family'
    feature enables restriction of exchanges with specific neighbors
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'address-family' for EIGRP
    enforces these policies by restricting the exchanges between predefined network
    devices.
    - Audit : sh run | sec router eigrp
  
  
    ###3.3.1.5 - Set 'af-interface default'
    - Commande : ``router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface default``
    - Niveau : Level 2
        La ligne : (3.3.1.5:router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface default) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Defines user defaults to apply to EIGRP interfaces that belong to an address-family.
    - Remédiation : router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface default
    - Rational : Part of the EIGRP address-family setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'af-interface default' for
    EIGRP interfaces enforces these policies by restricting the exchanges between
    predefined network devices.
    - Audit : sh run | sec router eigrp
  
  
    ###3.3.1.6 - Set 'authentication key-chain'
    - Commande : ``router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication key-chain {eigrp_key-``
    - Niveau : Level 2
        La ligne : (3.3.1.6:router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication key-chain {eigrp_key-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the EIGRP address family key chain.
    - Remédiation : router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication key-chain {eigrp_key-
    - Rational : This is part of the EIGRP authentication configuration
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using the address-family 'key
    chain' for EIGRP enforces these policies by restricting the exchanges between
    predefined network devices.
    - Audit : sh run | sec router eigrp
  
  
    ###3.3.1.7 - Set 'authentication mode md5'
    - Commande : ``router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication mode md5``
    - Niveau : Level 1
        La ligne : (3.3.1.7:router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication mode md5) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure authentication to prevent unapproved sources from introducing unauthorized
    or false service messages.
    - Remédiation : router eigrp <virtual-instance-name>
    address-family ipv4 autonomous-system {eigrp_as-
    af-interface {interface-name}
    authentication mode md5
    - Rational : This is part of the EIGRP authentication configuration
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using the 'authentication mode'
    for EIGRP address-family or service-family packets enforces these policies by
    restricting the type of authentication between network devices.
    - Audit : sh run | sec router eigrp
  
  
    ###3.3.1.8 - Set 'ip authentication key-chain eigrp'
    - Commande : ``interface {interface_name}
    ip authentication key-chain eigrp {eigrp_as-``
    - Niveau : Level 2
        La ligne : (3.3.1.8:interface {interface_name}
    ip authentication key-chain eigrp {eigrp_as-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Specify the type of authentication used in Enhanced Interior Gateway Routing Protocol
    (EIGRP) packets per interface.
    - Remédiation : interface {interface_name}
    ip authentication key-chain eigrp {eigrp_as-
    - Rational : Configuring EIGRP authentication key-chain number and name to restrict packet
    exchanges between network devices.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the interface with 'ip
    authentication key chain' for EIGRP by name and number enforces these policies by
    restricting the exchanges between network devices.
    - Audit : sh ip eigrp int
    sh run int {interface_name} | incl key-chain
  
  
    ###3.3.1.9 - Set 'ip authentication mode eigrp'
    - Commande : ``interface {interface_name}
    ip authentication mode eigrp {<span>eigrp_as-
    router ospf <ospf_process-id>
    area <ospf_area-id> authentication message-``
    - Niveau : Level 2
        La ligne : (3.3.1.9:interface {interface_name}
    ip authentication mode eigrp {<span>eigrp_as-
    router ospf <ospf_process-id>
    area <ospf_area-id> authentication message-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure authentication to prevent unapproved sources from introducing unauthorized
    or false routing messages.
    Enable MD5 authentication for OSPF.
    - Remédiation : interface {interface_name}
    ip authentication mode eigrp {<span>eigrp_as-
    router ospf <ospf_process-id>
    area <ospf_area-id> authentication message-
    - Rational : This is part of the EIGRP authentication configuration
    This is part of the OSPF authentication setup.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the interface with 'ip
    authentication mode' for EIGRP by number and mode enforces these policies by
    restricting the exchanges between network devices.
    Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the area
    'authentication message-digest' for OSPF enforces these policies by restricting
    exchanges between network devices.
    - Audit : sh ip eigrp int
    sh run int {interface_name} | incl authentication mode
    sh run | sec router ospf
  
  
    ###3.3.2.2 - Set 'ip ospf message-digest-key md5'
    - Commande : ``interface {interface_name}
    ip ospf message-digest-key {ospf_md5_key-id} md5``
    - Niveau : Level 2
        La ligne : (3.3.2.2:interface {interface_name}
    ip ospf message-digest-key {ospf_md5_key-id} md5) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable Open Shortest Path First (OSPF) Message Digest 5 (MD5) authentication.
    - Remédiation : interface {interface_name}
    ip ospf message-digest-key {ospf_md5_key-id} md5
    - Rational : This is part of the OSPF authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the proper
    interface(s) for 'ip ospf message-digest-key md5' enforces these policies by restricting
    exchanges between network devices.
    - Audit : sh run int {interface}
  
  
    ###3.3.3.1 - Set 'key chain'
    - Commande : ``key chain {rip_key-chain_name}``
    - Niveau : Level 2
        La ligne : (3.3.3.1:key chain {rip_key-chain_name}) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Define an authentication key chain to enable authentication for RIPv2 routing protocols.
    - Remédiation : key chain {rip_key-chain_name}
    - Rational : This is part of the routing authentication process.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the proper
    authentication 'key-chain (name)' for RIPv2 protocols enforces these policies by
    restricting acceptable authentication between network devices.
    - Audit : sh run | sec key chain
  
  
    ###3.3.3.2 - Set 'key'
    - Commande : ``key {key-number}``
    - Niveau : Level 2
  
    Présente dans la config ✅
  
  
  
    - Description : Configure an authentication key on a key chain.
    - Remédiation : key {key-number}
    - Rational : This is part of the routing authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the proper
    authentication 'key' for RIPv2 protocols enforces these policies by restricting acceptable
    authentication between network devices.
    - Audit : sh run | sec key chain
  
  
    ###3.3.3.3 - Set 'key-string'
    - Commande : ``key-string <key-string>``
    - Niveau : Level 2
        La ligne : (3.3.3.3:key-string <key-string>) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the authentication string for a key.
    - Remédiation : key-string <key-string>
    - Rational : This is part of the routing authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using 'key-string' for key chains
    for routing protocols enforces these policies.
    - Audit : sh run | sec key chain
  
  
    ###3.3.3.4 - Set 'ip rip authentication key-chain'
    - Commande : ``interface {interface_name}
    ip rip authentication key-chain {rip_key-``
    - Niveau : Level 2
        La ligne : (3.3.3.4:interface {interface_name}
    ip rip authentication key-chain {rip_key-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable authentication for Routing Information Protocol (RIP) Version 2 packets and to
    specify the set of keys that can be used on an interface.
    - Remédiation : interface {interface_name}
    ip rip authentication key-chain {rip_key-
    - Rational : This is part of the RIPv2 authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Configuring the interface with 'ip
    rip authentication key-chain' by name enforces these policies by restricting the
    exchanges between network devices.
    - Audit : sh run int {interface_name}
  
  
    ###3.3.3.5 - Set 'ip rip authentication mode' to 'md5'
    - Commande : ``interface <interface_name>
    ip rip authentication mode md5``
    - Niveau : Level 2
        La ligne : (3.3.3.5:interface <interface_name>
    ip rip authentication mode md5) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Configure the Interface with the RIPv2 key chain.
    - Remédiation : interface <interface_name>
    ip rip authentication mode md5
    - Rational : This is part of the RIPv2 authentication setup
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using the 'ip rip authentication
    mode md5' enforces these policies by restricting the type of authentication between
    network devices.
    - Audit : sh run int <interface>
  
  
    ###3.3.4.1 - Set 'neighbor password'
    - Commande : ``router bgp <bgp_as-number>
    neighbor <bgp_neighbor-ip | peer-group-``
    - Niveau : Level 2
        La ligne : (3.3.4.1:router bgp <bgp_as-number>
    neighbor <bgp_neighbor-ip | peer-group-) n'est pas présente dans la config de l'appareil ❌
  
    - Description : Enable message digest5 (MD5) authentication on a TCP connection between two BGP
    peers
    - Remédiation : router bgp <bgp_as-number>
    neighbor <bgp_neighbor-ip | peer-group-
    - Rational : Enforcing routing authentication reduces the likelihood of routing poisoning and
    unauthorized routers from joining BGP routing.
    - Impact : Organizations should plan and implement enterprise security policies that require
    rigorous authentication methods for routing protocols. Using the 'neighbor password' for
    BGP enforces these policies by restricting the type of authentication between network
    devices.
    - Audit : sh run | sec router bgp
  
  
  
    Résumé:
  
    ✅ 12 règles présentes sur 78
    ❌ 66 règles absentes sur 78
    Il y'a 9 règles de niveau 1
    Il y'a 3 règles de niveau 2
2025-06-13 01:48:27,692 p=17397 u=user n=ansible | TASK [cisco : Correction de toute la configuration] *****************************
2025-06-13 01:48:27,712 p=17397 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:48:27,715 p=17397 u=user n=ansible | TASK [cisco : cherry-pick fzf] **************************************************
2025-06-13 01:48:27,735 p=17397 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:48:27,738 p=17397 u=user n=ansible | TASK [Appareils Pfsense] ********************************************************
2025-06-13 01:48:27,760 p=17397 u=user n=ansible | skipping: [192.168.122.237]
2025-06-13 01:48:27,766 p=17397 u=user n=ansible | PLAY RECAP **********************************************************************
2025-06-13 01:48:27,766 p=17397 u=user n=ansible | 192.168.122.237            : ok=11   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2025-06-13 01:48:27,866 p=17403 u=user n=ansible | shutdown complete
